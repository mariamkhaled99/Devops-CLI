{
  "autoscaling_group": {
    "description": "Create or delete AWS AutoScaling Groups (ASGs)",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/autoscaling_group_module.html#ansible-collections-amazon-aws-autoscaling-group-module",
    "return_values": {
      "auto_scaling_group_arn": {
        "description": "The unique ARN of the autoscaling group",
        "type": "string",
        "returned": "success",
        "sample": "\"arn:aws:autoscaling:us-east-1:123456789012:autoScalingGroup:6a09ad6d-eeee-1234-b987-ee123ced01ad:autoScalingGroupName/myasg\""
      },
      "auto_scaling_group_name": {
        "description": "The unique name of the auto scaling group",
        "type": "string",
        "returned": "success",
        "sample": "\"myasg\""
      },
      "availability_zones": {
        "description": "The availability zones for the auto scaling group",
        "type": "list",
        "returned": "success",
        "elements": "elements=string",
        "sample": "[\"us-east-1d\"]"
      },
      "created_time": {
        "description": "Timestamp of create time of the auto scaling group",
        "type": "string",
        "returned": "success",
        "sample": "\"2017-11-08T14:41:48.272000+00:00\""
      },
      "default_cooldown": {
        "description": "The default cooldown time in seconds.",
        "type": "integer",
        "returned": "success",
        "sample": "300"
      },
      "desired_capacity": {
        "description": "The number of EC2 instances that should be running in this group.",
        "type": "integer",
        "returned": "success",
        "sample": "3"
      },
      "healthcheck_period": {
        "description": "Length of time in seconds after a new EC2 instance comes into service that Auto Scaling starts checking its health.",
        "type": "integer",
        "returned": "success",
        "sample": "30"
      },
      "healthcheck_type": {
        "description": "The service you want the health status from, one of \u201cEC2\u201d or \u201cELB\u201d.",
        "type": "string",
        "returned": "success",
        "sample": "\"ELB\""
      },
      "healthy_instances": {
        "description": "Number of instances in a healthy state",
        "type": "integer",
        "returned": "success",
        "sample": "5"
      },
      "in_service_instances": {
        "description": "Number of instances in service",
        "type": "integer",
        "returned": "success",
        "sample": "3"
      },
      "instance_facts": {
        "description": "Dictionary of EC2 instances and their status as it relates to the ASG.",
        "type": "dictionary",
        "returned": "success",
        "sample": "{\"i-0123456789012\": {\"health_status\": \"Healthy\", \"launch_config_name\": \"public-webapp-production-1\", \"lifecycle_state\": \"InService\"}}"
      },
      "instances": {
        "description": "list of instance IDs in the ASG",
        "type": "list",
        "returned": "success",
        "elements": "elements=string",
        "sample": "[\"i-0123456789012\"]"
      },
      "launch_config_name": {
        "description": "Name of launch configuration associated with the ASG. Same as launch_configuration_name, provided for compatibility with amazon.aws.autoscaling_group module.",
        "type": "string",
        "returned": "success",
        "sample": "\"public-webapp-production-1\""
      },
      "load_balancers": {
        "description": "List of load balancers names attached to the ASG.",
        "type": "list",
        "returned": "success",
        "elements": "elements=string",
        "sample": "[\"elb-webapp-prod\"]"
      },
      "max_instance_lifetime": {
        "description": "The maximum amount of time, in seconds, that an instance can be in service.",
        "type": "integer",
        "returned": "success",
        "sample": "604800"
      },
      "max_size": {
        "description": "Maximum size of group",
        "type": "integer",
        "returned": "success",
        "sample": "3"
      },
      "metrics_collection": {
        "description": "List of enabled AutosSalingGroup metrics",
        "type": "list",
        "returned": "success",
        "elements": "elements=string",
        "sample": "[{\"Granularity\": \"1Minute\", \"Metric\": \"GroupInServiceInstances\"}]"
      },
      "min_size": {
        "description": "Minimum size of group",
        "type": "integer",
        "returned": "success",
        "sample": "1"
      },
      "mixed_instances_policy": {
        "description": "Returns the list of instance types if a mixed instances policy is set.",
        "type": "list",
        "returned": "success",
        "elements": "elements=string",
        "sample": "[\"t3.micro\", \"t3a.micro\"]"
      },
      "mixed_instances_policy_full": {
        "description": "Returns the full dictionary representation of the mixed instances policy if a mixed instances policy is set.",
        "type": "dictionary",
        "returned": "success",
        "sample": "{\"instances_distribution\": {\"on_demand_allocation_strategy\": \"prioritized\", \"on_demand_base_capacity\": 0, \"on_demand_percentage_above_base_capacity\": 0, \"spot_allocation_strategy\": \"capacity-optimized\"}, \"launch_template\": {\"launch_template_specification\": {\"launch_template_id\": \"lt-53c2425cffa544c23\", \"launch_template_name\": \"random-LaunchTemplate\", \"version\": \"2\"}, \"overrides\": [{\"instance_type\": \"m5.xlarge\"}, {\"instance_type\": \"m5a.xlarge\"}]}}"
      },
      "pending_instances": {
        "description": "Number of instances in pending state",
        "type": "integer",
        "returned": "success",
        "sample": "1"
      },
      "tags": {
        "description": "List of tags for the ASG, and whether or not each tag propagates to instances at launch.",
        "type": "list",
        "returned": "success",
        "elements": "elements=string",
        "sample": "[{\"key\": \"Name\", \"propagate_at_launch\": \"true\", \"resource_id\": \"public-webapp-production-1\", \"resource_type\": \"auto-scaling-group\", \"value\": \"public-webapp-production-1\"}, {\"key\": \"env\", \"propagate_at_launch\": \"true\", \"resource_id\": \"public-webapp-production-1\", \"resource_type\": \"auto-scaling-group\", \"value\": \"production\"}]"
      },
      "target_group_arns": {
        "description": "List of ARNs of the target groups that the ASG populates",
        "type": "list",
        "returned": "success",
        "elements": "elements=string",
        "sample": "[\"arn:aws:elasticloadbalancing:ap-southeast-2:123456789012:targetgroup/target-group-host-hello/1a2b3c4d5e6f1a2b\", \"arn:aws:elasticloadbalancing:ap-southeast-2:123456789012:targetgroup/target-group-path-world/abcd1234abcd1234\"]"
      },
      "target_group_names": {
        "description": "List of names of the target groups that the ASG populates",
        "type": "list",
        "returned": "success",
        "elements": "elements=string",
        "sample": "[\"target-group-host-hello\", \"target-group-path-world\"]"
      },
      "termination_policies": {
        "description": "A list of termination policies for the group.",
        "type": "list",
        "returned": "success",
        "elements": "elements=string",
        "sample": "[\"Default\"]"
      },
      "unhealthy_instances": {
        "description": "Number of instances in an unhealthy state",
        "type": "integer",
        "returned": "success",
        "sample": "0"
      },
      "viable_instances": {
        "description": "Number of instances in a viable state",
        "type": "integer",
        "returned": "success",
        "sample": "1"
      },
      "vpc_zone_identifier": {
        "description": "VPC zone ID / subnet id for the auto scaling group",
        "type": "string",
        "returned": "success",
        "sample": "\"subnet-a31ef45f\""
      }
    }
  },
  "autoscaling_group_info": {
    "description": "Gather information about EC2 Auto Scaling Groups (ASGs) in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/autoscaling_group_info_module.html#ansible-collections-amazon-aws-autoscaling-group-info-module",
    "return_values": {
      "results": {
        "description": "A list of Auto Scaling Groups.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "auto_scaling_group_arn": {
            "description": "The Amazon Resource Name of the ASG.",
            "type": "string",
            "returned": "success",
            "sample": "\"arn:aws:autoscaling:us-west-2:123456789012:autoScalingGroup:10787c52-0bcb-427d-82ba-c8e4b008ed2e:autoScalingGroupName/dev11\""
          },
          "auto_scaling_group_name": {
            "description": "Name of autoscaling group.",
            "type": "string",
            "returned": "success",
            "sample": "\"public-webapp-production-1\""
          },
          "availability_zones": {
            "description": "List of Availability Zones that are enabled for this ASG.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[\"us-west-2a\", \"us-west-2b\", \"us-west-2a\"]"
          },
          "created_time": {
            "description": "The date and time this ASG was created, in ISO 8601 format.",
            "type": "string",
            "returned": "success",
            "sample": "\"2015-11-25T00:05:36.309Z\""
          },
          "default_cooldown": {
            "description": "The default cooldown time in seconds.",
            "type": "integer",
            "returned": "success",
            "sample": "300"
          },
          "desired_capacity": {
            "description": "The number of EC2 instances that should be running in this group.",
            "type": "integer",
            "returned": "success",
            "sample": "3"
          },
          "enabled_metrics": {
            "description": "The metrics enabled for the group.",
            "type": "list",
            "returned": "success",
            "elements": "elements=dictionary",
            "sample": "[{\"granularity\": \"1Minute\", \"metric\": \"GroupAndWarmPoolTotalCapacity\"}]",
            "suboptions": {
              "granularity": {
                "description": "The granularity of the metric. The only valid value is 1Minute.",
                "type": "string",
                "returned": "success",
                "sample": "\"1Minute\""
              },
              "metric": {
                "description": "Name of the metric.",
                "type": "string",
                "returned": "success",
                "sample": "\"GroupAndWarmPoolTotalCapacity\""
              }
            }
          },
          "health_check_grace_period": {
            "description": "Length of time in seconds after a new EC2 instance comes into service that Auto Scaling starts checking its health.",
            "type": "integer",
            "returned": "success",
            "sample": "300"
          },
          "health_check_type": {
            "description": "The service you want the health status from, one of \u201cEC2\u201d or \u201cELB\u201d.",
            "type": "string",
            "returned": "success",
            "sample": "\"ELB\""
          },
          "instances": {
            "description": "List of EC2 instances associated with ASG and their status.",
            "type": "list",
            "returned": "success",
            "elements": "elements=dictionary",
            "sample": "[{\"availability_zone\": \"us-west-2a\", \"health_status\": \"Healthy\", \"instance_id\": \"i-es22ad25\", \"launch_configuration_name\": \"public-webapp-production-1\", \"launch_template\": {\"launch_template_id\": \"lt-0b19eb00123456789\", \"launch_template_name\": \"test-template\", \"version\": \"1\"}, \"lifecycle_state\": \"InService\", \"protected_from_scale_in\": \"false\"}]",
            "suboptions": {
              "availability_zone": {
                "description": "The Availability Zone of the instance.",
                "type": "string",
                "returned": "success",
                "sample": "\"ap-southeast-2a\""
              },
              "health_status": {
                "description": "The last reported health status of the instance.",
                "type": "string",
                "returned": "success",
                "sample": "\"Healthy\""
              },
              "instance_id": {
                "description": "The ID of the instance.",
                "type": "string",
                "returned": "success",
                "sample": "\"i-012345678\""
              },
              "instance_type": {
                "description": "The instance type size of the running instance.",
                "type": "string",
                "returned": "success",
                "sample": "\"t2.micro\""
              },
              "launch_template": {
                "description": "The EC2 launch template to base instance configuration on.",
                "type": "dictionary",
                "returned": "success",
                "suboptions": {
                  "launch_template_id": {
                    "description": "The ID of the launch template.",
                    "type": "string",
                    "returned": "success"
                  },
                  "launch_template_name": {
                    "description": "The name of the launch template.",
                    "type": "string",
                    "returned": "success"
                  },
                  "version": {
                    "description": "The specific version of the launch template to use.",
                    "type": "integer",
                    "returned": "success"
                  }
                }
              },
              "lifecycle_state": {
                "description": "A description of the current lifecycle state.",
                "type": "string",
                "returned": "success"
              },
              "protected_from_scale_in": {
                "description": "Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling when scaling in.",
                "type": "boolean",
                "returned": "success"
              }
            }
          },
          "launch_config_name": {
            "description": "Name of launch configuration associated with the ASG. Same as launch_configuration_name, provided for compatibility with amazon.aws.autoscaling_group module.",
            "type": "string",
            "returned": "success",
            "sample": "\"public-webapp-production-1\""
          },
          "launch_configuration_name": {
            "description": "Name of launch configuration associated with the ASG.",
            "type": "string",
            "returned": "success",
            "sample": "\"public-webapp-production-1\""
          },
          "lifecycle_hooks": {
            "description": "List of lifecycle hooks for the ASG.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[{\"AutoScalingGroupName\": \"public-webapp-production-1\", \"DefaultResult\": \"ABANDON\", \"GlobalTimeout\": 172800, \"HeartbeatTimeout\": 3600, \"LifecycleHookName\": \"instance-launch\", \"LifecycleTransition\": \"autoscaling:EC2_INSTANCE_LAUNCHING\"}, {\"AutoScalingGroupName\": \"public-webapp-production-1\", \"DefaultResult\": \"ABANDON\", \"GlobalTimeout\": 172800, \"HeartbeatTimeout\": 3600, \"LifecycleHookName\": \"instance-terminate\", \"LifecycleTransition\": \"autoscaling:EC2_INSTANCE_TERMINATING\"}]"
          },
          "load_balancer_names": {
            "description": "List of load balancers names attached to the ASG.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[\"elb-webapp-prod\"]"
          },
          "max_size": {
            "description": "Maximum size of group.",
            "type": "integer",
            "returned": "success",
            "sample": "3"
          },
          "min_size": {
            "description": "Minimum size of group.",
            "type": "integer",
            "returned": "success",
            "sample": "1"
          },
          "new_instances_protected_from_scale_in": {
            "description": "Whether or not new instances a protected from automatic scaling in.",
            "type": "boolean",
            "returned": "success",
            "sample": "false"
          },
          "placement_group": {
            "description": "Placement group into which instances are launched, if any.",
            "type": "string",
            "returned": "success",
            "sample": "\"None\""
          },
          "service_linked_role_arn": {
            "description": "The ARN of the service-linked role that the Auto Scaling group uses to call other Amazon Web Services on your behalf.",
            "type": "string",
            "returned": "success",
            "sample": "\"arn:aws:iam::721234567890:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling\""
          },
          "status": {
            "description": "The current state of the group when DeleteAutoScalingGroup is in progress.",
            "type": "string",
            "returned": "success",
            "sample": "\"None\""
          },
          "suspended_processes": {
            "description": "The suspended processes associated with the group.",
            "type": "list",
            "returned": "success",
            "elements": "elements=dictionary",
            "sample": "[{\"process_name\": \"AddToLoadBalancer\", \"suspension_reason\": \"User suspended at 2018-08-30T14:11:58Z\"}]",
            "suboptions": {
              "process_name": {
                "description": "The name of the suspended process.",
                "type": "string",
                "returned": "success"
              },
              "suspension_reason": {
                "description": "The reason that the process was suspended.",
                "type": "string",
                "returned": "success"
              }
            }
          },
          "tags": {
            "description": "List of tags for the ASG, and whether or not each tag propagates to instances at launch.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[{\"key\": \"Name\", \"propagate_at_launch\": \"true\", \"resource_id\": \"public-webapp-production-1\", \"resource_type\": \"auto-scaling-group\", \"value\": \"public-webapp-production-1\"}, {\"key\": \"env\", \"propagate_at_launch\": \"true\", \"resource_id\": \"public-webapp-production-1\", \"resource_type\": \"auto-scaling-group\", \"value\": \"production\"}]"
          },
          "target_group_arns": {
            "description": "List of ARNs of the target groups that the ASG populates.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[\"arn:aws:elasticloadbalancing:ap-southeast-2:123456789012:targetgroup/target-group-host-hello/1a2b3c4d5e6f1a2b\", \"arn:aws:elasticloadbalancing:ap-southeast-2:123456789012:targetgroup/target-group-path-world/abcd1234abcd1234\"]"
          },
          "target_group_names": {
            "description": "List of names of the target groups that the ASG populates.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[\"target-group-host-hello\", \"target-group-path-world\"]"
          },
          "termination_policies": {
            "description": "A list of termination policies for the group.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[\"Default\"]"
          },
          "traffic_sources": {
            "description": "The traffic sources associated with this Auto Scaling group.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[{\"identifier\": \"arn:aws:elasticloadbalancing:us-west-2:721234567890:targetgroup/Check-Exter-A4XXXXXXXXXX/8aXXXXXXXXXXXXXX\", \"type\": \"elbv2\"}]",
            "suboptions": {
              "identifier": {
                "description": "Identifies the traffic source.",
                "type": "string",
                "returned": "success"
              },
              "type": {
                "description": "Provides additional context for the value of Identifier.",
                "type": "string",
                "returned": "success"
              }
            }
          },
          "vpc_zone_identifier": {
            "description": "One or more subnet IDs, if applicable, separated by commas.",
            "type": "string",
            "returned": "success",
            "sample": "\"subnet-0352db1247ae60b40,subnet-01f266bb9928ddaee\""
          }
        }
      }
    }
  },
  "autoscaling_instance": {
    "description": "manage instances associated with AWS AutoScaling Groups (ASGs)",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/autoscaling_instance_module.html#ansible-collections-amazon-aws-autoscaling-instance-module",
    "return_values": {
      "auto_scaling_instances": {
        "description": "A description of the EC2 instances attached to an Auto Scaling group.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "suboptions": {
          "availability_zone": {
            "description": "The availability zone that the instance is in.",
            "type": "string",
            "returned": "always",
            "sample": "\"us-east-1a\""
          },
          "health_status": {
            "description": "The last reported health status of the instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"Healthy\""
          },
          "instance_id": {
            "description": "The ID of the instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"i-123456789abcdef01\""
          },
          "instance_type": {
            "description": "The instance type of the instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"t3.micro\""
          },
          "launch_configuration_name": {
            "description": "The name of the launch configuration used when launching the instance.",
            "type": "string",
            "returned": "When the instance was launched using an Auto Scaling launch configuration.",
            "sample": "\"ansible-test-49630214-mchappel-thinkpadt14gen3-asg-instance-1\""
          },
          "launch_template": {
            "description": "A description of the launch template used when launching the instance.",
            "type": "dictionary",
            "returned": "When the instance was launched using an Auto Scaling launch template.",
            "suboptions": {
              "launch_template_id": {
                "description": "The ID of the launch template used when launching the instance.",
                "type": "string",
                "returned": "always",
                "sample": "\"12345678-abcd-ef12-2345-6789abcdef01\""
              },
              "launch_template_name": {
                "description": "The name of the launch template used when launching the instance.",
                "type": "string",
                "returned": "always",
                "sample": "\"example-launch-configuration\""
              },
              "version": {
                "description": "The version of the launch template used when launching the instance.",
                "type": "string",
                "returned": "always",
                "sample": "\"$Default\""
              }
            }
          },
          "lifecycle_state": {
            "description": "The lifecycle state of the instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"InService\""
          },
          "protected_from_scale_in": {
            "description": "Whether the instance is protected from termination when the Auto Scaling group is scaled in.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          }
        }
      }
    }
  },
  "autoscaling_instance_info": {
    "description": "describe instances associated with AWS AutoScaling Groups (ASGs)",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/autoscaling_instance_info_module.html#ansible-collections-amazon-aws-autoscaling-instance-info-module",
    "return_values": {
      "auto_scaling_instances": {
        "description": "A description of the EC2 instances attached to an Auto Scaling group.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "suboptions": {
          "availability_zone": {
            "description": "The availability zone that the instance is in.",
            "type": "string",
            "returned": "always",
            "sample": "\"us-east-1a\""
          },
          "health_status": {
            "description": "The last reported health status of the instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"Healthy\""
          },
          "instance_id": {
            "description": "The ID of the instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"i-123456789abcdef01\""
          },
          "instance_type": {
            "description": "The instance type of the instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"t3.micro\""
          },
          "launch_configuration_name": {
            "description": "The name of the launch configuration used when launching the instance.",
            "type": "string",
            "returned": "When the instance was launched using an Auto Scaling launch configuration.",
            "sample": "\"ansible-test-49630214-mchappel-thinkpadt14gen3-asg-instance-1\""
          },
          "launch_template": {
            "description": "A description of the launch template used when launching the instance.",
            "type": "dictionary",
            "returned": "When the instance was launched using an Auto Scaling launch template.",
            "suboptions": {
              "launch_template_id": {
                "description": "The ID of the launch template used when launching the instance.",
                "type": "string",
                "returned": "always",
                "sample": "\"12345678-abcd-ef12-2345-6789abcdef01\""
              },
              "launch_template_name": {
                "description": "The name of the launch template used when launching the instance.",
                "type": "string",
                "returned": "always",
                "sample": "\"example-launch-configuration\""
              },
              "version": {
                "description": "The version of the launch template used when launching the instance.",
                "type": "string",
                "returned": "always",
                "sample": "\"$Default\""
              }
            }
          },
          "lifecycle_state": {
            "description": "The lifecycle state of the instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"InService\""
          },
          "protected_from_scale_in": {
            "description": "Whether the instance is protected from termination when the Auto Scaling group is scaled in.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          }
        }
      }
    }
  },
  "autoscaling_instance_refresh": {
    "description": "Start or cancel an EC2 Auto Scaling Group (ASG) instance refresh in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/autoscaling_instance_refresh_module.html#ansible-collections-amazon-aws-autoscaling-instance-refresh-module",
    "return_values": {
      "instance_refreshes": {
        "description": "Details of the instance refreshes for the Auto Scaling group.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "auto_scaling_group_name": {
            "description": "Name of autoscaling group.",
            "type": "string",
            "returned": "success",
            "sample": "\"public-webapp-production-1\""
          },
          "end_time": {
            "description": "The date and time this ASG was created, in ISO 8601 format.",
            "type": "string",
            "returned": "success",
            "sample": "\"2015-11-25T00:05:36.309Z\""
          },
          "instance_refresh_id": {
            "description": "Instance refresh id.",
            "type": "string",
            "returned": "success",
            "sample": "\"08b91cf7-8fa6-48af-b6a6-d227f40f1b9b\""
          },
          "instances_to_update": {
            "description": "number of instances to update.",
            "type": "integer",
            "returned": "success",
            "sample": "5"
          },
          "percentage_complete": {
            "description": "the % of completeness.",
            "type": "integer",
            "returned": "success",
            "sample": "100"
          },
          "preferences": {
            "description": "The preferences for an instance refresh.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"AlarmSpecification\": {\"Alarms\": [\"my-alarm\"]}, \"AutoRollback\": true, \"InstanceWarmup\": 200, \"MinHealthyPercentage\": 90, \"ScaleInProtectedInstances\": \"Ignore\", \"SkipMatching\": false, \"StandbyInstances\": \"Ignore\"}"
          },
          "start_time": {
            "description": "The date and time this ASG was created, in ISO 8601 format.",
            "type": "string",
            "returned": "success",
            "sample": "\"2015-11-25T00:05:36.309Z\""
          },
          "status": {
            "description": "The current state of the group when DeleteAutoScalingGroup is in progress. The following are the possible statuses Pending - The request was created, but the operation has not started. InProgress - The operation is in progress. Successful - The operation completed successfully. Failed - The operation failed to complete. You can troubleshoot using the status reason and the scaling activities. Cancelling - An ongoing operation is being cancelled. Cancellation does not roll back any replacements that have already been completed, but it prevents new replacements from being started. Cancelled - The operation is cancelled.",
            "type": "string",
            "returned": "success",
            "sample": "\"Pending\""
          }
        }
      }
    }
  },
  "autoscaling_instance_refresh_info": {
    "description": "Gather information about EC2 Auto Scaling Group (ASG) Instance Refreshes in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/autoscaling_instance_refresh_info_module.html#ansible-collections-amazon-aws-autoscaling-instance-refresh-info-module",
    "return_values": {
      "instance_refreshes": {
        "description": "A list of instance refreshes.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "auto_scaling_group_name": {
            "description": "Name of autoscaling group.",
            "type": "string",
            "returned": "success",
            "sample": "\"public-webapp-production-1\""
          },
          "end_time": {
            "description": "The date and time this ASG was created, in ISO 8601 format.",
            "type": "string",
            "returned": "success",
            "sample": "\"2015-11-25T00:05:36.309Z\""
          },
          "instance_refresh_id": {
            "description": "instance refresh id.",
            "type": "string",
            "returned": "success",
            "sample": "\"08b91cf7-8fa6-48af-b6a6-d227f40f1b9b\""
          },
          "instances_to_update": {
            "description": "number of instances to update.",
            "type": "integer",
            "returned": "success",
            "sample": "5"
          },
          "percentage_complete": {
            "description": "the % of completeness",
            "type": "integer",
            "returned": "success",
            "sample": "100"
          },
          "preferences": {
            "description": "The preferences for an instance refresh.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"AlarmSpecification\": {\"Alarms\": [\"my-alarm\"]}, \"AutoRollback\": true, \"InstanceWarmup\": 200, \"MinHealthyPercentage\": 90, \"ScaleInProtectedInstances\": \"Ignore\", \"SkipMatching\": false, \"StandbyInstances\": \"Ignore\"}"
          },
          "start_time": {
            "description": "The date and time this ASG was created, in ISO 8601 format.",
            "type": "string",
            "returned": "success",
            "sample": "\"2015-11-25T00:05:36.309Z\""
          },
          "status": {
            "description": "The current state of the group when DeleteAutoScalingGroup is in progress. The following are the possible statuses Pending - The request was created, but the operation has not started. InProgress - The operation is in progress. Successful - The operation completed successfully. Failed - The operation failed to complete. You can troubleshoot using the status reason and the scaling activities. Cancelling - An ongoing operation is being cancelled. Cancellation does not roll back any replacements that have already been completed, but it prevents new replacements from being started. Cancelled - The operation is cancelled.",
            "type": "string",
            "returned": "success",
            "sample": "\"Pending\""
          }
        }
      },
      "next_token": {
        "description": "A string that indicates that the response contains more items than can be returned in a single response.",
        "type": "string",
        "returned": "always"
      }
    }
  },
  "aws_az_info": {
    "description": "Gather information about availability zones in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/aws_az_info_module.html#ansible-collections-amazon-aws-aws-az-info-module",
    "return_values": {
      "availability_zones": {
        "description": "Availability zones that match the provided filters. Each element consists of a dict with all the information related to that available zone.",
        "type": "list",
        "returned": "on success",
        "elements": "elements=dictionary",
        "sample": "[{\"group_name\": \"us-east-1\", \"messages\": [], \"network_border_group\": \"us-east-1\", \"opt_in_status\": \"opt-in-not-required\", \"region_name\": \"us-east-1\", \"state\": \"available\", \"zone_id\": \"use1-az6\", \"zone_name\": \"us-east-1a\", \"zone_type\": \"availability-zone\"}, {\"group_name\": \"us-east-1\", \"messages\": [], \"network_border_group\": \"us-east-1\", \"opt_in_status\": \"opt-in-not-required\", \"region_name\": \"us-east-1\", \"state\": \"available\", \"zone_id\": \"use1-az1\", \"zone_name\": \"us-east-1b\", \"zone_type\": \"availability-zone\"}]",
        "suboptions": {
          "group_name": {
            "description": "The name of the associated group. For availability zones, this will be the same as availability_zones.region_name.",
            "type": "string",
            "returned": "on success",
            "sample": "\"us-east-1\""
          },
          "messages": {
            "description": "List of messages about the availability zone.",
            "type": "list",
            "returned": "on success",
            "elements": "elements=dictionary",
            "sample": "[{\"message\": \"message_one\"}, {\"message\": \"message_two\"}]",
            "suboptions": {
              "message": {
                "description": "The message about the availability zone.",
                "type": "string",
                "returned": "on success",
                "sample": "\"msg\""
              }
            }
          },
          "network_border_group": {
            "description": "The name of the network border group.",
            "type": "string",
            "returned": "on success",
            "sample": "\"us-east-1\""
          },
          "opt_in_status": {
            "description": "The opt-in status. The value is always opt-in-not-required for availability zones.",
            "type": "string",
            "returned": "on success",
            "sample": "\"opt-in-not-required\""
          },
          "region_name": {
            "description": "The name of the region.",
            "type": "string",
            "returned": "on success",
            "sample": "\"us-east-1\""
          },
          "state": {
            "description": "The state of the availability zone. The value is always available.",
            "type": "string",
            "returned": "on success",
            "sample": "\"available\""
          },
          "zone_id": {
            "description": "The ID of the availability zone.",
            "type": "string",
            "returned": "on success",
            "sample": "\"use1-az5\""
          },
          "zone_name": {
            "description": "The name of the availability zone.",
            "type": "string",
            "returned": "on success",
            "sample": "\"us-east-1e\""
          },
          "zone_type": {
            "description": "The type of zone.",
            "type": "string",
            "returned": "on success",
            "sample": "\"availability-zone\""
          }
        }
      }
    }
  },
  "aws_caller_info": {
    "description": "Get information about the user and account being used to make AWS calls",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/aws_caller_info_module.html#ansible-collections-amazon-aws-aws-caller-info-module",
    "return_values": {
      "account": {
        "description": "The account id the access credentials are associated with.",
        "type": "string",
        "returned": "success",
        "sample": "\"123456789012\""
      },
      "account_alias": {
        "description": "The account alias the access credentials are associated with.",
        "type": "string",
        "returned": "when caller has the iam:ListAccountAliases permission",
        "sample": "\"acme-production\""
      },
      "arn": {
        "description": "The arn identifying the user the credentials are associated with.",
        "type": "string",
        "returned": "success",
        "sample": "\"arn:aws:sts::123456789012:federated-user/my-federated-user-name\""
      },
      "user_id": {
        "description": "The user id the access credentials are associated with. Note that this may not correspond to\nanything you can look up in the case of roles or federated identities.",
        "type": "string",
        "returned": "success",
        "sample": "\"123456789012:my-federated-user-name\""
      }
    }
  },
  "aws_region_info": {
    "description": "Gather information about AWS regions",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/aws_region_info_module.html#ansible-collections-amazon-aws-aws-region-info-module",
    "return_values": {
      "regions": {
        "description": "Information about the regions that match the provided filters. Retruns information about all the regions if no filters specified. Each element consists of a dict with all the information related to that region.",
        "type": "list",
        "returned": "on success",
        "elements": "elements=dictionary",
        "sample": "\"[{ 'endpoint': 'ec2.us-west-1.amazonaws.com', 'region_name': 'us-west-1' }]\"",
        "suboptions": {
          "endpoint": {
            "description": "The Region service endpoint.",
            "type": "string",
            "returned": "success",
            "sample": "\"ec2.us-east-2.amazonaws.com\""
          },
          "opt_in_status": {
            "description": "The Region opt-in status.",
            "type": "string",
            "returned": "success",
            "sample": "\"opt-in-not-required\""
          },
          "region_name": {
            "description": "The name of the Region.",
            "type": "string",
            "returned": "success",
            "sample": "\"us-east-2\""
          }
        }
      }
    }
  },
  "backup_plan": {
    "description": "Manage AWS Backup Plans",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/backup_plan_module.html#ansible-collections-amazon-aws-backup-plan-module",
    "return_values": {
      "backup_plan": {
        "description": "Backup plan details.",
        "type": "dictionary",
        "returned": "on create/update",
        "suboptions": {
          "advanced_backup_settings": {
            "description": "Advanced backup settings of the backup plan.",
            "type": "list",
            "returned": "when configured.",
            "elements": "elements=dictionary",
            "sample": "[{\"backup_options\": {\"windows_vss\": \"enabled\"}, \"resource_type\": \"EC2\"}]",
            "suboptions": {
              "backup_options": {
                "description": "Backup options of the advanced settings.",
                "type": "dictionary",
                "returned": "success",
                "sample": "{\"windows_vss\": \"enabled\"}"
              },
              "resource_type": {
                "description": "Resource type of the advanced settings.",
                "type": "string",
                "returned": "success",
                "sample": "\"EC2\""
              }
            }
          },
          "backup_plan_name": {
            "description": "The display name of a backup plan.",
            "type": "string",
            "returned": "always",
            "sample": "\"elastic\""
          },
          "rules": {
            "description": "An array of BackupRule objects, each of which specifies a scheduled task that is used to back up a selection of resources.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "completion_window_minutes": {
                "description": "A value in minutes after a backup job is successfully started before it must be completed or it will be canceled by Backup.",
                "type": "integer",
                "returned": "always",
                "sample": "10080"
              },
              "copy_actions": {
                "description": "An array of CopyAction objects, which contains the details of the copy operation.",
                "type": "list",
                "returned": "when configured.",
                "elements": "elements=dictionary",
                "sample": "[{\"destination_backup_vault_arn\": \"arn:aws:backup:us-west-2:123456789012:backup-vault:my-test-vault\", \"lifecycle\": {\"delete_after_days\": 100, \"move_to_cold_storage_after_days\": 10}}]"
              },
              "enable_continous_backup": {
                "description": "Specifies whether Backup creates continuous backups.",
                "type": "boolean",
                "returned": "always",
                "sample": "false"
              },
              "lifecycle": {
                "description": "Defines when a protected resource is transitioned to cold storage and when it expires.",
                "type": "dictionary",
                "returned": "when configured.",
                "sample": "{\"delete_after_days\": 100, \"move_to_cold_storage_after_days\": 10}"
              },
              "recovery_point_tags": {
                "description": "An array of key-value pair strings that are assigned to resources that are associated with this rule when restored from backup.",
                "type": "dictionary",
                "returned": "when configured.",
                "sample": "{\"Tagkey1\": \"TagValue1\", \"Tagkey2\": \"TagValue2\"}"
              },
              "rule_id": {
                "description": "Uniquely identifies a rule that is used to schedule the backup of a selection of resources.",
                "type": "string",
                "returned": "always",
                "sample": "\"973621ef-d863-41ef-b5c3-9e943a64ad0c\""
              },
              "rule_name": {
                "description": "A display name for a backup rule.",
                "type": "string",
                "returned": "always",
                "sample": "\"daily\""
              },
              "schedule_expression": {
                "description": "A cron expression in UTC specifying when Backup initiates a backup job.",
                "type": "string",
                "returned": "always",
                "sample": "\"cron(0 5 ? * * *)\""
              },
              "schedule_expression_timezone": {
                "description": "This is the timezone in which the schedule expression is set. This information is returned for botocore versions >= 1.31.36.",
                "type": "string",
                "returned": "when botocore >= 1.31.36",
                "sample": "\"Etc/UTC\""
              },
              "start_window_minutes": {
                "description": "A value in minutes after a backup is scheduled before a job will be canceled if it doesn\u2019t start successfully.",
                "type": "integer",
                "returned": "always",
                "sample": "480"
              },
              "target_backup_vault_name": {
                "description": "The name of a logical container where backups are stored.",
                "type": "string",
                "returned": "always",
                "sample": "\"09da67966fd5-backup-vault\""
              }
            }
          },
          "tags": {
            "description": "Tags of the backup plan.",
            "type": "string",
            "returned": "on create/update",
            "sample": "\"{'TagKey1': 'TagValue1', 'TagKey2': 'TagValue2'}\""
          }
        }
      },
      "backup_plan_arn": {
        "description": "ARN of the backup plan.",
        "type": "string",
        "returned": "always",
        "sample": "\"arn:aws:backup:eu-central-1:111122223333:backup-plan:1111f877-1ecf-4d79-9718-a861cd09df3b\""
      },
      "backup_plan_id": {
        "description": "ID of the backup plan.",
        "type": "string",
        "returned": "always",
        "sample": "\"1111f877-1ecf-4d79-9718-a861cd09df3b\""
      },
      "backup_plan_name": {
        "description": "Name of the backup plan.",
        "type": "string",
        "returned": "always",
        "sample": "\"elastic\""
      },
      "creation_date": {
        "description": "Creation date of the backup plan.",
        "type": "string",
        "returned": "on create/update",
        "sample": "\"2023-01-24T10:08:03.193000+01:00\""
      },
      "deletion_date": {
        "description": "Date the backup plan was deleted.",
        "type": "string",
        "returned": "on delete",
        "sample": "\"2023-05-05T16:24:51.987000-04:00\""
      },
      "exists": {
        "description": "Whether the resource exists.",
        "type": "boolean",
        "returned": "always",
        "sample": "true"
      },
      "version_id": {
        "description": "Version ID of the backup plan.",
        "type": "string",
        "returned": "always",
        "sample": "\"ODM3MjVjNjItYWFkOC00NjExLWIwZTYtZDNiNGI5M2I0ZTY1\""
      }
    }
  },
  "backup_plan_info": {
    "description": "Describe AWS Backup Plans",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/backup_plan_info_module.html#ansible-collections-amazon-aws-backup-plan-info-module",
    "return_values": {
      "backup_plans": {
        "description": "List of backup plan objects. List elements are dict with the information about backup plan.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "backup_plan": {
            "description": "Detailed information about the backup plan.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "advanced_backup_settings": {
                "description": "Advanced backup settings of the backup plan.",
                "type": "list",
                "returned": "when configured",
                "elements": "elements=dictionary",
                "sample": "[{\"backup_options\": {\"windows_vss\": \"enabled\"}, \"resource_type\": \"EC2\"}]",
                "suboptions": {
                  "backup_options": {
                    "description": "Options of the advanced setting.",
                    "type": "dictionary",
                    "returned": "success"
                  },
                  "resource_type": {
                    "description": "Resource type of the advanced setting.",
                    "type": "string",
                    "returned": "success"
                  }
                }
              },
              "backup_plan_name": {
                "description": "Name of the backup plan.",
                "type": "string",
                "returned": "always",
                "sample": "\"elastic\""
              },
              "rules": {
                "description": "An array of BackupRule objects, each of which specifies a scheduled task that is used to back up a selection of resources.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "completion_window_minutes": {
                    "description": "A value in minutes after a backup job is successfully started before it must be completed or it will be canceled by Backup.",
                    "type": "integer",
                    "returned": "always",
                    "sample": "10080"
                  },
                  "copy_actions": {
                    "description": "An array of CopyAction objects, which contains the details of the copy operation.",
                    "type": "list",
                    "returned": "when configured.",
                    "elements": "elements=dictionary",
                    "sample": "[{\"destination_backup_vault_arn\": \"arn:aws:backup:us-west-2:123456789012:backup-vault:my-test-vault\", \"lifecycle\": {\"delete_after_days\": 100, \"move_to_cold_storage_after_days\": 10}}]"
                  },
                  "enable_continous_backup": {
                    "description": "Specifies whether Backup creates continuous backups.",
                    "type": "boolean",
                    "returned": "always",
                    "sample": "false"
                  },
                  "lifecycle": {
                    "description": "Defines when a protected resource is transitioned to cold storage and when it expires.",
                    "type": "dictionary",
                    "returned": "when configured.",
                    "sample": "{\"delete_after_days\": 100, \"move_to_cold_storage_after_days\": 10}"
                  },
                  "recovery_point_tags": {
                    "description": "An array of key-value pair strings that are assigned to resources that are associated with this rule when restored from backup.",
                    "type": "dictionary",
                    "returned": "when configured.",
                    "sample": "{\"Tagkey1\": \"TagValue1\", \"Tagkey2\": \"TagValue2\"}"
                  },
                  "rule_id": {
                    "description": "Uniquely identifies a rule that is used to schedule the backup of a selection of resources.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"973621ef-d863-41ef-b5c3-9e943a64ad0c\""
                  },
                  "rule_name": {
                    "description": "A display name for a backup rule.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"daily\""
                  },
                  "schedule_expression": {
                    "description": "A cron expression in UTC specifying when Backup initiates a backup job.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"cron(0 5 ? * * *)\""
                  },
                  "start_window_minutes": {
                    "description": "A value in minutes after a backup is scheduled before a job will be canceled if it doesn\u2019t start successfully.",
                    "type": "integer",
                    "returned": "always",
                    "sample": "480"
                  },
                  "target_backup_vault_name": {
                    "description": "The name of a logical container where backups are stored.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"09da67966fd5-backup-vault\""
                  }
                }
              }
            }
          },
          "backup_plan_arn": {
            "description": "An Amazon Resource Name (ARN) that uniquely identifies a backup plan.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:backup:eu-central-1:111122223333:backup-plan:1111f877-1ecf-4d79-9718-a861cd09df3b\""
          },
          "backup_plan_id": {
            "description": "Id of the backup plan.",
            "type": "string",
            "returned": "always",
            "sample": "\"1111f877-1ecf-4d79-9718-a861cd09df3b\""
          },
          "backup_plan_name": {
            "description": "The display name of a backup plan.",
            "type": "string",
            "returned": "always",
            "sample": "\"elastic\""
          },
          "creation_date": {
            "description": "Creation date of the backup plan.",
            "type": "string",
            "returned": "always",
            "sample": "\"2023-01-24T10:08:03.193000+01:00\""
          },
          "last_execution_date": {
            "description": "Last execution date of the backup plan.",
            "type": "string",
            "returned": "always",
            "sample": "\"2023-03-24T06:30:08.250000+01:00\""
          },
          "tags": {
            "description": "Tags of the backup plan",
            "type": "string",
            "returned": "always",
            "sample": "\"{'TagKey1': 'TagValue1', 'TagKey2': 'TagValue2'}\""
          },
          "version_id": {
            "description": "Version id of the backup plan",
            "type": "string",
            "returned": "always",
            "sample": "\"A2AiAAAmAAAtAxAxAA00AAa0AAAxAxAtA0AmAAA4NDY1ZTZl\""
          }
        }
      }
    }
  },
  "backup_restore_job_info": {
    "description": "List information about backup restore jobs",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/backup_restore_job_info_module.html#ansible-collections-amazon-aws-backup-restore-job-info-module",
    "return_values": {
      "restore_jobs": {
        "description": "restore jobs that match the provided filters. Each element consists of a dict with details related to that restore job.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "account_id": {
            "description": "The account ID that owns the restore job.",
            "type": "string",
            "returned": "if restore job exists",
            "sample": "\"123456789012\""
          },
          "created_resource_arn": {
            "description": "An Amazon Resource Name (ARN) that uniquely identifies a resource whose recovery point is being restored. The format of the ARN depends on the resource type of the backed-up resource.",
            "type": "string",
            "returned": "if restore job exists",
            "sample": "\"arn:aws:ec2:us-east-2:xxxxxxxxxx...\""
          },
          "creation_date": {
            "description": "The date and time that a restore job is created, in Unix format and Coordinated Universal Time (UTC).",
            "type": "string",
            "returned": "if restore job exists",
            "sample": "\"2023-03-13T15:53:07.172000-07:00\""
          },
          "iam_role_arn": {
            "description": "The IAM role ARN used to create the target recovery point.",
            "type": "string",
            "returned": "if restore job exists",
            "sample": "\"arn:aws:ec2:us-east-2:xxxxxxxxxx...\""
          },
          "percent_done": {
            "description": "The estimated percentage that is complete of a job at the time the job status was queried.",
            "type": "string",
            "returned": "if restore job exists",
            "sample": "\"0.00%\""
          },
          "recovery_point_arn": {
            "description": "An ARN that uniquely identifies a recovery point.",
            "type": "string",
            "returned": "if restore job exists",
            "sample": "\"arn:aws:ec2:us-east-2:xxxxxxxxxx...\""
          },
          "restore_job_id": {
            "description": "The ID of the job that restores a recovery point.",
            "type": "string",
            "returned": "if restore job exists",
            "sample": "\"AAAA1234-1D1D-1234-3F8E-1EB111EEEE00\""
          },
          "status": {
            "description": "The state of the job initiated by Backup to restore a recovery point.",
            "type": "string",
            "returned": "if restore job exists",
            "sample": "\"COMPLETED\""
          }
        }
      }
    }
  },
  "backup_selection": {
    "description": "Create, delete and modify AWS Backup selection",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/backup_selection_module.html#ansible-collections-amazon-aws-backup-selection-module",
    "return_values": {
      "backup_selection": {
        "description": "Backup selection details.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "backup_plan_id": {
            "description": "ID of the backup plan.",
            "type": "string",
            "returned": "always",
            "sample": "\"1111f877-1ecf-4d79-9718-a861cd09df3b\""
          },
          "conditions": {
            "description": "A list of conditions that defines how resources are assigned to backup plans using tags.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"string_equals\": [], \"string_like\": [], \"string_not_equals\": [], \"string_not_like\": []}",
            "suboptions": {
              "string_equals": {
                "description": "Filters the values of tagged resources for only those resources that are tagged with the same value.",
                "type": "list",
                "returned": "always",
                "elements": "elements=string",
                "sample": "[]"
              },
              "string_like": {
                "description": "Filters the values of tagged resources for matching tag values with the use of a wildcard character (*) anywhere in the string.",
                "type": "list",
                "returned": "always",
                "elements": "elements=string",
                "sample": "[]"
              },
              "string_not_equals": {
                "description": "Filters the values of tagged resources for only those resources that are not tagged with the same value.",
                "type": "list",
                "returned": "always",
                "elements": "elements=string",
                "sample": "[]"
              },
              "string_not_like": {
                "description": "Filters the values of tagged resources for non-matching tag values with the use of a wildcard character (*) anywhere in the string.",
                "type": "list",
                "returned": "always",
                "elements": "elements=string",
                "sample": "[]"
              }
            }
          },
          "creation_date": {
            "description": "Creation date of the backup plan.",
            "type": "string",
            "returned": "on create/update",
            "sample": "\"2023-01-24T10:08:03.193000+01:00\""
          },
          "iam_role_arn": {
            "description": "The ARN of the IAM role that Backup uses to authenticate when backing up the target resource.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:iam::111122223333:role/system-backup\""
          },
          "list_of_tags": {
            "description": "Conditions defined to assign resources to the backup plans using tags.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "sample": "[{\"condition_key\": \"Environment\", \"condition_type\": \"STRINGEQUALS\", \"condition_value\": \"Dev\"}]",
            "suboptions": {
              "condition_key": {
                "description": "The key in a key-value pair.",
                "type": "string",
                "returned": "always",
                "sample": "\"Environment\""
              },
              "condition_type": {
                "description": "An operation applied to a key-value pair used to assign resources to backup plan.",
                "type": "string",
                "returned": "always",
                "sample": "\"STRINGEQUALS\""
              },
              "condition_value": {
                "description": "The value in a key-value pair.",
                "type": "string",
                "returned": "always",
                "sample": "\"Dev\""
              }
            }
          },
          "not_resources": {
            "description": "List of Amazon Resource Names (ARNs) that are excluded from the backup plan.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[]"
          },
          "resources": {
            "description": "List of Amazon Resource Names (ARNs) that are assigned to the backup plan.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[]"
          },
          "selection_id": {
            "description": "Backup selection id.",
            "type": "string",
            "returned": "always",
            "sample": "\"1111c217-5d71-4a55-8728-5fc4e63d437b\""
          },
          "selection_name": {
            "description": "The display name of a resource selection document.",
            "type": "string",
            "returned": "always",
            "sample": "\"elastic\""
          }
        }
      }
    }
  },
  "backup_selection_info": {
    "description": "Describe AWS Backup Selections",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/backup_selection_info_module.html#ansible-collections-amazon-aws-backup-selection-info-module",
    "return_values": {
      "backup_selections": {
        "description": "List of backup selection objects. Each element consists of a dict with all the information related to that backup selection.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "backup_plan_id": {
            "description": "Backup plan id.",
            "type": "string",
            "returned": "always",
            "sample": "\"1111f877-1ecf-4d79-9718-a861cd09df3b\""
          },
          "conditions": {
            "description": "List of conditions (expressed as a dict) that are defined to assign resources to the backup plan using tags.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{}"
          },
          "creation_date": {
            "description": "Backup plan creation date.",
            "type": "string",
            "returned": "always",
            "sample": "\"2023-01-24T10:08:03.193000+01:00\""
          },
          "iam_role_arn": {
            "description": "IAM role arn.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:iam::111122223333:role/system-backup\""
          },
          "list_of_tags": {
            "description": "Conditions defined to assign resources to the backup plans using tags.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "sample": "[]"
          },
          "not_resources": {
            "description": "List of Amazon Resource Names (ARNs) that are excluded from the backup plan.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[]"
          },
          "resources": {
            "description": "List of Amazon Resource Names (ARNs) that are assigned to the backup plan.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[]"
          },
          "selection_id": {
            "description": "Backup selection id.",
            "type": "string",
            "returned": "always",
            "sample": "\"1111c217-5d71-4a55-8728-5fc4e63d437b\""
          },
          "selection_name": {
            "description": "Backup selection name.",
            "type": "string",
            "returned": "always",
            "sample": "\"elastic\""
          }
        }
      }
    }
  },
  "backup_tag": {
    "description": "Manage tags on backup plan, backup vault, recovery point",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/backup_tag_module.html#ansible-collections-amazon-aws-backup-tag-module",
    "return_values": {
      "added_tags": {
        "description": "A dict of tags that were added to the resource",
        "type": "dictionary",
        "returned": "When tags are added to the resource"
      },
      "removed_tags": {
        "description": "A dict of tags that were removed from the resource",
        "type": "dictionary",
        "returned": "When tags are removed from the resource"
      },
      "tags": {
        "description": "A dict containing the tags on the resource",
        "type": "dictionary",
        "returned": "always"
      }
    }
  },
  "backup_tag_info": {
    "description": "List tags on AWS Backup resources",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/backup_tag_info_module.html#ansible-collections-amazon-aws-backup-tag-info-module",
    "return_values": {
      "tags": {
        "description": "A dict containing the tags on the resource.",
        "type": "dictionary",
        "returned": "always"
      }
    }
  },
  "backup_vault": {
    "description": "Manage AWS Backup Vaults",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/backup_vault_module.html#ansible-collections-amazon-aws-backup-vault-module",
    "return_values": {
      "exists": {
        "description": "Whether the Backup Vault exists.",
        "type": "boolean",
        "returned": "always",
        "sample": "true"
      },
      "vault": {
        "description": "Backup Vault details.",
        "type": "complex",
        "returned": "always",
        "sample": "\"hash/dictionary of values\"",
        "suboptions": {
          "backup_vault_arn": {
            "description": "An Amazon Resource Name (ARN) that uniquely identifies a backup vault.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:backup:us-east-1:123456789012:vault:aBackupVault\""
          },
          "backup_vault_name": {
            "description": "The name of a logical container where backups are stored.",
            "type": "string",
            "returned": "always",
            "sample": "\"default-name\""
          },
          "creation_date": {
            "description": "The date and time a backup vault is created, in Unix format and Coordinated Universal Time (UTC).",
            "type": "string",
            "returned": "always",
            "sample": "\"2024-05-21T13:21:10.062000-07:00\""
          },
          "encryption_key_arn": {
            "description": "The server-side encryption key that is used to protect your backups.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\""
          },
          "locked": {
            "description": "A Boolean that indicates whether Backup Vault Lock is currently protecting the backup vault. True means that Vault Lock causes delete or update operations on the recovery points stored in the vault to fail.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "number_of_recovery_points": {
            "description": "The number of recovery points that are stored in a backup vault.",
            "type": "integer",
            "returned": "always",
            "sample": "0"
          },
          "tags": {
            "description": "Tags of the backup vault.",
            "type": "string",
            "returned": "on create/update",
            "sample": "\"{'TagKey1': 'TagValue1', 'TagKey2': 'TagValue2'}\""
          }
        }
      }
    }
  },
  "backup_vault_info": {
    "description": "Describe AWS Backup Vaults",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/backup_vault_info_module.html#ansible-collections-amazon-aws-backup-vault-info-module",
    "return_values": {
      "backup_vaults": {
        "description": "List of backup vault objects. Each element consists of a dict with all the information related to that backup vault.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "backup_vault_arn": {
            "description": "ARN of the backup vault.",
            "type": "string",
            "returned": "success",
            "sample": "\"arn:aws:backup:us-west-2:111122223333:vault/1234abcd-12ab-34cd-56ef-1234567890ab\""
          },
          "backup_vault_name": {
            "description": "Name of the backup vault.",
            "type": "string",
            "returned": "success",
            "sample": "\"default vault\""
          },
          "creation_date": {
            "description": "The date and time a backup vault is created, in Unix format and Coordinated Universal Time (UTC).",
            "type": "string",
            "returned": "success",
            "sample": "\"1516925490.087 (represents Friday, January 26, 2018 12:11:30.087 AM).\""
          },
          "creator_request_id": {
            "description": "A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.",
            "type": "string",
            "returned": "success"
          },
          "encryption_key_arn": {
            "description": "The server-side encryption key that is used to protect the backups.",
            "type": "string",
            "returned": "success",
            "sample": "\"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\""
          },
          "lock_date": {
            "description": "The date and time when Backup Vault Lock configuration cannot be changed or deleted.",
            "type": "string",
            "returned": "success",
            "sample": "\"1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.\""
          },
          "locked": {
            "description": "Indicates whether Backup Vault Lock is currently protecting the backup vault. True means that Vault Lock causes delete or update operations on the recovery points stored in the vault to fail.",
            "type": "boolean",
            "returned": "success",
            "sample": "true"
          },
          "max_retention_days": {
            "description": "The maximum retention period that the vault retains its recovery points. If this parameter is not specified, Vault Lock does not enforce a maximum retention period (allowing indefinite storage).",
            "type": "integer",
            "returned": "success",
            "sample": "123"
          },
          "min_retention_days": {
            "description": "The minimum retention period that the vault retains its recovery points. If this parameter is not specified, Vault Lock does not enforce a minimum retention period.",
            "type": "integer",
            "returned": "success",
            "sample": "120"
          },
          "number_of_recovery_points": {
            "description": "The number of recovery points that are stored in a backup vault.",
            "type": "integer",
            "returned": "success"
          }
        }
      }
    }
  },
  "cloudformation": {
    "description": "Create or delete an AWS CloudFormation stack",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/cloudformation_module.html#ansible-collections-amazon-aws-cloudformation-module",
    "return_values": {
      "change_set_id": {
        "description": "The ID of the stack change set when created.",
        "type": "string",
        "returned": "when state=present and create_changeset=true.",
        "sample": "\"arn:aws:cloudformation:us-east-1:123456789012:changeSet/Ansible-StackName-f4496805bd1b2be824d1e315c6884247ede41eb0\""
      },
      "events": {
        "description": "Most recent events in CloudFormation\u2019s event log. This may be from a previous run in some cases.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "sample": "[\"StackEvent AWS::CloudFormation::Stack stackname UPDATE_COMPLETE\", \"StackEvent AWS::CloudFormation::Stack stackname UPDATE_COMPLETE_CLEANUP_IN_PROGRESS\"]"
      },
      "log": {
        "description": "Debugging logs. Useful when modifying or finding an error.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "sample": "[\"updating stack\"]"
      },
      "stack_outputs": {
        "description": "A key:value dictionary of all the stack outputs currently defined. If there are no stack outputs, it is an empty dictionary.",
        "type": "dictionary",
        "returned": "When state=present",
        "sample": "{\"MySg\": \"AnsibleModuleTestYAML-CFTestSg-C8UVS567B6NS\"}"
      },
      "stack_resources": {
        "description": "AWS stack resources and their status. List of dictionaries, one dict per resource.",
        "type": "list",
        "returned": "when state=present",
        "elements": "elements=dictionary",
        "sample": "[{\"last_updated_time\": \"2016-10-11T19:40:14.979000+00:00\", \"logical_resource_id\": \"CFTestSg\", \"physical_resource_id\": \"cloudformation2-CFTestSg-16UQ4CYQ57O9F\", \"resource_type\": \"AWS::EC2::SecurityGroup\", \"status\": \"UPDATE_COMPLETE\", \"status_reason\": null}]"
      }
    }
  },
  "cloudformation_info": {
    "description": "Obtain information about an AWS CloudFormation stack",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/cloudformation_info_module.html#ansible-collections-amazon-aws-cloudformation-info-module",
    "return_values": {
      "cloudformation": {
        "description": "Dictionary of dictionaries containing info of stack(s). Keys are stack_name(s).",
        "type": "dictionary",
        "returned": "always",
        "suboptions": {
          "stack_change_sets": {
            "description": "A list of stack change sets. Each item in the list represents the details of a specific changeset.",
            "type": "list",
            "returned": "only if all_facts or stack_policy is true and the stack exists",
            "elements": "elements=string"
          },
          "stack_description": {
            "description": "Summary facts about the stack.",
            "type": "dictionary",
            "returned": "if the stack exists",
            "suboptions": {
              "capabilities": {
                "description": "The capabilities allowed in the stack.",
                "type": "list",
                "returned": "always",
                "elements": "elements=string"
              },
              "creation_time": {
                "description": "The time at which the stack was created.",
                "type": "string",
                "returned": "if stack exists"
              },
              "deletion_time": {
                "description": "The time at which the stack was deleted.",
                "type": "string",
                "returned": "if stack was deleted"
              },
              "description": {
                "description": "The user-defined description associated with the stack.",
                "type": "string",
                "returned": "always"
              },
              "disable_rollback": {
                "description": "Whether or not rollback on stack creation failures is enabled.",
                "type": "boolean",
                "returned": "always"
              },
              "drift_information": {
                "description": "Information about whether a stack\u2019s actual configuration differs, or has drifted, from it\u2019s expected configuration, as defined in the stack template and any values specified as template parameters.",
                "type": "dictionary",
                "returned": "always",
                "suboptions": {
                  "last_check_timestamp": {
                    "description": "Most recent time when a drift detection operation was initiated on the stack, or any of its individual resources that support drift detection.",
                    "type": "string",
                    "returned": "if a drift was detected"
                  },
                  "stack_drift_status": {
                    "description": "Status of the stack\u2019s actual configuration compared to its expected template configuration.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              },
              "enable_termination_protection": {
                "description": "Whether termination protection is enabled for the stack.",
                "type": "boolean",
                "returned": "always"
              },
              "notification_arns": {
                "description": "Amazon SNS topic ARNs to which stack related events are published.",
                "type": "list",
                "returned": "always",
                "elements": "elements=string"
              },
              "outputs": {
                "description": "A list of output dicts.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "output_key": {
                    "description": "The key associated with the output.",
                    "type": "string",
                    "returned": "always"
                  },
                  "output_value": {
                    "description": "The value associated with the output.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              },
              "parameters": {
                "description": "A list of parameter dicts.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "parameter_key": {
                    "description": "The key associated with the parameter.",
                    "type": "string",
                    "returned": "always"
                  },
                  "parameter_value": {
                    "description": "The value associated with the parameter.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              },
              "rollback_configuration": {
                "description": "The rollback triggers for CloudFormation to monitor during stack creation and updating operations.",
                "type": "dictionary",
                "returned": "always",
                "suboptions": {
                  "rollback_triggers": {
                    "description": "The triggers to monitor during stack creation or update actions.",
                    "type": "list",
                    "returned": "when rollback triggers exist",
                    "elements": "elements=dictionary",
                    "suboptions": {
                      "arn": {
                        "description": "The ARN of the rollback trigger.",
                        "type": "string",
                        "returned": "always"
                      },
                      "type": {
                        "description": "The resource type of the rollback trigger.",
                        "type": "string",
                        "returned": "always"
                      }
                    }
                  }
                }
              },
              "stack_id": {
                "description": "The unique ID of the stack.",
                "type": "string",
                "returned": "always"
              },
              "stack_name": {
                "description": "The name of the stack.",
                "type": "string",
                "returned": "always"
              },
              "stack_status": {
                "description": "The status of the stack.",
                "type": "string",
                "returned": "always"
              },
              "tags": {
                "description": "A list of tags associated with the stack.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "key": {
                    "description": "Key of tag.",
                    "type": "string",
                    "returned": "always"
                  },
                  "value": {
                    "description": "Value of tag.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              }
            }
          },
          "stack_events": {
            "description": "All stack events for the stack.",
            "type": "list",
            "returned": "only if all_facts or stack_events is true and the stack exists",
            "elements": "elements=string"
          },
          "stack_outputs": {
            "description": "Dictionary of stack outputs keyed by the value of each output \u2018OutputKey\u2019 parameter and corresponding value of each output \u2018OutputValue\u2019 parameter.",
            "type": "dictionary",
            "returned": "if the stack exists",
            "sample": "{\"ApplicationDatabaseName\": \"dazvlpr01xj55a.ap-southeast-2.rds.amazonaws.com\"}"
          },
          "stack_parameters": {
            "description": "Dictionary of stack parameters keyed by the value of each parameter \u2018ParameterKey\u2019 parameter and corresponding value of each parameter \u2018ParameterValue\u2019 parameter.",
            "type": "dictionary",
            "returned": "if the stack exists",
            "sample": "{\"DatabaseEngine\": \"mysql\", \"DatabasePassword\": \"***\"}"
          },
          "stack_policy": {
            "description": "Describes the stack policy for the stack.",
            "type": "dictionary",
            "returned": "only if all_facts or stack_policy is true and the stack exists"
          },
          "stack_resource_list": {
            "description": "Describes stack resources for the stack.",
            "type": "list",
            "returned": "only if all_facts or stack_policy is true and the stack exists",
            "elements": "elements=string"
          },
          "stack_resources": {
            "description": "Dictionary of stack resources keyed by the value of each resource \u2018LogicalResourceId\u2019 parameter and corresponding value of each resource \u2018PhysicalResourceId\u2019 parameter.",
            "type": "dictionary",
            "returned": "only if all_facts or stack_policy is true and the stack exists",
            "sample": "{\"ApplicationDatabase\": \"dazvlpr01xj55a\", \"AutoScalingGroup\": \"dev-someapp-AutoscalingGroup-1SKEXXBCAN0S7\", \"AutoScalingSecurityGroup\": \"sg-abcd1234\"}"
          },
          "stack_tags": {
            "description": "Dictionary of key value pairs of tags.",
            "type": "dictionary",
            "returned": "only if all_facts or stack_policy is true and the stack exists",
            "sample": "{\"TagOne\": \"ValueOne\", \"TagTwo\": \"ValueTwo\"}"
          },
          "stack_template": {
            "description": "Describes the stack template for the stack.",
            "type": "dictionary",
            "returned": "only if all_facts or stack_policy is true and the stack exists"
          }
        }
      }
    }
  },
  "cloudtrail": {
    "description": "manage CloudTrail create, delete, update",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/cloudtrail_module.html#ansible-collections-amazon-aws-cloudtrail-module",
    "return_values": {
      "exists": {
        "description": "whether the resource exists.",
        "type": "boolean",
        "returned": "always",
        "sample": "true"
      },
      "trail": {
        "description": "CloudTrail resource details.",
        "type": "complex",
        "returned": "always",
        "sample": "\"hash/dictionary of values\"",
        "suboptions": {
          "cloud_watch_logs_log_group_arn": {
            "description": "Full ARN of the CloudWatch Logs log group where events are delivered.",
            "type": "string",
            "returned": "success when present",
            "sample": "\"arn:aws:logs:us-east-1:123456789012:log-group:CloudTrail/DefaultLogGroup:*\""
          },
          "cloud_watch_logs_role_arn": {
            "description": "Full ARN of the IAM role that CloudTrail assumes to deliver events.",
            "type": "string",
            "returned": "success when present",
            "sample": "\"arn:aws:iam::123456789012:role/CloudTrail_CloudWatchLogs_Role\""
          },
          "has_custom_event_selectors": {
            "description": "Whether any custom event selectors are used for this trail.",
            "type": "boolean",
            "returned": "success",
            "sample": "false"
          },
          "has_insight_selectors": {
            "description": "Whether any insight selectors are used for this trail.",
            "type": "boolean",
            "returned": "success",
            "sample": "false"
          },
          "home_region": {
            "description": "The home region where the trail was originally created and must be edited.",
            "type": "string",
            "returned": "success",
            "sample": "\"us-east-1\""
          },
          "include_global_service_events": {
            "description": "Whether global services (IAM, STS) are logged with this trail.",
            "type": "boolean",
            "returned": "success",
            "sample": "true"
          },
          "is_logging": {
            "description": "Whether logging is turned on or paused for the Trail.",
            "type": "boolean",
            "returned": "success",
            "sample": "true"
          },
          "is_multi_region_trail": {
            "description": "Whether the trail applies to all regions or just one.",
            "type": "boolean",
            "returned": "success",
            "sample": "true"
          },
          "is_organization_trail": {
            "description": "Specifies whether the trail is created for all accounts in an organization in Organizations, or only for the current Amazon Web Services account.",
            "type": "boolean",
            "returned": "success",
            "sample": "true"
          },
          "kms_key_id": {
            "description": "Full ARN of the KMS Key used to encrypt log files.",
            "type": "string",
            "returned": "success when present",
            "sample": "\"arn:aws:kms::123456789012:key/12345678-1234-1234-1234-123456789012\""
          },
          "log_file_validation_enabled": {
            "description": "Whether log file validation is enabled on the trail.",
            "type": "boolean",
            "returned": "success",
            "sample": "true"
          },
          "name": {
            "description": "Name of the CloudTrail resource.",
            "type": "string",
            "returned": "success",
            "sample": "\"default\""
          },
          "s3_bucket_name": {
            "description": "S3 bucket name where log files are delivered.",
            "type": "string",
            "returned": "success",
            "sample": "\"myBucket\""
          },
          "s3_key_prefix": {
            "description": "Key prefix in bucket where log files are delivered (if any).",
            "type": "string",
            "returned": "success when present",
            "sample": "\"myKeyPrefix\""
          },
          "sns_topic_arn": {
            "description": "Full ARN of the SNS topic where log delivery notifications are sent.",
            "type": "string",
            "returned": "success when present",
            "sample": "\"arn:aws:sns:us-east-1:123456789012:topic/myTopic\""
          },
          "sns_topic_name": {
            "description": "The SNS topic name where log delivery notifications are sent.",
            "type": "string",
            "returned": "success when present",
            "sample": "\"myTopic\""
          },
          "tags": {
            "description": "hash/dictionary of tags applied to this resource",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"Name\": \"default\", \"environment\": \"dev\"}"
          },
          "trail_arn": {
            "description": "Full ARN of the CloudTrail resource.",
            "type": "string",
            "returned": "success",
            "sample": "\"arn:aws:cloudtrail:us-east-1:123456789012:trail/default\""
          }
        }
      }
    }
  },
  "cloudtrail_info": {
    "description": "Gather information about trails in AWS Cloud Trail",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/cloudtrail_info_module.html#ansible-collections-amazon-aws-cloudtrail-info-module",
    "return_values": {
      "trail_list": {
        "description": "List of trail objects. Each element consists of a dict with all the information related to that cloudtrail.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "cloud_watch_logs_log_group_arn": {
            "description": "Specifies an ARN, that represents the log group to which CloudTrail logs will be delivered.",
            "type": "string",
            "returned": "success",
            "sample": "\"arn:aws:sns:us-east-2:123456789012:Mylog\""
          },
          "cloud_watch_logs_role_arn": {
            "description": "Specifies the role for the CloudWatch Logs endpoint to assume to write to a user\u2019s log group.",
            "type": "string",
            "returned": "success",
            "sample": "\"arn:aws:sns:us-east-2:123456789012:Mylog\""
          },
          "has_custom_event_selectors": {
            "description": "Specifies if the trail has custom event selectors.",
            "type": "boolean",
            "returned": "success",
            "sample": "true"
          },
          "has_insight_selectors": {
            "description": "Specifies whether a trail has insight types specified in an InsightSelector list.",
            "type": "boolean",
            "returned": "success",
            "sample": "true"
          },
          "home_region": {
            "description": "The region in which the trail was created.",
            "type": "string",
            "returned": "success",
            "sample": "\"us-east-1\""
          },
          "include_global_service_events": {
            "description": "If True, AWS API calls from AWS global services such as IAM are included.",
            "type": "boolean",
            "returned": "success",
            "sample": "true"
          },
          "is_logging": {
            "description": "Whether the CloudTrail is currently logging AWS API calls.",
            "type": "boolean",
            "returned": "success",
            "sample": "true"
          },
          "is_multi_region_trail": {
            "description": "Specifies whether the trail exists only in one region or exists in all regions.",
            "type": "boolean",
            "returned": "success",
            "sample": "true"
          },
          "is_organization_trail": {
            "description": "Specifies whether the trail is an organization trail.",
            "type": "boolean",
            "returned": "success",
            "sample": "true"
          },
          "kms_key_id": {
            "description": "Specifies the KMS key ID that encrypts the logs delivered by CloudTrail.",
            "type": "string",
            "returned": "success",
            "sample": "\"arn:aws:kms:us-east-2:123456789012:key/12345678-1234-1234-1234-123456789012\""
          },
          "latest_cloud_watch_logs_delivery_error": {
            "description": "Displays any CloudWatch Logs error that CloudTrail encountered when attempting to deliver logs to CloudWatch Logs.",
            "type": "string",
            "returned": "success"
          },
          "latest_cloud_watch_logs_delivery_time": {
            "description": "Displays the most recent date and time when CloudTrail delivered logs to CloudWatch Logs.",
            "type": "string",
            "returned": "success"
          },
          "latest_delivery_attempt_succeeded": {
            "description": "Specifies the date and time that CloudTrail last successful attempt to deliver log files to an account\u2019s Amazon S3 bucket.",
            "type": "string",
            "returned": "success"
          },
          "latest_delivery_attempt_time": {
            "description": "Specifies the date and time that CloudTrail last attempt to deliver log files to an account\u2019s Amazon S3 bucket.",
            "type": "string",
            "returned": "success"
          },
          "latest_delivery_error": {
            "description": "Displays any Amazon S3 error that CloudTrail encountered when attempting to deliver log files to the designated bucket.",
            "type": "string",
            "returned": "success"
          },
          "latest_delivery_time": {
            "description": "Specifies the date and time that CloudTrail last delivered log files to an account\u2019s Amazon S3 bucket.",
            "type": "string",
            "returned": "success"
          },
          "latest_digest_delivery_error": {
            "description": "Displays any Amazon S3 error that CloudTrail encountered when attempting to deliver a digest file to the designated bucket.",
            "type": "string",
            "returned": "success"
          },
          "latest_digest_delivery_time": {
            "description": "Specifies the date and time that CloudTrail last delivered a digest file to an account\u2019s Amazon S3 bucket.",
            "type": "string",
            "returned": "success"
          },
          "latest_notification_attempt_succeeded": {
            "description": "Specifies the date and time that CloudTrail last successful attempt to deliver a notification.",
            "type": "string",
            "returned": "success"
          },
          "latest_notification_attempt_time": {
            "description": "Specifies the date and time that CloudTrail last attempt to deliver a notification.",
            "type": "string",
            "returned": "success"
          },
          "latest_notification_error": {
            "description": "Displays any Amazon SNS error that CloudTrail encountered when attempting to send a notification.",
            "type": "string",
            "returned": "success"
          },
          "log_file_validation_enabled": {
            "description": "Specifies whether log file validation is enabled.",
            "type": "boolean",
            "returned": "success",
            "sample": "true"
          },
          "name": {
            "description": "Name of the trail.",
            "type": "string",
            "returned": "success",
            "sample": "\"MyTrail\""
          },
          "resource_id": {
            "description": "Specifies the ARN of the resource.",
            "type": "string",
            "returned": "success"
          },
          "s3_bucket_name": {
            "description": "Name of the Amazon S3 bucket into which CloudTrail delivers the trail files.",
            "type": "string",
            "returned": "success",
            "sample": "\"aws-cloudtrail-logs-xxxx\""
          },
          "s3_key_prefix": {
            "description": "Amazon S3 key prefix that comes after the name of the bucket that is designated for log file delivery.",
            "type": "string",
            "returned": "success",
            "sample": "\"xxxx\""
          },
          "sns_topic_arn": {
            "description": "ARN of the Amazon SNS topic that CloudTrail uses to send notifications when log files are delivered.",
            "type": "string",
            "returned": "success",
            "sample": "\"arn:aws:sns:us-east-2:123456789012:MyTopic\""
          },
          "start_logging_time": {
            "description": "Specifies the most recent date and time when CloudTrail started recording API calls for an AWS account.",
            "type": "string",
            "returned": "success"
          },
          "stop_logging_time": {
            "description": "Specifies the most recent date and time when CloudTrail stopped recording API calls for an AWS account.",
            "type": "string",
            "returned": "success"
          },
          "tags": {
            "description": "Any tags assigned to the cloudtrail.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"my_tag_key\": \"my_tag_value\"}"
          },
          "trail_arn": {
            "description": "Specifies the ARN of the trail.",
            "type": "string",
            "returned": "success",
            "sample": "\"arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail\""
          }
        }
      }
    }
  },
  "cloudwatch_metric_alarm": {
    "description": "Create/update or delete AWS CloudWatch \u2018metric alarms\u2019",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/cloudwatch_metric_alarm_module.html#ansible-collections-amazon-aws-cloudwatch-metric-alarm-module",
    "return_values": {
      "actions_enabled": {
        "description": "Indicates whether actions should be executed during any changes to the alarm state.",
        "type": "boolean",
        "returned": "always"
      },
      "alarm_actions": {
        "description": "The actions to execute when this alarm transitions to an ALARM state from any other state.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string"
      },
      "alarm_arn": {
        "description": "The Amazon Resource Name (ARN) of the alarm.",
        "type": "string",
        "returned": "always"
      },
      "comparison": {
        "description": "The arithmetic operation to use when comparing the specified statistic and threshold.",
        "type": "string",
        "returned": "always"
      },
      "description": {
        "description": "The description of the alarm.",
        "type": "string",
        "returned": "always"
      },
      "dimensions": {
        "description": "The dimensions for the metric.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "name": {
            "description": "The name of the dimension.",
            "type": "string",
            "returned": "always"
          },
          "value": {
            "description": "The value of the dimension.",
            "type": "string",
            "returned": "always"
          }
        }
      },
      "evaluate_low_sample_count_percentile": {
        "description": "Used only for alarms based on percentiles. If ignore, the alarm state does not change during periods with too few data points to be statistically significant. If evaluate or this parameter is not used, the alarm is always evaluated and possibly changes state.",
        "type": "string",
        "returned": "always"
      },
      "evaluation_periods": {
        "description": "The number of periods over which data is compared to the specified threshold.",
        "type": "integer",
        "returned": "always"
      },
      "extended_statistic": {
        "description": "The percentile statistic for the metric associated with the alarm.",
        "type": "string",
        "returned": "always"
      },
      "insufficient_data_actions": {
        "description": "The actions to execute when this alarm transitions to an INSUFFICIENT_DATA state from any other state.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string"
      },
      "last_updated": {
        "description": "The time stamp of the last update to the alarm configuration.",
        "type": "string",
        "returned": "always"
      },
      "metric": {
        "description": "Name of the monitored metric (e.g. CPUUtilization).",
        "type": "string",
        "returned": "always"
      },
      "metric_name": {
        "description": "Name of the monitored metric (e.g. CPUUtilization).",
        "type": "string",
        "returned": "always"
      },
      "metrics": {
        "description": "An array of MetricDataQuery structures, used in an alarm based on a metric math expression.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary"
      },
      "name": {
        "description": "Unique name for the alarm.",
        "type": "string",
        "returned": "always"
      },
      "namespace": {
        "description": "Name of the appropriate namespace (AWS/EC2, System/Linux, etc.). Determines the category it will appear under in CloudWatch.",
        "type": "string",
        "returned": "always"
      },
      "ok_actions": {
        "description": "The actions to execute when this alarm transitions to an OK state from any other state.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string"
      },
      "period": {
        "description": "The length, in seconds, used each time the metric specified in MetricName is evaluated. Valid values are 10, 30, and any multiple of 60.",
        "type": "integer",
        "returned": "always"
      },
      "state_reason": {
        "description": "An explanation for the alarm state, in text format.",
        "type": "string",
        "returned": "always"
      },
      "state_value": {
        "description": "The state value for the alarm.",
        "type": "string",
        "returned": "always"
      },
      "statistic": {
        "description": "The statistic for the metric associated with the alarm, other than percentile.",
        "type": "string",
        "returned": "always"
      },
      "threshold": {
        "description": "The value to compare with the specified statistic.",
        "type": "float",
        "returned": "always"
      },
      "treat_missing_data": {
        "description": "Sets how alarm is to handle missing data points.",
        "type": "string",
        "returned": "always"
      },
      "unit": {
        "description": "Unit used when storing the metric",
        "type": "string",
        "returned": "always"
      }
    }
  },
  "cloudwatch_metric_alarm_info": {
    "description": "Gather information about the alarms for the specified metric",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/cloudwatch_metric_alarm_info_module.html#ansible-collections-amazon-aws-cloudwatch-metric-alarm-info-module",
    "return_values": {
      "metric_alarms": {
        "description": "The gathered information about specified metric alarms.",
        "type": "list",
        "returned": "when success",
        "elements": "elements=dictionary",
        "suboptions": {
          "actions_enabled": {
            "description": "Indicates whether actions should be executed during any changes to the alarm state.",
            "type": "boolean",
            "returned": "always"
          },
          "alarm_actions": {
            "description": "The actions to execute when this alarm transitions to an ALARM state from any other state.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string"
          },
          "alarm_arn": {
            "description": "The Amazon Resource Name (ARN) of the alarm.",
            "type": "string",
            "returned": "always"
          },
          "alarm_configuration_updated_timestamp": {
            "description": "The time stamp of the last update to the alarm configuration.",
            "type": "string",
            "returned": "always"
          },
          "alarm_description": {
            "description": "The description of the alarm.",
            "type": "string",
            "returned": "always"
          },
          "alarm_name": {
            "description": "Unique name for the alarm.",
            "type": "string",
            "returned": "always"
          },
          "comparison_operator": {
            "description": "The arithmetic operation to use when comparing the specified statistic and threshold.",
            "type": "string",
            "returned": "always"
          },
          "datapoints_to_alarm": {
            "description": "The number of data points that must be breaching to trigger the alarm.",
            "type": "integer",
            "returned": "always"
          },
          "dimensions": {
            "description": "The dimensions for the metric.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "name": {
                "description": "The name of the dimension.",
                "type": "string",
                "returned": "always"
              },
              "value": {
                "description": "The value of the dimension.",
                "type": "string",
                "returned": "always"
              }
            }
          },
          "evaluate_low_sample_count_percentile": {
            "description": "Used only for alarms based on percentiles. If ignore, the alarm state does not change during periods with too few data points to be statistically significant. If evaluate or this parameter is not used, the alarm is always evaluated and possibly changes state.",
            "type": "string",
            "returned": "always"
          },
          "evaluation_period": {
            "description": "The number of periods over which data is compared to the specified threshold.",
            "type": "integer",
            "returned": "always"
          },
          "extended_statistic": {
            "description": "The percentile statistic for the metric associated with the alarm.",
            "type": "string",
            "returned": "always"
          },
          "insufficient_data_actions": {
            "description": "The actions to execute when this alarm transitions to an INSUFFICIENT_DATA state from any other state.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string"
          },
          "metric_name": {
            "description": "Name of the monitored metric (e.g. CPUUtilization).",
            "type": "string",
            "returned": "always"
          },
          "metrics": {
            "description": "An array of MetricDataQuery structures, used in an alarm based on a metric math expression.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary"
          },
          "namespace": {
            "description": "Name of the appropriate namespace (AWS/EC2, System/Linux, etc.). Determines the category it will appear under in CloudWatch.",
            "type": "string",
            "returned": "always"
          },
          "ok_actions": {
            "description": "The actions to execute when this alarm transitions to an OK state from any other state.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string"
          },
          "period": {
            "description": "The length, in seconds, used each time the metric specified in MetricName is evaluated. Valid values are 10, 30, and any multiple of 60.",
            "type": "integer",
            "returned": "always"
          },
          "state_reason": {
            "description": "An explanation for the alarm state, in text format.",
            "type": "string",
            "returned": "always"
          },
          "state_reason_data": {
            "description": "An explanation for the alarm state, in JSON format.",
            "type": "string",
            "returned": "always"
          },
          "state_updated_timestamp": {
            "description": "The time stamp of the last update to the alarm state.",
            "type": "string",
            "returned": "always"
          },
          "state_value": {
            "description": "The state value for the alarm.",
            "type": "string",
            "returned": "always"
          },
          "statistic": {
            "description": "The statistic for the metric associated with the alarm, other than percentile.",
            "type": "string",
            "returned": "always"
          },
          "threshold": {
            "description": "The value to compare with the specified statistic.",
            "type": "float",
            "returned": "always"
          },
          "threshold_metric_id": {
            "description": "This is the ID of the ANOMALY_DETECTION_BAND function used as the threshold for the alarm.",
            "type": "string",
            "returned": "always"
          },
          "treat_missing_data": {
            "description": "Sets how alarm is to handle missing data points.",
            "type": "string",
            "returned": "always"
          },
          "unit": {
            "description": "Unit used when storing the metric",
            "type": "string",
            "returned": "always"
          }
        }
      }
    }
  },
  "cloudwatchevent_rule": {
    "description": "Manage CloudWatch Event rules and targets",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/cloudwatchevent_rule_module.html#ansible-collections-amazon-aws-cloudwatchevent-rule-module",
    "return_values": {
      "rule": {
        "description": "CloudWatch Event rule data.",
        "type": "dictionary",
        "returned": "success",
        "suboptions": {
          "arn": {
            "description": "The ARN associated with the rule.",
            "type": "string",
            "returned": "success",
            "sample": "\"arn:aws:events:us-east-1:123456789012:rule/MyCronTask\""
          },
          "description": {
            "description": "A description of the rule.",
            "type": "string",
            "returned": "success",
            "sample": "\"Run my scheduled task\""
          },
          "name": {
            "description": "The name of the rule you are creating, updating or deleting.",
            "type": "string",
            "returned": "success",
            "sample": "\"MyCronTask\""
          },
          "schedule_expression": {
            "description": "A cron or rate expression that defines the schedule the rule will trigger on.",
            "type": "string",
            "returned": "success",
            "sample": "\"cron(0 20 * * ? *)\""
          },
          "state": {
            "description": "Whether the rule is present (and enabled), disabled, or absent.",
            "type": "string",
            "returned": "success",
            "sample": "\"enabled\""
          }
        }
      },
      "targets": {
        "description": "CloudWatch Event target(s) assigned to the rule.",
        "type": "list",
        "returned": "success",
        "elements": "elements=dictionary",
        "suboptions": {
          "arn": {
            "description": "The ARN associated with the target.",
            "type": "string",
            "returned": "success",
            "sample": "\"arn:aws:lambda:us-east-1:123456789012:function:MyFunction\""
          },
          "id": {
            "description": "The unique target assignment ID.",
            "type": "string",
            "returned": "success",
            "sample": "\"MyTargetId\""
          }
        }
      }
    }
  },
  "cloudwatchlogs_log_group": {
    "description": "create or delete log_group in CloudWatchLogs",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/cloudwatchlogs_log_group_module.html#ansible-collections-amazon-aws-cloudwatchlogs-log-group-module",
    "return_values": {
      "arn": {
        "description": "The Amazon Resource Name (ARN) of the log group.",
        "type": "string",
        "returned": "always"
      },
      "creation_time": {
        "description": "The creation time of the log group.",
        "type": "integer",
        "returned": "always"
      },
      "kms_key_id": {
        "description": "The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.",
        "type": "string",
        "returned": "always"
      },
      "log_group_name": {
        "description": "The name of the log group.",
        "type": "string",
        "returned": "always"
      },
      "log_groups": {
        "description": "Return the list of complex objects representing log groups.",
        "type": "complex",
        "returned": "success",
        "suboptions": {
          "arn": {
            "description": "The Amazon Resource Name (ARN) of the log group.",
            "type": "string",
            "returned": "always"
          },
          "creation_time": {
            "description": "The creation time of the log group.",
            "type": "integer",
            "returned": "always"
          },
          "kms_key_id": {
            "description": "The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.",
            "type": "string",
            "returned": "always"
          },
          "log_group_name": {
            "description": "The name of the log group.",
            "type": "string",
            "returned": "always"
          },
          "metric_filter_count": {
            "description": "The number of metric filters.",
            "type": "integer",
            "returned": "always"
          },
          "retention_in_days": {
            "description": "The number of days to retain the log events in the specified log group.",
            "type": "integer",
            "returned": "always"
          },
          "stored_bytes": {
            "description": "The number of bytes stored.",
            "type": "string",
            "returned": "always"
          },
          "tags": {
            "description": "A dictionary representing the tags on the log group.",
            "type": "dictionary",
            "returned": "always"
          }
        }
      },
      "metric_filter_count": {
        "description": "The number of metric filters.",
        "type": "integer",
        "returned": "always"
      },
      "retention_in_days": {
        "description": "The number of days to retain the log events in the specified log group.",
        "type": "integer",
        "returned": "always"
      },
      "stored_bytes": {
        "description": "The number of bytes stored.",
        "type": "string",
        "returned": "always"
      },
      "tags": {
        "description": "A dictionary representing the tags on the log group.",
        "type": "dictionary",
        "returned": "always"
      }
    }
  },
  "cloudwatchlogs_log_group_info": {
    "description": "Get information about log_group in CloudWatchLogs",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/cloudwatchlogs_log_group_info_module.html#ansible-collections-amazon-aws-cloudwatchlogs-log-group-info-module",
    "return_values": {
      "log_groups": {
        "description": "Return the list of complex objects representing log groups.",
        "type": "complex",
        "returned": "success",
        "suboptions": {
          "arn": {
            "description": "The Amazon Resource Name (ARN) of the log group.",
            "type": "string",
            "returned": "always"
          },
          "creation_time": {
            "description": "The creation time of the log group.",
            "type": "integer",
            "returned": "always"
          },
          "kms_key_id": {
            "description": "The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.",
            "type": "string",
            "returned": "always"
          },
          "log_group_name": {
            "description": "The name of the log group.",
            "type": "string",
            "returned": "always"
          },
          "metric_filter_count": {
            "description": "The number of metric filters.",
            "type": "integer",
            "returned": "always"
          },
          "retention_in_days": {
            "description": "The number of days to retain the log events in the specified log group.",
            "type": "integer",
            "returned": "always"
          },
          "stored_bytes": {
            "description": "The number of bytes stored.",
            "type": "string",
            "returned": "always"
          },
          "tags": {
            "description": "A dictionary representing the tags on the log group.",
            "type": "dictionary",
            "returned": "always"
          }
        }
      }
    }
  },
  "cloudwatchlogs_log_group_metric_filter": {
    "description": "Manage CloudWatch log group metric filter",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/cloudwatchlogs_log_group_metric_filter_module.html#ansible-collections-amazon-aws-cloudwatchlogs-log-group-metric-filter-module",
    "return_values": {
      "metric_filters": {
        "description": "Return the origin response value.",
        "type": "list",
        "returned": "success",
        "elements": "elements=string",
        "sample": "[{\"default_value\": 3.1415, \"dimensions\": {\"hostname\": \"$.hostname\"}, \"metric_name\": \"box_free_space\", \"metric_namespace\": \"made_with_ansible\", \"metric_value\": \"$.value\", \"unit\": \"Bytes\"}]"
      }
    }
  },
  "ec2_ami": {
    "description": "Create or destroy an image (AMI) in EC2",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_ami_module.html#ansible-collections-amazon-aws-ec2-ami-module",
    "return_values": {
      "architecture": {
        "description": "Architecture of image.",
        "type": "string",
        "returned": "when AMI is created or already exists",
        "sample": "\"x86_64\""
      },
      "block_device_mapping": {
        "description": "Block device mapping associated with image.",
        "type": "dictionary",
        "returned": "when AMI is created or already exists",
        "sample": "{\"/dev/sda1\": {\"delete_on_termination\": true, \"encrypted\": false, \"size\": 10, \"snapshot_id\": \"snap-1a03b80e7\", \"volume_type\": \"standard\"}}"
      },
      "creationDate": {
        "description": "Creation date of image.",
        "type": "string",
        "returned": "when AMI is created or already exists",
        "sample": "\"2015-10-15T22:43:44.000Z\""
      },
      "description": {
        "description": "Description of image.",
        "type": "string",
        "returned": "when AMI is created or already exists",
        "sample": "\"nat-server\""
      },
      "enhanced_networking": {
        "description": "Specifies whether enhanced networking with ENA is enabled.",
        "type": "boolean",
        "returned": "when AMI is created or already exists",
        "sample": "true"
      },
      "hypervisor": {
        "description": "Type of hypervisor.",
        "type": "string",
        "returned": "when AMI is created or already exists",
        "sample": "\"xen\""
      },
      "image_id": {
        "description": "ID of the image.",
        "type": "string",
        "returned": "when AMI is created or already exists",
        "sample": "\"ami-1234abcd\""
      },
      "image_owner_alias": {
        "description": "The owner alias ( amazon | aws-marketplace).",
        "type": "string",
        "returned": "when AMI is created or already exists",
        "sample": "\"amazon\""
      },
      "image_type": {
        "description": "Type of image.",
        "type": "string",
        "returned": "when AMI is created or already exists",
        "sample": "\"machine\""
      },
      "is_public": {
        "description": "Whether image is public.",
        "type": "boolean",
        "returned": "when AMI is created or already exists",
        "sample": "false"
      },
      "kernel_id": {
        "description": "The kernel associated with the image, if any. Only applicable for machine images.",
        "type": "string",
        "returned": "when AMI is created or already exists",
        "sample": "\"aki-88aa75e1\""
      },
      "launch_permission": {
        "description": "Permissions allowing other accounts to access the AMI.",
        "type": "list",
        "returned": "when AMI is created or already exists",
        "elements": "elements=string",
        "sample": "[{\"group\": \"all\"}]"
      },
      "location": {
        "description": "Location of image.",
        "type": "string",
        "returned": "when AMI is created or already exists",
        "sample": "\"123456789012/nat-server\""
      },
      "name": {
        "description": "AMI name of image.",
        "type": "string",
        "returned": "when AMI is created or already exists",
        "sample": "\"nat-server\""
      },
      "ownerId": {
        "description": "Owner of image.",
        "type": "string",
        "returned": "when AMI is created or already exists",
        "sample": "\"123456789012\""
      },
      "platform": {
        "description": "Platform of image.",
        "type": "string",
        "returned": "when AMI is created or already exists",
        "sample": "\"Windows\""
      },
      "product_codes": {
        "description": "Any product codes associated with the AMI.",
        "type": "list",
        "returned": "when AMI is created or already exists",
        "elements": "elements=string",
        "sample": "[]"
      },
      "ramdisk_id": {
        "description": "The RAM disk associated with the image, if any. Only applicable for machine images.",
        "type": "string",
        "returned": "when AMI is created or already exists"
      },
      "root_device_name": {
        "description": "Root device name of image.",
        "type": "string",
        "returned": "when AMI is created or already exists",
        "sample": "\"/dev/sda1\""
      },
      "root_device_type": {
        "description": "Root device type of image.",
        "type": "string",
        "returned": "when AMI is created or already exists",
        "sample": "\"ebs\""
      },
      "snapshots_deleted": {
        "description": "A list of snapshot ids deleted after deregistering image.",
        "type": "list",
        "returned": "after AMI is deregistered, if delete_snapshot=true",
        "elements": "elements=string",
        "sample": "[\"snap-fbcccb8f\", \"snap-cfe7cdb4\"]"
      },
      "sriov_net_support": {
        "description": "Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.",
        "type": "string",
        "returned": "when AMI is created or already exists",
        "sample": "\"simple\""
      },
      "state": {
        "description": "State of image.",
        "type": "string",
        "returned": "when AMI is created or already exists",
        "sample": "\"available\""
      },
      "state_reason": {
        "description": "The reason for the state change.",
        "type": "dictionary",
        "returned": "when AMI is created or already exists",
        "sample": "{\"Code\": \"string\", \"Message\": \"string\"}"
      },
      "tags": {
        "description": "A dictionary of tags assigned to image.",
        "type": "dictionary",
        "returned": "when AMI is created or already exists",
        "sample": "{\"Env\": \"devel\", \"Name\": \"nat-server\"}"
      },
      "virtualization_type": {
        "description": "Image virtualization type.",
        "type": "string",
        "returned": "when AMI is created or already exists",
        "sample": "\"hvm\""
      }
    }
  },
  "ec2_ami_info": {
    "description": "Gather information about EC2 AMIs",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_ami_info_module.html#ansible-collections-amazon-aws-ec2-ami-info-module",
    "return_values": {
      "images": {
        "description": "A list of images.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "architecture": {
            "description": "The architecture of the image.",
            "type": "string",
            "returned": "always",
            "sample": "\"x86_64\""
          },
          "block_device_mappings": {
            "description": "Any block device mapping entries.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "device_name": {
                "description": "The device name exposed to the instance.",
                "type": "string",
                "returned": "always",
                "sample": "\"/dev/sda1\""
              },
              "ebs": {
                "description": "EBS volumes",
                "type": "complex",
                "returned": "always"
              }
            }
          },
          "creation_date": {
            "description": "The date and time the image was created.",
            "type": "string",
            "returned": "always",
            "sample": "\"2017-10-16T19:22:13.000Z\""
          },
          "description": {
            "description": "The description of the AMI.",
            "type": "string",
            "returned": "success",
            "sample": "\"\""
          },
          "ena_support": {
            "description": "Whether enhanced networking with ENA is enabled.",
            "type": "boolean",
            "returned": "always",
            "sample": "true"
          },
          "hypervisor": {
            "description": "The hypervisor type of the image.",
            "type": "string",
            "returned": "always",
            "sample": "\"xen\""
          },
          "image_id": {
            "description": "The ID of the AMI.",
            "type": "string",
            "returned": "always",
            "sample": "\"ami-5b466623\""
          },
          "image_location": {
            "description": "The location of the AMI.",
            "type": "string",
            "returned": "always",
            "sample": "\"123456789012/Webapp\""
          },
          "image_type": {
            "description": "The type of image.",
            "type": "string",
            "returned": "always",
            "sample": "\"machine\""
          },
          "launch_permissions": {
            "description": "A List of AWS accounts may launch the AMI.",
            "type": "list",
            "returned": "When image is owned by calling account and describe_image_attributes=true.",
            "elements": "elements=dictionary",
            "sample": "[{\"group\": \"all\"}, {\"user_id\": \"123456789012\"}]",
            "suboptions": {
              "group": {
                "description": "A value of \u2018all\u2019 means the AMI is public.",
                "type": "string",
                "returned": "success"
              },
              "user_id": {
                "description": "An AWS account ID with permissions to launch the AMI.",
                "type": "string",
                "returned": "success"
              }
            }
          },
          "name": {
            "description": "The name of the AMI that was provided during image creation.",
            "type": "string",
            "returned": "always",
            "sample": "\"Webapp\""
          },
          "owner_id": {
            "description": "The AWS account ID of the image owner.",
            "type": "string",
            "returned": "always",
            "sample": "\"123456789012\""
          },
          "platform_details": {
            "description": "Platform of image.",
            "type": "string",
            "returned": "always",
            "sample": "\"Windows\""
          },
          "public": {
            "description": "Whether the image has public launch permissions.",
            "type": "boolean",
            "returned": "always",
            "sample": "true"
          },
          "root_device_name": {
            "description": "The device name of the root device.",
            "type": "string",
            "returned": "always",
            "sample": "\"/dev/sda1\""
          },
          "root_device_type": {
            "description": "The type of root device used by the AMI.",
            "type": "string",
            "returned": "always",
            "sample": "\"ebs\""
          },
          "sriov_net_support": {
            "description": "Whether enhanced networking is enabled.",
            "type": "string",
            "returned": "success",
            "sample": "\"simple\""
          },
          "state": {
            "description": "The current state of the AMI.",
            "type": "string",
            "returned": "always",
            "sample": "\"available\""
          },
          "tags": {
            "description": "Any tags assigned to the image.",
            "type": "dictionary",
            "returned": "always"
          },
          "usage_operation": {
            "description": "The operation of the Amazon EC2 instance and the billing code that is associated with the AMI.",
            "type": "string",
            "returned": "always",
            "sample": "\"RunInstances\""
          },
          "virtualization_type": {
            "description": "The type of virtualization of the AMI.",
            "type": "string",
            "returned": "always",
            "sample": "\"hvm\""
          }
        }
      }
    }
  },
  "ec2_dedicated_host": {
    "description": "Create, update or delete (release) EC2 dedicated host",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_dedicated_host_module.html#ansible-collections-amazon-aws-ec2-dedicated-host-module",
    "return_values": {
      "host": {
        "description": "Information about the dedicated host created/updated.",
        "type": "complex",
        "returned": "When state=present",
        "suboptions": {
          "allocation_time": {
            "description": "The time that the Dedicated Host was allocated.",
            "type": "string",
            "returned": "always",
            "sample": "\"2025-02-12T12:09:22+00:00\""
          },
          "allows_multiple_instance_types": {
            "description": "Indicates whether the Dedicated Host supports multiple instance types of the same instance family.",
            "type": "string",
            "returned": "always",
            "sample": "\"off\""
          },
          "asset_id": {
            "description": "The ID of the Outpost hardware asset on which the Dedicated Host is allocated.",
            "type": "string",
            "returned": "always",
            "sample": "\"abcdefgh\""
          },
          "auto_placement": {
            "description": "Whether auto-placement is on or off.",
            "type": "string",
            "returned": "always",
            "sample": "\"off\""
          },
          "availability_zone": {
            "description": "The Availability Zone of the Dedicated Host.",
            "type": "string",
            "returned": "always",
            "sample": "\"us-east-1b\""
          },
          "availability_zone_id": {
            "description": "The ID of the Availability Zone in which the Dedicated Host is allocated.",
            "type": "string",
            "returned": "always",
            "sample": "\"use1-az6\""
          },
          "available_capacity": {
            "description": "Information about the instances running on the Dedicated Host.",
            "type": "dictionary",
            "returned": "always",
            "suboptions": {
              "available_instance_capacity": {
                "description": "The number of instances that can be launched onto the Dedicated Host.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "available_capacity": {
                    "description": "The number of instances that can be launched onto the Dedicated Host.",
                    "type": "integer",
                    "returned": "always",
                    "sample": "1"
                  },
                  "instance_type": {
                    "description": "The instance type supported by the Dedicated Host.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"mac2.metal\""
                  },
                  "total_capacity": {
                    "description": "The total number of instances that can be launched onto the Dedicated Host if there are no instances running on it.",
                    "type": "dictionary",
                    "returned": "always",
                    "sample": "1"
                  }
                }
              },
              "available_v_cpus": {
                "description": "The number of vCPUs available for launching instances onto the Dedicated Host.",
                "type": "integer",
                "returned": "always",
                "sample": "8"
              }
            }
          },
          "client_token": {
            "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
            "type": "string",
            "returned": "always",
            "sample": "\"token-0123456789a\""
          },
          "host_id": {
            "description": "The ID of the Dedicated Host.",
            "type": "string",
            "returned": "always",
            "sample": "\"h-03f51341e6e39f848\""
          },
          "host_maintenance": {
            "description": "Indicates whether host maintenance is enabled or disabled for the Dedicated Host.",
            "type": "string",
            "returned": "always",
            "sample": "\"off\""
          },
          "host_properties": {
            "description": "The hardware specifications of the Dedicated Host.",
            "type": "dictionary",
            "returned": "always",
            "suboptions": {
              "cores": {
                "description": "The number of cores on the Dedicated Host.",
                "type": "integer",
                "returned": "always",
                "sample": "8"
              },
              "instance_family": {
                "description": "The instance family supported by the Dedicated Host.",
                "type": "string",
                "returned": "if defined",
                "sample": "\"mac2\""
              },
              "instance_type": {
                "description": "The instance type supported by the Dedicated Host.",
                "type": "string",
                "returned": "always",
                "sample": "\"mac2.metal\""
              },
              "sockets": {
                "description": "The number of sockets on the Dedicated Host.",
                "type": "integer",
                "returned": "always",
                "sample": "1"
              },
              "total_v_cpus": {
                "description": "The total number of vCPUs on the Dedicated Host.",
                "type": "integer",
                "returned": "always",
                "sample": "8"
              }
            }
          },
          "host_recovery": {
            "description": "Indicates whether host recovery is enabled or disabled for the Dedicated Host.",
            "type": "string",
            "returned": "always",
            "sample": "\"off\""
          },
          "host_reservation_id": {
            "description": "The reservation ID of the Dedicated Host.",
            "type": "string",
            "returned": "always"
          },
          "instances": {
            "description": "The IDs and instance type that are currently running on the Dedicated Host.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "instance_id": {
                "description": "The ID of instance that is running on the Dedicated Host.",
                "type": "string",
                "returned": "always",
                "sample": "\"i-0123456789abcd\""
              },
              "instance_type": {
                "description": "The instance type of the running instance.",
                "type": "string",
                "returned": "always",
                "sample": "\"ec2.micro\""
              },
              "owner_id": {
                "description": "The ID of the Amazon Web Services account that owns the instance.",
                "type": "string",
                "returned": "always",
                "sample": "\"0123456789\""
              }
            }
          },
          "member_of_service_linked_resource_group": {
            "description": "Indicates whether the Dedicated Host is in a host resource group.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "outpost_arn": {
            "description": "The Amazon Resource Name (ARN) of the Amazon Web Services Outpost on which the Dedicated Host is allocated.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:outposts:us-east-1:0123012301230123:outpost/op-0123456789abcdef0\""
          },
          "owner_id": {
            "description": "The ID of the Amazon Web Services account that owns the Dedicated Host.",
            "type": "string",
            "returned": "always",
            "sample": "\"0123456789\""
          },
          "release_time": {
            "description": "The time that the Dedicated Host was released.",
            "type": "string",
            "returned": "always",
            "sample": "\"2025-02-12T12:09:22+00:00\""
          },
          "state": {
            "description": "The state of the Dedicated Host.",
            "type": "string",
            "returned": "always",
            "sample": "\"available\""
          },
          "tags": {
            "description": "Dictionary of tags added to the dedicated host.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{}"
          }
        }
      }
    }
  },
  "ec2_dedicated_host_info": {
    "description": "Gather information about EC2 Dedicated Hosts in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_dedicated_host_info_module.html#ansible-collections-amazon-aws-ec2-dedicated-host-info-module",
    "return_values": {
      "hosts": {
        "description": "List of dedicated hosts.",
        "type": "complex",
        "returned": "When mac_only=false",
        "suboptions": {
          "allocation_time": {
            "description": "The time that the Dedicated Host was allocated.",
            "type": "string",
            "returned": "always",
            "sample": "\"2025-02-12T12:09:22+00:00\""
          },
          "allows_multiple_instance_types": {
            "description": "Indicates whether the Dedicated Host supports multiple instance types of the same instance family.",
            "type": "string",
            "returned": "always",
            "sample": "\"off\""
          },
          "asset_id": {
            "description": "The ID of the Outpost hardware asset on which the Dedicated Host is allocated.",
            "type": "string",
            "returned": "always",
            "sample": "\"abcdefgh\""
          },
          "auto_placement": {
            "description": "Whether auto-placement is on or off.",
            "type": "string",
            "returned": "always",
            "sample": "\"off\""
          },
          "availability_zone": {
            "description": "The Availability Zone of the Dedicated Host.",
            "type": "string",
            "returned": "always",
            "sample": "\"us-east-1b\""
          },
          "availability_zone_id": {
            "description": "The ID of the Availability Zone in which the Dedicated Host is allocated.",
            "type": "string",
            "returned": "always",
            "sample": "\"use1-az6\""
          },
          "available_capacity": {
            "description": "Information about the instances running on the Dedicated Host.",
            "type": "dictionary",
            "returned": "always",
            "suboptions": {
              "available_instance_capacity": {
                "description": "The number of instances that can be launched onto the Dedicated Host.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "available_capacity": {
                    "description": "The number of instances that can be launched onto the Dedicated Host.",
                    "type": "integer",
                    "returned": "always",
                    "sample": "1"
                  },
                  "instance_type": {
                    "description": "The instance type supported by the Dedicated Host.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"mac2.metal\""
                  },
                  "total_capacity": {
                    "description": "The total number of instances that can be launched onto the Dedicated Host if there are no instances running on it.",
                    "type": "dictionary",
                    "returned": "always",
                    "sample": "1"
                  }
                }
              },
              "available_v_cpus": {
                "description": "The number of vCPUs available for launching instances onto the Dedicated Host.",
                "type": "integer",
                "returned": "always",
                "sample": "8"
              }
            }
          },
          "client_token": {
            "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
            "type": "string",
            "returned": "always",
            "sample": "\"token-0123456789a\""
          },
          "host_id": {
            "description": "The ID of the Dedicated Host.",
            "type": "string",
            "returned": "always",
            "sample": "\"h-03f51341e6e39f848\""
          },
          "host_maintenance": {
            "description": "Indicates whether host maintenance is enabled or disabled for the Dedicated Host.",
            "type": "string",
            "returned": "always",
            "sample": "\"off\""
          },
          "host_properties": {
            "description": "The hardware specifications of the Dedicated Host.",
            "type": "dictionary",
            "returned": "always",
            "suboptions": {
              "cores": {
                "description": "The number of cores on the Dedicated Host.",
                "type": "integer",
                "returned": "always",
                "sample": "8"
              },
              "instance_family": {
                "description": "The instance family supported by the Dedicated Host.",
                "type": "string",
                "returned": "if defined",
                "sample": "\"mac2\""
              },
              "instance_type": {
                "description": "The instance type supported by the Dedicated Host.",
                "type": "string",
                "returned": "always",
                "sample": "\"mac2.metal\""
              },
              "sockets": {
                "description": "The number of sockets on the Dedicated Host.",
                "type": "integer",
                "returned": "always",
                "sample": "1"
              },
              "total_v_cpus": {
                "description": "The total number of vCPUs on the Dedicated Host.",
                "type": "integer",
                "returned": "always",
                "sample": "8"
              }
            }
          },
          "host_recovery": {
            "description": "Indicates whether host recovery is enabled or disabled for the Dedicated Host.",
            "type": "string",
            "returned": "always",
            "sample": "\"off\""
          },
          "host_reservation_id": {
            "description": "The reservation ID of the Dedicated Host.",
            "type": "string",
            "returned": "always"
          },
          "instances": {
            "description": "The IDs and instance type that are currently running on the Dedicated Host.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "instance_id": {
                "description": "The ID of instance that is running on the Dedicated Host.",
                "type": "string",
                "returned": "always",
                "sample": "\"i-0123456789abcd\""
              },
              "instance_type": {
                "description": "The instance type of the running instance.",
                "type": "string",
                "returned": "always",
                "sample": "\"ec2.micro\""
              },
              "owner_id": {
                "description": "The ID of the Amazon Web Services account that owns the instance.",
                "type": "string",
                "returned": "always",
                "sample": "\"0123456789\""
              }
            }
          },
          "member_of_service_linked_resource_group": {
            "description": "Indicates whether the Dedicated Host is in a host resource group.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "outpost_arn": {
            "description": "The Amazon Resource Name (ARN) of the Amazon Web Services Outpost on which the Dedicated Host is allocated.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:outposts:us-east-1:0123012301230123:outpost/op-0123456789abcdef0\""
          },
          "owner_id": {
            "description": "The ID of the Amazon Web Services account that owns the Dedicated Host.",
            "type": "string",
            "returned": "always",
            "sample": "\"0123456789\""
          },
          "release_time": {
            "description": "The time that the Dedicated Host was released.",
            "type": "string",
            "returned": "always",
            "sample": "\"2025-02-12T12:09:22+00:00\""
          },
          "state": {
            "description": "The state of the Dedicated Host.",
            "type": "string",
            "returned": "always",
            "sample": "\"available\""
          },
          "tags": {
            "description": "Dictionary of tags added to the dedicated host.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{}"
          }
        }
      },
      "mac_hosts": {
        "description": "List of EC2 Mac dedicated hosts.",
        "type": "complex",
        "returned": "When mac_only=true",
        "suboptions": {
          "host_id": {
            "description": "The EC2 Mac Dedicated Host ID.",
            "type": "string",
            "returned": "always",
            "sample": "\"h-04b38258aba8c1875\""
          },
          "mac_os_latest_supported_versions": {
            "description": "The latest macOS versions that the EC2 Mac Dedicated Host can launch without being upgraded.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[\"15.3\", \"14.7.3\", \"13.7.3\"]"
          }
        }
      }
    }
  },
  "ec2_eip": {
    "description": "manages EC2 elastic IP (EIP) addresses.",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_eip_module.html#ansible-collections-amazon-aws-ec2-eip-module",
    "return_values": {
      "allocation_id": {
        "description": "Allocation id of the elastic ip.",
        "type": "string",
        "returned": "on success",
        "sample": "\"eipalloc-51aa3a6c\""
      },
      "public_ip": {
        "description": "An elastic ip address.",
        "type": "string",
        "returned": "on success",
        "sample": "\"52.88.159.209\""
      },
      "update_reverse_dns_record_result": {
        "description": "Information about result of update reverse dns record operation.",
        "type": "dictionary",
        "returned": "When domain_name is specified.",
        "suboptions": {
          "address": {
            "description": "Information about the Elastic IP address.",
            "type": "dictionary",
            "returned": "always",
            "suboptions": {
              "allocation_id": {
                "description": "The allocation ID.",
                "type": "string",
                "returned": "always",
                "sample": "\"eipalloc-00a11aa111aaa1a11\""
              },
              "ptr_record": {
                "description": "The pointer (PTR) record for the IP address.",
                "type": "string",
                "returned": "always",
                "sample": "\"ec2-11-22-33-44.us-east-2.compute.amazonaws.com.\""
              },
              "ptr_record_update": {
                "description": "The updated PTR record for the IP address.",
                "type": "dictionary",
                "returned": "always",
                "suboptions": {
                  "status": {
                    "description": "The status of the PTR record update.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"PENDING\""
                  },
                  "value": {
                    "description": "The value for the PTR record update.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"example.com\""
                  }
                }
              },
              "public_ip": {
                "description": "The public IP address.",
                "type": "string",
                "returned": "always",
                "sample": "\"11.22.33.44\""
              }
            }
          }
        }
      }
    }
  },
  "ec2_eip_info": {
    "description": "List EC2 EIP details",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_eip_info_module.html#ansible-collections-amazon-aws-ec2-eip-info-module",
    "return_values": {
      "addresses": {
        "description": "Properties of all Elastic IP addresses matching the provided filters. Each element is a dict with all the information related to an EIP.",
        "type": "list",
        "returned": "on success",
        "elements": "elements=dictionary",
        "suboptions": {
          "allocation_id": {
            "description": "The ID representing the allocation of the address.",
            "type": "string",
            "returned": "always",
            "sample": "\"eipalloc-64de1b01\""
          },
          "association_id": {
            "description": "The ID representing the association of the address with an instance.",
            "type": "string",
            "returned": "success",
            "sample": "\"eipassoc-0fe9ce90d6e983e97\""
          },
          "domain": {
            "description": "The network (vpc).",
            "type": "string",
            "returned": "always",
            "sample": "\"vpc\""
          },
          "instance_id": {
            "description": "The ID of the instance that the address is associated with (if any).",
            "type": "string",
            "returned": "if any instance is associated",
            "sample": "\"i-01020cfeb25b0c84f\""
          },
          "network_border_group": {
            "description": "The name of the unique set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses.",
            "type": "string",
            "returned": "if any instance is associated",
            "sample": "\"us-east-1\""
          },
          "network_interface_id": {
            "description": "The ID of the network interface.",
            "type": "string",
            "returned": "if any instance is associated",
            "sample": "\"eni-02fdeadfd4beef9323b\""
          },
          "network_interface_owner_id": {
            "description": "The ID of the network interface.",
            "type": "string",
            "returned": "if any instance is associated",
            "sample": "\"0123456789\""
          },
          "private_ip_address": {
            "description": "The private IP address associated with the Elastic IP address.",
            "type": "string",
            "returned": "always",
            "sample": "\"10.0.0.1\""
          },
          "public_ip": {
            "description": "The Elastic IP address.",
            "type": "string",
            "returned": "if any instance is associated",
            "sample": "\"54.81.104.1\""
          },
          "tags": {
            "description": "Any tags assigned to the Elastic IP address.",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"Name\": \"test-vm-54.81.104.1\"}"
          }
        }
      }
    }
  },
  "ec2_eni": {
    "description": "Create and optionally attach an Elastic Network Interface (ENI) to an instance",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_eni_module.html#ansible-collections-amazon-aws-ec2-eni-module",
    "return_values": {
      "interface": {
        "description": "Network interface attributes.",
        "type": "complex",
        "returned": "when state != absent",
        "suboptions": {
          "attachment": {
            "description": "The network interface attachment.",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"attach_time\": \"2024-04-25T20:57:20+00:00\", \"attachment_id\": \"eni-attach-0ddce58b341a1846f\", \"delete_on_termination\": true, \"device_index\": 0, \"instance_id\": \"i-032cb1cceb29250d2\", \"status\": \"attached\"}"
          },
          "description": {
            "description": "Interface description.",
            "type": "string",
            "returned": "success",
            "sample": "\"Firewall network interface\""
          },
          "groups": {
            "description": "Dict of security groups.",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"sg-f8a8a9da\": \"default\"}"
          },
          "id": {
            "description": "Network interface id.",
            "type": "string",
            "returned": "success",
            "sample": "\"eni-1d889198\""
          },
          "mac_address": {
            "description": "Interface\u2019s physical address.",
            "type": "string",
            "returned": "success",
            "sample": "\"00:00:5E:00:53:23\""
          },
          "name": {
            "description": "The name of the ENI.",
            "type": "string",
            "returned": "success",
            "sample": "\"my-eni-20\""
          },
          "owner_id": {
            "description": "AWS account id.",
            "type": "string",
            "returned": "success",
            "sample": "\"812381371\""
          },
          "private_ip_address": {
            "description": "Primary ip address of this interface.",
            "type": "string",
            "returned": "success",
            "sample": "\"10.20.30.40\""
          },
          "private_ip_addresses": {
            "description": "List of all private ip addresses associated to this interface.",
            "type": "list",
            "returned": "success",
            "elements": "elements=dictionary",
            "sample": "[{\"primary_address\": true, \"private_ip_address\": \"10.20.30.40\"}]"
          },
          "source_dest_check": {
            "description": "Value of source/dest check flag.",
            "type": "boolean",
            "returned": "success",
            "sample": "true"
          },
          "status": {
            "description": "Network interface status.",
            "type": "string",
            "returned": "success",
            "sample": "\"pending\""
          },
          "subnet_id": {
            "description": "Which vpc subnet the interface is bound.",
            "type": "string",
            "returned": "success",
            "sample": "\"subnet-b0a0393c\""
          },
          "tags": {
            "description": "The dictionary of tags associated with the ENI.",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"Name\": \"my-eni\", \"group\": \"Finance\"}"
          },
          "vpc_id": {
            "description": "Which vpc this network interface is bound.",
            "type": "string",
            "returned": "success",
            "sample": "\"vpc-9a9a9da\""
          }
        }
      }
    }
  },
  "ec2_eni_info": {
    "description": "Gather information about EC2 ENI interfaces in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_eni_info_module.html#ansible-collections-amazon-aws-ec2-eni-info-module",
    "return_values": {
      "network_interfaces": {
        "description": "List of matching elastic network interfaces.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "association": {
            "description": "Info of associated elastic IP (EIP).",
            "type": "dictionary",
            "returned": "When an ENI is associated with an EIP",
            "sample": "{\"allocation_id\": \"eipalloc-5sdf123\", \"association_id\": \"eipassoc-8sdf123\", \"ip_owner_id\": \"123456789012\", \"public_dns_name\": \"ec2-52-1-0-63.compute-1.amazonaws.com\", \"public_ip\": \"52.1.0.63\"}"
          },
          "attachment": {
            "description": "Info about attached ec2 instance.",
            "type": "dictionary",
            "returned": "When an ENI is attached to an ec2 instance",
            "sample": "{\"attach_time\": \"2017-08-05T15:25:47+00:00\", \"attachment_id\": \"eni-attach-149d21234\", \"delete_on_termination\": false, \"device_index\": 1, \"instance_id\": \"i-15b8d3cadbafa1234\", \"instance_owner_id\": \"123456789012\", \"network_card_index\": 0, \"status\": \"attached\"}"
          },
          "availability_zone": {
            "description": "Availability zone of ENI.",
            "type": "string",
            "returned": "always",
            "sample": "\"us-east-1b\""
          },
          "description": {
            "description": "Description text for ENI.",
            "type": "string",
            "returned": "always",
            "sample": "\"My favourite network interface\""
          },
          "groups": {
            "description": "List of attached security groups.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[{\"group_id\": \"sg-26d0f1234\", \"group_name\": \"my_ec2_security_group\"}]"
          },
          "id": {
            "description": "The id of the ENI (alias for network_interfaces.network_interface_id).",
            "type": "string",
            "returned": "always",
            "sample": "\"eni-392fsdf\""
          },
          "interface_type": {
            "description": "Type of the network interface.",
            "type": "string",
            "returned": "always",
            "sample": "\"interface\""
          },
          "ipv6_addresses": {
            "description": "List of IPv6 addresses for this interface.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[]"
          },
          "mac_address": {
            "description": "MAC address of the network interface.",
            "type": "string",
            "returned": "always",
            "sample": "\"0a:f8:10:2f:ab:a1\""
          },
          "name": {
            "description": "The Name tag of the ENI, often displayed in the AWS UIs as Name.",
            "type": "string",
            "returned": "When a Name tag has been set"
          },
          "network_interface_id": {
            "description": "The id of the ENI.",
            "type": "string",
            "returned": "always",
            "sample": "\"eni-392fsdf\""
          },
          "owner_id": {
            "description": "AWS account id of the owner of the ENI.",
            "type": "string",
            "returned": "always",
            "sample": "\"123456789012\""
          },
          "private_dns_name": {
            "description": "Private DNS name for the ENI.",
            "type": "string",
            "returned": "always",
            "sample": "\"ip-172-16-1-180.ec2.internal\""
          },
          "private_ip_address": {
            "description": "Private IP address for the ENI.",
            "type": "string",
            "returned": "always",
            "sample": "\"172.16.1.180\""
          },
          "private_ip_addresses": {
            "description": "List of private IP addresses attached to the ENI.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[]"
          },
          "requester_id": {
            "description": "The ID of the entity that launched the ENI.",
            "type": "string",
            "returned": "success",
            "sample": "\"AIDA12345EXAMPLE54321\""
          },
          "requester_managed": {
            "description": "Indicates whether the network interface is being managed by an AWS service.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "source_dest_check": {
            "description": "Indicates whether the network interface performs source/destination checking.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "status": {
            "description": "Indicates if the network interface is attached to an instance or not.",
            "type": "string",
            "returned": "always",
            "sample": "\"in-use\""
          },
          "subnet_id": {
            "description": "Subnet ID the ENI is in.",
            "type": "string",
            "returned": "always",
            "sample": "\"subnet-7bbf01234\""
          },
          "tag_set": {
            "description": "Dictionary of tags added to the ENI.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{}"
          },
          "tags": {
            "description": "Dictionary of tags added to the ENI.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{}"
          },
          "vpc_id": {
            "description": "ID of the VPC the network interface it part of.",
            "type": "string",
            "returned": "always",
            "sample": "\"vpc-b3f1f123\""
          }
        }
      }
    }
  },
  "ec2_import_image": {
    "description": "Manage AWS EC2 import image tasks",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_import_image_module.html#ansible-collections-amazon-aws-ec2-import-image-module",
    "return_values": {
      "import_image": {
        "description": "A dict containing information about an EC2 import task.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "architecture": {
            "description": "The architecture of the virtual machine.",
            "type": "string",
            "returned": "success"
          },
          "description": {
            "description": "A description string for the import image task.",
            "type": "string",
            "returned": "success"
          },
          "encrypted": {
            "description": "Specifies whether the destination AMI of the imported image should be encrypted.",
            "type": "boolean",
            "returned": "success"
          },
          "hypervisor": {
            "description": "The target hypervisor platform.",
            "type": "string",
            "returned": "success"
          },
          "image_id": {
            "description": "The ID of the Amazon Machine Image (AMI) created by the import task.",
            "type": "string",
            "returned": "success"
          },
          "import_task_id": {
            "description": "The task ID of the import image task.",
            "type": "string",
            "returned": "success"
          },
          "kms_key_id": {
            "description": "The identifier for the symmetric KMS key that was used to create the encrypted AMI.",
            "type": "string",
            "returned": "success"
          },
          "license_specifications": {
            "description": "The ARNs of the license configurations.",
            "type": "dictionary",
            "returned": "success"
          },
          "license_type": {
            "description": "The license type to be used for the Amazon Machine Image (AMI) after importing.",
            "type": "string",
            "returned": "success"
          },
          "platform": {
            "description": "The operating system of the virtual machine.",
            "type": "string",
            "returned": "success"
          },
          "progress": {
            "description": "The progress of the task.",
            "type": "string",
            "returned": "success"
          },
          "role_name": {
            "description": "The name of the role to use when not using the default role, \u2018vmimport\u2019.",
            "type": "string",
            "returned": "success"
          },
          "snapshot_details": {
            "description": "Describes the snapshot created from the imported disk.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "description": {
                "description": "A description for the snapshot.",
                "type": "string",
                "returned": "success"
              },
              "device_name": {
                "description": "The block device mapping for the snapshot.",
                "type": "string",
                "returned": "success"
              },
              "disk_image_size": {
                "description": "The size of the disk in the snapshot, in GiB.",
                "type": "float",
                "returned": "success"
              },
              "format": {
                "description": "The format of the disk image from which the snapshot is created.",
                "type": "string",
                "returned": "success"
              },
              "progress": {
                "description": "The percentage of progress for the task.",
                "type": "string",
                "returned": "success"
              },
              "snapshot_id": {
                "description": "The snapshot ID of the disk being imported.",
                "type": "string",
                "returned": "success"
              },
              "status": {
                "description": "A brief status of the snapshot creation.",
                "type": "string",
                "returned": "success"
              },
              "status_message": {
                "description": "A detailed status message for the snapshot creation.",
                "type": "string",
                "returned": "success"
              },
              "url": {
                "description": "The URL used to access the disk image.",
                "type": "string",
                "returned": "success"
              },
              "user_bucket": {
                "description": "The Amazon S3 bucket for the disk image.",
                "type": "dictionary",
                "returned": "success"
              }
            }
          },
          "status": {
            "description": "A brief status of the task.",
            "type": "string",
            "returned": "success"
          },
          "status_message": {
            "description": "A detailed status message of the import task.",
            "type": "string",
            "returned": "success"
          },
          "tags": {
            "description": "The tags to apply to the import image task during creation.",
            "type": "dictionary",
            "returned": "success"
          },
          "task_name": {
            "description": "The name of the EC2 image import task.",
            "type": "string",
            "returned": "success"
          },
          "usage_operation": {
            "description": "The usage operation value.",
            "type": "dictionary",
            "returned": "success"
          }
        }
      }
    }
  },
  "ec2_import_image_info": {
    "description": "Gather information about import virtual machine tasks",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_import_image_info_module.html#ansible-collections-amazon-aws-ec2-import-image-info-module",
    "return_values": {
      "import_image": {
        "description": "A list of EC2 import tasks.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "architecture": {
            "description": "The architecture of the virtual machine.",
            "type": "string",
            "returned": "success"
          },
          "description": {
            "description": "A description string for the import image task.",
            "type": "string",
            "returned": "success"
          },
          "encrypted": {
            "description": "Specifies whether the destination AMI of the imported image should be encrypted.",
            "type": "boolean",
            "returned": "success"
          },
          "hypervisor": {
            "description": "The target hypervisor platform.",
            "type": "string",
            "returned": "success"
          },
          "image_id": {
            "description": "The ID of the Amazon Machine Image (AMI) created by the import task.",
            "type": "string",
            "returned": "success"
          },
          "import_task_id": {
            "description": "The task ID of the import image task.",
            "type": "string",
            "returned": "success"
          },
          "kms_key_id": {
            "description": "The identifier for the symmetric KMS key that was used to create the encrypted AMI.",
            "type": "string",
            "returned": "success"
          },
          "license_specifications": {
            "description": "The ARNs of the license configurations.",
            "type": "dictionary",
            "returned": "success"
          },
          "license_type": {
            "description": "The license type to be used for the Amazon Machine Image (AMI) after importing.",
            "type": "string",
            "returned": "success"
          },
          "platform": {
            "description": "The operating system of the virtual machine.",
            "type": "string",
            "returned": "success"
          },
          "progress": {
            "description": "The progress of the task.",
            "type": "string",
            "returned": "success"
          },
          "role_name": {
            "description": "The name of the role to use when not using the default role, \u2018vmimport\u2019.",
            "type": "string",
            "returned": "success"
          },
          "snapshot_details": {
            "description": "Describes the snapshot created from the imported disk.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "description": {
                "description": "A description for the snapshot.",
                "type": "string",
                "returned": "success"
              },
              "device_name": {
                "description": "The block device mapping for the snapshot.",
                "type": "string",
                "returned": "success"
              },
              "disk_image_size": {
                "description": "The size of the disk in the snapshot, in GiB.",
                "type": "float",
                "returned": "success"
              },
              "format": {
                "description": "The format of the disk image from which the snapshot is created.",
                "type": "string",
                "returned": "success"
              },
              "progress": {
                "description": "The percentage of progress for the task.",
                "type": "string",
                "returned": "success"
              },
              "snapshot_id": {
                "description": "The snapshot ID of the disk being imported.",
                "type": "string",
                "returned": "success"
              },
              "status": {
                "description": "A brief status of the snapshot creation.",
                "type": "string",
                "returned": "success"
              },
              "status_message": {
                "description": "A detailed status message for the snapshot creation.",
                "type": "string",
                "returned": "success"
              },
              "url": {
                "description": "The URL used to access the disk image.",
                "type": "string",
                "returned": "success"
              },
              "user_bucket": {
                "description": "The Amazon S3 bucket for the disk image.",
                "type": "dictionary",
                "returned": "success"
              }
            }
          },
          "status": {
            "description": "A brief status of the task.",
            "type": "string",
            "returned": "success"
          },
          "status_message": {
            "description": "A detailed status message of the import task.",
            "type": "string",
            "returned": "success"
          },
          "tags": {
            "description": "The tags to apply to the import image task during creation.",
            "type": "dictionary",
            "returned": "success"
          },
          "task_name": {
            "description": "The name of the EC2 image import task.",
            "type": "string",
            "returned": "success"
          },
          "usage_operation": {
            "description": "The usage operation value.",
            "type": "dictionary",
            "returned": "success"
          }
        }
      }
    }
  },
  "ec2_instance": {
    "description": "Create & manage EC2 instances",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_instance_module.html#ansible-collections-amazon-aws-ec2-instance-module",
    "return_values": {
      "changed_ids": {
        "description": "A list of the set of EC2 instance IDs changed by the module action.",
        "type": "list",
        "returned": "when instances that must be present are launched",
        "elements": "elements=string",
        "sample": "[\"i-0123456789abcdef0\"]"
      },
      "instance_ids": {
        "description": "A list of EC2 instance IDs matching the provided specification and filters.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "sample": "[\"i-0123456789abcdef0\", \"i-0123456789abcdef1\"]"
      },
      "instances": {
        "description": "A list of EC2 instances.",
        "type": "complex",
        "returned": "when wait=true or when matching instances already exist",
        "suboptions": {
          "additional_info": {
            "description": "Reserved for Amazon\u2019s internal use.",
            "type": "string",
            "returned": "always"
          },
          "ami_launch_index": {
            "description": "The AMI launch index, which can be used to find this instance in the launch group.",
            "type": "integer",
            "returned": "always",
            "sample": "0"
          },
          "architecture": {
            "description": "The architecture of the image.",
            "type": "string",
            "returned": "always",
            "sample": "\"x86_64\""
          },
          "block_device_mappings": {
            "description": "Any block device mapping entries for the instance.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "device_name": {
                "description": "The device name exposed to the instance (for example, /dev/sdh or xvdh).",
                "type": "string",
                "returned": "always",
                "sample": "\"/dev/sdh\""
              },
              "ebs": {
                "description": "Parameters used to automatically set up EBS volumes when the instance is launched.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "attach_time": {
                    "description": "The time stamp when the attachment initiated.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"2017-03-23T22:51:24+00:00\""
                  },
                  "delete_on_termination": {
                    "description": "Indicates whether the volume is deleted on instance termination.",
                    "type": "boolean",
                    "returned": "always",
                    "sample": "true"
                  },
                  "status": {
                    "description": "The attachment state.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"attached\""
                  },
                  "volume_id": {
                    "description": "The ID of the EBS volume.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"vol-12345678\""
                  }
                }
              }
            }
          },
          "capacity_reservation_specification": {
            "description": "Information about the Capacity Reservation targeting option.",
            "type": "complex",
            "returned": "success",
            "suboptions": {
              "capacity_reservation_preference": {
                "description": "Describes the Capacity Reservation preferences.",
                "type": "string",
                "returned": "success",
                "sample": "\"open\""
              }
            }
          },
          "client_token": {
            "description": "The idempotency token you provided when you launched the instance, if applicable.",
            "type": "string",
            "returned": "always",
            "sample": "\"mytoken\""
          },
          "cpu_options": {
            "description": "The CPU options for the instance.",
            "type": "complex",
            "returned": "success",
            "suboptions": {
              "amd_sev_snp": {
                "description": "Indicates whether the instance is enabled for AMD SEV-SNP.",
                "type": "string",
                "returned": "success",
                "sample": "\"enabled\""
              },
              "core_count": {
                "description": "The number of CPU cores for the instance.",
                "type": "integer",
                "returned": "success",
                "sample": "1"
              },
              "threads_per_core": {
                "description": "The number of threads per CPU core.",
                "type": "integer",
                "returned": "success",
                "sample": "2"
              }
            }
          },
          "current_instance_boot_mode": {
            "description": "The boot mode that is used to boot the instance at launch or start.",
            "type": "string",
            "returned": "success",
            "sample": "\"legacy-bios\""
          },
          "ebs_optimized": {
            "description": "Indicates whether the instance is optimized for EBS I/O.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "ena_support": {
            "description": "Specifies whether enhanced networking with ENA is enabled.",
            "type": "boolean",
            "returned": "always",
            "sample": "true"
          },
          "enclave_options": {
            "description": "Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "enabled": {
                "description": "If this parameter is set to true, the instance is enabled for Amazon Web Services Nitro Enclaves.",
                "type": "boolean",
                "returned": "always",
                "sample": "false"
              }
            }
          },
          "hibernation_options": {
            "description": "Indicates whether the instance is enabled for hibernation.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "configured": {
                "description": "If true, your instance is enabled for hibernation; otherwise, it is not enabled for hibernation.",
                "type": "boolean",
                "returned": "always",
                "sample": "false"
              }
            }
          },
          "hypervisor": {
            "description": "The hypervisor type of the instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"xen\""
          },
          "iam_instance_profile": {
            "description": "The IAM instance profile associated with the instance, if applicable.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "arn": {
                "description": "The Amazon Resource Name (ARN) of the instance profile.",
                "type": "string",
                "returned": "always",
                "sample": "\"arn:aws:iam::123456789012:instance-profile/myprofile\""
              },
              "id": {
                "description": "The ID of the instance profile.",
                "type": "string",
                "returned": "always",
                "sample": "\"JFJ397FDG400FG9FD1N\""
              }
            }
          },
          "image_id": {
            "description": "The ID of the AMI used to launch the instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"ami-0011223344\""
          },
          "instance_id": {
            "description": "The ID of the instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"i-012345678\""
          },
          "instance_type": {
            "description": "The instance type size of the running instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"t2.micro\""
          },
          "key_name": {
            "description": "The name of the key pair, if this instance was launched with an associated key pair.",
            "type": "string",
            "returned": "always",
            "sample": "\"my-key\""
          },
          "launch_time": {
            "description": "The time the instance was launched.",
            "type": "string",
            "returned": "always",
            "sample": "\"2017-03-23T22:51:24+00:00\""
          },
          "licenses": {
            "description": "The license configurations for the instance.",
            "type": "list",
            "returned": "When license specifications are provided.",
            "elements": "elements=dictionary",
            "suboptions": {
              "license_configuration_arn": {
                "description": "The Amazon Resource Name (ARN) of the license configuration.",
                "type": "string",
                "returned": "always",
                "sample": "\"arn:aws:license-manager:us-east-1:123456789012:license-configuration:lic-0123456789\""
              }
            }
          },
          "metadata_options": {
            "description": "The metadata options for the instance.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "http_endpoint": {
                "description": "Indicates whether the HTTP metadata endpoint on your instances is enabled or disabled.",
                "type": "string",
                "returned": "success",
                "sample": "\"enabled\""
              },
              "http_protocol_ipv6": {
                "description": "Indicates whether the IPv6 endpoint for the instance metadata service is enabled or disabled.",
                "type": "string",
                "returned": "success",
                "sample": "\"disabled\""
              },
              "http_put_response_hop_limit": {
                "description": "The maximum number of hops that the metadata token can travel.",
                "type": "integer",
                "returned": "success",
                "sample": "1"
              },
              "http_tokens": {
                "description": "Indicates whether IMDSv2 is required.",
                "type": "string",
                "returned": "success",
                "sample": "\"optional\""
              },
              "instance_metadata_tags": {
                "description": "Indicates whether access to instance tags from the instance metadata is enabled or disabled.",
                "type": "string",
                "returned": "success",
                "sample": "\"disabled\""
              },
              "state": {
                "description": "The state of the metadata option changes.",
                "type": "string",
                "returned": "success",
                "sample": "\"applied\""
              }
            }
          },
          "monitoring": {
            "description": "The monitoring for the instance.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "state": {
                "description": "Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.",
                "type": "string",
                "returned": "always",
                "sample": "\"disabled\""
              }
            }
          },
          "network_interfaces": {
            "description": "One or more network interfaces for the instance.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "association": {
                "description": "The association information for an Elastic IPv4 associated with the network interface.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "ip_owner_id": {
                    "description": "The ID of the owner of the Elastic IP address.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"amazon\""
                  },
                  "public_dns_name": {
                    "description": "The public DNS name.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"\""
                  },
                  "public_ip": {
                    "description": "The public IP address or Elastic IP address bound to the network interface.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"1.2.3.4\""
                  }
                }
              },
              "attachment": {
                "description": "The network interface attachment.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "attach_time": {
                    "description": "The time stamp when the attachment initiated.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"2017-03-23T22:51:24+00:00\""
                  },
                  "attachment_id": {
                    "description": "The ID of the network interface attachment.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"eni-attach-3aff3f\""
                  },
                  "delete_on_termination": {
                    "description": "Indicates whether the network interface is deleted when the instance is terminated.",
                    "type": "boolean",
                    "returned": "always",
                    "sample": "true"
                  },
                  "device_index": {
                    "description": "The index of the device on the instance for the network interface attachment.",
                    "type": "integer",
                    "returned": "always",
                    "sample": "0"
                  },
                  "network_card_index": {
                    "description": "The index of the network card.",
                    "type": "integer",
                    "returned": "always",
                    "sample": "0"
                  },
                  "status": {
                    "description": "The attachment state.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"attached\""
                  }
                }
              },
              "description": {
                "description": "The description.",
                "type": "string",
                "returned": "always",
                "sample": "\"My interface\""
              },
              "groups": {
                "description": "One or more security groups.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "group_id": {
                    "description": "The ID of the security group.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"sg-abcdef12\""
                  },
                  "group_name": {
                    "description": "The name of the security group.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"mygroup\""
                  }
                }
              },
              "interface_type": {
                "description": "The type of network interface.",
                "type": "string",
                "returned": "always",
                "sample": "\"interface\""
              },
              "ipv6_addresses": {
                "description": "One or more IPv6 addresses associated with the network interface.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "ipv6_address": {
                    "description": "The IPv6 address.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"2001:0db8:85a3:0000:0000:8a2e:0370:7334\""
                  }
                }
              },
              "mac_address": {
                "description": "The MAC address.",
                "type": "string",
                "returned": "always",
                "sample": "\"00:11:22:33:44:55\""
              },
              "network_interface_id": {
                "description": "The ID of the network interface.",
                "type": "string",
                "returned": "always",
                "sample": "\"eni-01234567\""
              },
              "owner_id": {
                "description": "The AWS account ID of the owner of the network interface.",
                "type": "string",
                "returned": "always",
                "sample": "\"01234567890\""
              },
              "private_dns_name": {
                "description": "The private DNS hostname name assigned to the instance.",
                "type": "string",
                "returned": "always",
                "sample": "\"ip-10-1-0-156.ec2.internal\""
              },
              "private_ip_address": {
                "description": "The IPv4 address of the network interface within the subnet.",
                "type": "string",
                "returned": "always",
                "sample": "\"10.0.0.1\""
              },
              "private_ip_addresses": {
                "description": "The private IPv4 addresses associated with the network interface.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "association": {
                    "description": "The association information for an Elastic IP address (IPv4) associated with the network interface.",
                    "type": "complex",
                    "returned": "success",
                    "suboptions": {
                      "ip_owner_id": {
                        "description": "The ID of the owner of the Elastic IP address.",
                        "type": "string",
                        "returned": "always",
                        "sample": "\"amazon\""
                      },
                      "public_dns_name": {
                        "description": "The public DNS name.",
                        "type": "string",
                        "returned": "always",
                        "sample": "\"\""
                      },
                      "public_ip": {
                        "description": "The public IP address or Elastic IP address bound to the network interface.",
                        "type": "string",
                        "returned": "always",
                        "sample": "\"1.2.3.4\""
                      }
                    }
                  },
                  "primary": {
                    "description": "Indicates whether this IPv4 address is the primary private IP address of the network interface.",
                    "type": "boolean",
                    "returned": "always",
                    "sample": "true"
                  },
                  "private_dns_name": {
                    "description": "The private DNS hostname name assigned to the instance.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"ip-10-1-0-156.ec2.internal\""
                  },
                  "private_ip_address": {
                    "description": "The private IPv4 address of the network interface.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"10.0.0.1\""
                  }
                }
              },
              "source_dest_check": {
                "description": "Indicates whether source/destination checking is enabled.",
                "type": "boolean",
                "returned": "always",
                "sample": "true"
              },
              "status": {
                "description": "The status of the network interface.",
                "type": "string",
                "returned": "always",
                "sample": "\"in-use\""
              },
              "subnet_id": {
                "description": "The ID of the subnet for the network interface.",
                "type": "string",
                "returned": "always",
                "sample": "\"subnet-0123456\""
              },
              "vpc_id": {
                "description": "The ID of the VPC for the network interface.",
                "type": "string",
                "returned": "always",
                "sample": "\"vpc-0123456\""
              }
            }
          },
          "placement": {
            "description": "The location where the instance launched, if applicable.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "affinity": {
                "description": "The affinity setting for the instance on the Dedicated Host.",
                "type": "string",
                "returned": "When a placement group is specified."
              },
              "availability_zone": {
                "description": "The Availability Zone of the instance.",
                "type": "string",
                "returned": "always",
                "sample": "\"ap-southeast-2a\""
              },
              "group_id": {
                "description": "The ID of the placement group the instance is in (for cluster compute instances).",
                "type": "string",
                "returned": "success",
                "sample": "\"pg-01234566\""
              },
              "group_name": {
                "description": "The name of the placement group the instance is in (for cluster compute instances).",
                "type": "string",
                "returned": "always",
                "sample": "\"my-placement-group\""
              },
              "host_id": {
                "description": "The ID of the Dedicated Host on which the instance resides.",
                "type": "string",
                "returned": "success"
              },
              "host_resource_group_arn": {
                "description": "The ARN of the host resource group in which the instance is in.",
                "type": "string",
                "returned": "success",
                "sample": "\"arn:aws:resource-groups:us-east-1:123456789012:group/MyResourceGroup\""
              },
              "partition_number": {
                "description": "The number of the partition the instance is in.",
                "type": "integer",
                "returned": "success",
                "sample": "1"
              },
              "tenancy": {
                "description": "Type of tenancy to allow an instance to use. Default is shared tenancy. Dedicated tenancy will incur additional charges.",
                "type": "string",
                "returned": "always",
                "sample": "\"default\""
              }
            }
          },
          "platform_details": {
            "description": "The platform details value for the instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"Linux/UNIX\""
          },
          "private_dns_name": {
            "description": "The private DNS name.",
            "type": "string",
            "returned": "always",
            "sample": "\"ip-10-0-0-1.ap-southeast-2.compute.internal\""
          },
          "private_dns_name_options": {
            "description": "The options for the instance hostname.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "enable_resource_name_dns_a_record": {
                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records.",
                "type": "boolean",
                "returned": "success",
                "sample": "false"
              },
              "enable_resource_name_dns_aaaa_record": {
                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.",
                "type": "boolean",
                "returned": "success",
                "sample": "false"
              },
              "hostname_type": {
                "description": "The type of hostname to assign to an instance.",
                "type": "string",
                "returned": "success",
                "sample": "\"ip-name\""
              }
            }
          },
          "private_ip_address": {
            "description": "The IPv4 address of the network interface within the subnet.",
            "type": "string",
            "returned": "always",
            "sample": "\"10.0.0.1\""
          },
          "product_codes": {
            "description": "One or more product codes.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "product_code_id": {
                "description": "The product code.",
                "type": "string",
                "returned": "always",
                "sample": "\"aw0evgkw8ef3n2498gndfgasdfsd5cce\""
              },
              "product_code_type": {
                "description": "The type of product code.",
                "type": "string",
                "returned": "always",
                "sample": "\"marketplace\""
              }
            }
          },
          "public_dns_name": {
            "description": "The public DNS name assigned to the instance.",
            "type": "string",
            "returned": "always"
          },
          "public_ip_address": {
            "description": "The public IPv4 address assigned to the instance",
            "type": "string",
            "returned": "always",
            "sample": "\"52.0.0.1\""
          },
          "root_device_name": {
            "description": "The device name of the root device",
            "type": "string",
            "returned": "always",
            "sample": "\"/dev/sda1\""
          },
          "root_device_type": {
            "description": "The type of root device used by the AMI.",
            "type": "string",
            "returned": "always",
            "sample": "\"ebs\""
          },
          "security_groups": {
            "description": "One or more security groups for the instance.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "group_id": {
                "description": "The ID of the security group.",
                "type": "string",
                "returned": "always",
                "sample": "\"sg-0123456\""
              },
              "group_name": {
                "description": "The name of the security group.",
                "type": "string",
                "returned": "always",
                "sample": "\"my-security-group\""
              }
            }
          },
          "source_dest_check": {
            "description": "Indicates whether source/destination checking is enabled.",
            "type": "boolean",
            "returned": "always",
            "sample": "true"
          },
          "state": {
            "description": "The current state of the instance.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "code": {
                "description": "The low byte represents the state.",
                "type": "integer",
                "returned": "always",
                "sample": "16"
              },
              "name": {
                "description": "The name of the state.",
                "type": "string",
                "returned": "always",
                "sample": "\"running\""
              }
            }
          },
          "state_transition_reason": {
            "description": "The reason for the most recent state transition.",
            "type": "string",
            "returned": "always"
          },
          "subnet_id": {
            "description": "The ID of the subnet in which the instance is running.",
            "type": "string",
            "returned": "always",
            "sample": "\"subnet-00abcdef\""
          },
          "tags": {
            "description": "Any tags assigned to the instance.",
            "type": "dictionary",
            "returned": "always"
          },
          "virtualization_type": {
            "description": "The type of virtualization of the AMI.",
            "type": "string",
            "returned": "always",
            "sample": "\"hvm\""
          },
          "vpc_id": {
            "description": "The ID of the VPC the instance is in.",
            "type": "dictionary",
            "returned": "always",
            "sample": "\"vpc-0011223344\""
          }
        }
      },
      "terminated_ids": {
        "description": "A list of the set of EC2 instance IDs terminated by the module action.",
        "type": "list",
        "returned": "when instances that must be absent are terminated",
        "elements": "elements=string",
        "sample": "[\"i-0123456789abcdef1\"]"
      }
    }
  },
  "ec2_instance_info": {
    "description": "Gather information about ec2 instances in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_instance_info_module.html#ansible-collections-amazon-aws-ec2-instance-info-module",
    "return_values": {
      "instances": {
        "description": "A list of ec2 instances.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "ami_launch_index": {
            "description": "The AMI launch index, which can be used to find this instance in the launch group.",
            "type": "integer",
            "returned": "always",
            "sample": "0"
          },
          "architecture": {
            "description": "The architecture of the image.",
            "type": "string",
            "returned": "always",
            "sample": "\"x86_64\""
          },
          "attributes": {
            "description": "The details of the instance attribute specified on input.",
            "type": "dictionary",
            "returned": "when include_attributes is specified",
            "sample": "{\"disable_api_termination\": {\"value\": true}, \"ebs_optimized\": {\"value\": true}}"
          },
          "block_device_mappings": {
            "description": "Any block device mapping entries for the instance.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "device_name": {
                "description": "The device name exposed to the instance (for example, /dev/sdh or xvdh).",
                "type": "string",
                "returned": "always",
                "sample": "\"/dev/sdh\""
              },
              "ebs": {
                "description": "Parameters used to automatically set up EBS volumes when the instance is launched.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "attach_time": {
                    "description": "The time stamp when the attachment initiated.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"2017-03-23T22:51:24+00:00\""
                  },
                  "delete_on_termination": {
                    "description": "Indicates whether the volume is deleted on instance termination.",
                    "type": "boolean",
                    "returned": "always",
                    "sample": "true"
                  },
                  "status": {
                    "description": "The attachment state.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"attached\""
                  },
                  "volume_id": {
                    "description": "The ID of the EBS volume.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"vol-12345678\""
                  }
                }
              }
            }
          },
          "capacity_reservation_specification": {
            "description": "Information about the Capacity Reservation targeting option.",
            "type": "complex",
            "returned": "success",
            "suboptions": {
              "capacity_reservation_preference": {
                "description": "Describes the Capacity Reservation preferences.",
                "type": "string",
                "returned": "success",
                "sample": "\"open\""
              }
            }
          },
          "client_token": {
            "description": "The idempotency token you provided when you launched the instance, if applicable.",
            "type": "string",
            "returned": "always",
            "sample": "\"mytoken\""
          },
          "cpu_options": {
            "description": "The CPU options set for the instance.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "core_count": {
                "description": "The number of CPU cores for the instance.",
                "type": "integer",
                "returned": "always",
                "sample": "1"
              },
              "threads_per_core": {
                "description": "The number of threads per CPU core. On supported instance, a value of 1 means Intel Hyper-Threading Technology is disabled.",
                "type": "integer",
                "returned": "always",
                "sample": "1"
              }
            }
          },
          "current_instance_boot_mode": {
            "description": "The boot mode that is used to boot the instance at launch or start.",
            "type": "string",
            "returned": "success",
            "sample": "\"legacy-bios\""
          },
          "ebs_optimized": {
            "description": "Indicates whether the instance is optimized for EBS I/O.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "ena_support": {
            "description": "Specifies whether enhanced networking with ENA is enabled.",
            "type": "boolean",
            "returned": "always",
            "sample": "true"
          },
          "enclave_options": {
            "description": "Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "enabled": {
                "description": "If this parameter is set to true, the instance is enabled for Amazon Web Services Nitro Enclaves.",
                "type": "boolean",
                "returned": "always",
                "sample": "false"
              }
            }
          },
          "hibernation_options": {
            "description": "Indicates whether the instance is enabled for hibernation.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "configured": {
                "description": "If true, your instance is enabled for hibernation; otherwise, it is not enabled for hibernation.",
                "type": "boolean",
                "returned": "always",
                "sample": "false"
              }
            }
          },
          "hypervisor": {
            "description": "The hypervisor type of the instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"xen\""
          },
          "iam_instance_profile": {
            "description": "The IAM instance profile associated with the instance, if applicable.",
            "type": "complex",
            "returned": "success",
            "suboptions": {
              "arn": {
                "description": "The Amazon Resource Name (ARN) of the instance profile.",
                "type": "string",
                "returned": "always",
                "sample": "\"arn:aws:iam::123456789012:instance-profile/myprofile\""
              },
              "id": {
                "description": "The ID of the instance profile.",
                "type": "string",
                "returned": "always",
                "sample": "\"JFJ397FDG400FG9FD1N\""
              }
            }
          },
          "image_id": {
            "description": "The ID of the AMI used to launch the instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"ami-0011223344\""
          },
          "instance_id": {
            "description": "The ID of the instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"i-012345678\""
          },
          "instance_type": {
            "description": "The instance type size of the running instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"t2.micro\""
          },
          "key_name": {
            "description": "The name of the key pair, if this instance was launched with an associated key pair.",
            "type": "string",
            "returned": "always",
            "sample": "\"my-key\""
          },
          "launch_time": {
            "description": "The time the instance was launched.",
            "type": "string",
            "returned": "always",
            "sample": "\"2017-03-23T22:51:24+00:00\""
          },
          "maintenance_options": {
            "description": "Provides information on the recovery and maintenance options of your instance.",
            "type": "dictionary",
            "returned": "always",
            "suboptions": {
              "auto_recovery": {
                "description": "Provides information on the current automatic recovery behavior of your instance.",
                "type": "string",
                "returned": "success",
                "sample": "\"default\""
              }
            }
          },
          "metadata_options": {
            "description": "The metadata options for the instance.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "http_endpoint": {
                "description": "Indicates whether the HTTP metadata endpoint on your instances is enabled or disabled.",
                "type": "string",
                "returned": "success",
                "sample": "\"enabled\""
              },
              "http_protocol_ipv6": {
                "description": "Indicates whether the IPv6 endpoint for the instance metadata service is enabled or disabled.",
                "type": "string",
                "returned": "success",
                "sample": "\"disabled\""
              },
              "http_put_response_hop_limit": {
                "description": "The maximum number of hops that the metadata token can travel.",
                "type": "integer",
                "returned": "success",
                "sample": "1"
              },
              "http_tokens": {
                "description": "Indicates whether IMDSv2 is required.",
                "type": "string",
                "returned": "success",
                "sample": "\"optional\""
              },
              "instance_metadata_tags": {
                "description": "Indicates whether access to instance tags from the instance metadata is enabled or disabled.",
                "type": "string",
                "returned": "success",
                "sample": "\"disabled\""
              },
              "state": {
                "description": "The state of the metadata option changes.",
                "type": "string",
                "returned": "success",
                "sample": "\"applied\""
              }
            }
          },
          "monitoring": {
            "description": "The monitoring for the instance.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "state": {
                "description": "Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.",
                "type": "string",
                "returned": "always",
                "sample": "\"disabled\""
              }
            }
          },
          "network_interfaces": {
            "description": "One or more network interfaces for the instance.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "association": {
                "description": "The association information for an Elastic IPv4 associated with the network interface.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "ip_owner_id": {
                    "description": "The ID of the owner of the Elastic IP address.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"amazon\""
                  },
                  "public_dns_name": {
                    "description": "The public DNS name.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"\""
                  },
                  "public_ip": {
                    "description": "The public IP address or Elastic IP address bound to the network interface.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"1.2.3.4\""
                  }
                }
              },
              "attachment": {
                "description": "The network interface attachment.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "attach_time": {
                    "description": "The time stamp when the attachment initiated.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"2017-03-23T22:51:24+00:00\""
                  },
                  "attachment_id": {
                    "description": "The ID of the network interface attachment.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"eni-attach-3aff3f\""
                  },
                  "delete_on_termination": {
                    "description": "Indicates whether the network interface is deleted when the instance is terminated.",
                    "type": "boolean",
                    "returned": "always",
                    "sample": "true"
                  },
                  "device_index": {
                    "description": "The index of the device on the instance for the network interface attachment.",
                    "type": "integer",
                    "returned": "always",
                    "sample": "0"
                  },
                  "network_card_index": {
                    "description": "The index of the network card.",
                    "type": "integer",
                    "returned": "always",
                    "sample": "0"
                  },
                  "status": {
                    "description": "The attachment state.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"attached\""
                  }
                }
              },
              "description": {
                "description": "The description.",
                "type": "string",
                "returned": "always",
                "sample": "\"My interface\""
              },
              "groups": {
                "description": "One or more security groups.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "group_id": {
                    "description": "The ID of the security group.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"sg-abcdef12\""
                  },
                  "group_name": {
                    "description": "The name of the security group.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"mygroup\""
                  }
                }
              },
              "interface_type": {
                "description": "The type of network interface.",
                "type": "string",
                "returned": "always",
                "sample": "\"interface\""
              },
              "ipv6_addresses": {
                "description": "One or more IPv6 addresses associated with the network interface.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "ipv6_address": {
                    "description": "The IPv6 address.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"2001:0db8:85a3:0000:0000:8a2e:0370:7334\""
                  }
                }
              },
              "mac_address": {
                "description": "The MAC address.",
                "type": "string",
                "returned": "always",
                "sample": "\"00:11:22:33:44:55\""
              },
              "network_interface_id": {
                "description": "The ID of the network interface.",
                "type": "string",
                "returned": "always",
                "sample": "\"eni-01234567\""
              },
              "owner_id": {
                "description": "The AWS account ID of the owner of the network interface.",
                "type": "string",
                "returned": "always",
                "sample": "\"01234567890\""
              },
              "private_dns_name": {
                "description": "The private DNS hostname name assigned to the instance.",
                "type": "string",
                "returned": "always",
                "sample": "\"ip-10-1-0-156.ec2.internal\""
              },
              "private_ip_address": {
                "description": "The IPv4 address of the network interface within the subnet.",
                "type": "string",
                "returned": "always",
                "sample": "\"10.0.0.1\""
              },
              "private_ip_addresses": {
                "description": "The private IPv4 addresses associated with the network interface.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "association": {
                    "description": "The association information for an Elastic IP address (IPv4) associated with the network interface.",
                    "type": "complex",
                    "returned": "success",
                    "suboptions": {
                      "ip_owner_id": {
                        "description": "The ID of the owner of the Elastic IP address.",
                        "type": "string",
                        "returned": "always",
                        "sample": "\"amazon\""
                      },
                      "public_dns_name": {
                        "description": "The public DNS name.",
                        "type": "string",
                        "returned": "always",
                        "sample": "\"\""
                      },
                      "public_ip": {
                        "description": "The public IP address or Elastic IP address bound to the network interface.",
                        "type": "string",
                        "returned": "always",
                        "sample": "\"1.2.3.4\""
                      }
                    }
                  },
                  "primary": {
                    "description": "Indicates whether this IPv4 address is the primary private IP address of the network interface.",
                    "type": "boolean",
                    "returned": "always",
                    "sample": "true"
                  },
                  "private_dns_name": {
                    "description": "The private DNS hostname name assigned to the instance.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"ip-10-1-0-156.ec2.internal\""
                  },
                  "private_ip_address": {
                    "description": "The private IPv4 address of the network interface.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"10.0.0.1\""
                  }
                }
              },
              "source_dest_check": {
                "description": "Indicates whether source/destination checking is enabled.",
                "type": "boolean",
                "returned": "always",
                "sample": "true"
              },
              "status": {
                "description": "The status of the network interface.",
                "type": "string",
                "returned": "always",
                "sample": "\"in-use\""
              },
              "subnet_id": {
                "description": "The ID of the subnet for the network interface.",
                "type": "string",
                "returned": "always",
                "sample": "\"subnet-0123456\""
              },
              "vpc_id": {
                "description": "The ID of the VPC for the network interface.",
                "type": "string",
                "returned": "always",
                "sample": "\"vpc-0123456\""
              }
            }
          },
          "placement": {
            "description": "The location where the instance launched, if applicable.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "availability_zone": {
                "description": "The Availability Zone of the instance.",
                "type": "string",
                "returned": "always",
                "sample": "\"ap-southeast-2a\""
              },
              "group_name": {
                "description": "The name of the placement group the instance is in (for cluster compute instances).",
                "type": "string",
                "returned": "always",
                "sample": "\"\""
              },
              "tenancy": {
                "description": "The tenancy of the instance (if the instance is running in a VPC).",
                "type": "string",
                "returned": "always",
                "sample": "\"default\""
              }
            }
          },
          "platform_details": {
            "description": "The platform details value for the instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"Linux/UNIX\""
          },
          "private_dns_name": {
            "description": "The private DNS name.",
            "type": "string",
            "returned": "always",
            "sample": "\"ip-10-0-0-1.ap-southeast-2.compute.internal\""
          },
          "private_dns_name_options": {
            "description": "The options for the instance hostname.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "enable_resource_name_dns_a_record": {
                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records.",
                "type": "boolean",
                "returned": "success",
                "sample": "false"
              },
              "enable_resource_name_dns_aaaa_record": {
                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.",
                "type": "boolean",
                "returned": "success",
                "sample": "false"
              },
              "hostname_type": {
                "description": "The type of hostname to assign to an instance.",
                "type": "string",
                "returned": "success",
                "sample": "\"ip-name\""
              }
            }
          },
          "private_ip_address": {
            "description": "The IPv4 address of the network interface within the subnet.",
            "type": "string",
            "returned": "always",
            "sample": "\"10.0.0.1\""
          },
          "product_codes": {
            "description": "One or more product codes.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "product_code_id": {
                "description": "The product code.",
                "type": "string",
                "returned": "always",
                "sample": "\"aw0evgkw8ef3n2498gndfgasdfsd5cce\""
              },
              "product_code_type": {
                "description": "The type of product code.",
                "type": "string",
                "returned": "always",
                "sample": "\"marketplace\""
              }
            }
          },
          "public_dns_name": {
            "description": "The public DNS name assigned to the instance.",
            "type": "string",
            "returned": "always"
          },
          "public_ip_address": {
            "description": "The public IPv4 address assigned to the instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"52.0.0.1\""
          },
          "root_device_name": {
            "description": "The device name of the root device.",
            "type": "string",
            "returned": "always",
            "sample": "\"/dev/sda1\""
          },
          "root_device_type": {
            "description": "The type of root device used by the AMI.",
            "type": "string",
            "returned": "always",
            "sample": "\"ebs\""
          },
          "security_groups": {
            "description": "One or more security groups for the instance.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "group_id": {
                "description": "The ID of the security group.",
                "type": "string",
                "returned": "always",
                "sample": "\"sg-0123456\""
              },
              "group_name": {
                "description": "The name of the security group.",
                "type": "string",
                "returned": "always",
                "sample": "\"my-security-group\""
              }
            }
          },
          "source_dest_check": {
            "description": "Indicates whether source/destination checking is enabled.",
            "type": "boolean",
            "returned": "always",
            "sample": "true"
          },
          "state": {
            "description": "The current state of the instance.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "code": {
                "description": "The low byte represents the state.",
                "type": "integer",
                "returned": "always",
                "sample": "16"
              },
              "name": {
                "description": "The name of the state.",
                "type": "string",
                "returned": "always",
                "sample": "\"running\""
              }
            }
          },
          "state_transition_reason": {
            "description": "The reason for the most recent state transition.",
            "type": "string",
            "returned": "always"
          },
          "subnet_id": {
            "description": "The ID of the subnet in which the instance is running.",
            "type": "string",
            "returned": "always",
            "sample": "\"subnet-00abcdef\""
          },
          "tags": {
            "description": "Any tags assigned to the instance.",
            "type": "dictionary",
            "returned": "always"
          },
          "virtualization_type": {
            "description": "The type of virtualization of the AMI.",
            "type": "string",
            "returned": "always",
            "sample": "\"hvm\""
          },
          "vpc_id": {
            "description": "The ID of the VPC the instance is in.",
            "type": "dictionary",
            "returned": "always",
            "sample": "\"vpc-0011223344\""
          }
        }
      }
    }
  },
  "ec2_key": {
    "description": "Create or delete an EC2 key pair",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_key_module.html#ansible-collections-amazon-aws-ec2-key-module",
    "return_values": {
      "changed": {
        "description": "Whether a keypair was created/deleted.",
        "type": "boolean",
        "returned": "always",
        "sample": "true"
      },
      "key": {
        "description": "Details of the keypair (this is set to null when state is absent).",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "fingerprint": {
            "description": "Fingerprint of the key.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"b0:22:49:61:d9:44:9d:0c:7e:ac:8a:32:93:21:6c:e8:fb:59:62:43\""
          },
          "id": {
            "description": "Id of the keypair.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"key-123456789abc\""
          },
          "name": {
            "description": "Name of the keypair.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"my_keypair\""
          },
          "private_key": {
            "description": "Private key of a newly created keypair.",
            "type": "string",
            "returned": "when a new keypair is created by AWS (key_material is not provided) and file_name is not provided.",
            "sample": "\"-----BEGIN RSA PRIVATE KEY----- MIIEowIBAAKC... -----END RSA PRIVATE KEY-----\""
          },
          "tags": {
            "description": "A dictionary representing the tags attached to the key pair.",
            "type": "dictionary",
            "returned": "when state=present",
            "sample": "{\"my_key\": \"my value\"}"
          },
          "type": {
            "description": "Type of a newly created keypair.",
            "type": "string",
            "returned": "when a new keypair is created by AWS",
            "sample": "\"rsa\""
          }
        }
      },
      "msg": {
        "description": "Short message describing the action taken.",
        "type": "string",
        "returned": "always",
        "sample": "\"key pair created\""
      }
    }
  },
  "ec2_key_info": {
    "description": "Gather information about EC2 key pairs in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_key_info_module.html#ansible-collections-amazon-aws-ec2-key-info-module",
    "return_values": {
      "keypairs": {
        "description": "A list of ec2 key pairs.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "create_time": {
            "description": "The time the key pair was created.",
            "type": "string",
            "returned": "always",
            "sample": "\"2023-08-16T10:13:33.025000+00:00\""
          },
          "key_fingerprint": {
            "description": "Fingerprint of the key.",
            "type": "string",
            "returned": "always",
            "sample": "\"05:97:1a:2a:df:f6:06:a9:98:4b:ca:05:71:a1:81:e8:ff:6d:d2:a3\""
          },
          "key_name": {
            "description": "The name of the key pair.",
            "type": "string",
            "returned": "always",
            "sample": "\"my-sample-keypair\""
          },
          "key_pair_id": {
            "description": "The ID of the key pair.",
            "type": "string",
            "returned": "always",
            "sample": "\"key-01238eb03f07d7268\""
          },
          "key_type": {
            "description": "The type of key pair.",
            "type": "string",
            "returned": "always",
            "sample": "\"rsa\""
          },
          "public_key": {
            "description": "The public key material.",
            "type": "string",
            "returned": "always"
          },
          "tags": {
            "description": "A dictionary representing the tags attached to the key pair.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"my_key\": \"my value\"}"
          }
        }
      }
    }
  },
  "ec2_launch_template": {
    "description": "Manage EC2 launch templates",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_launch_template_module.html#ansible-collections-amazon-aws-ec2-launch-template-module",
    "return_values": {
      "default_template": {
        "description": "The launch template version that will be used if only the template name is specified. Often this is the same as the latest version, but not always.",
        "type": "complex",
        "returned": "when state=present",
        "suboptions": {
          "create_time": {
            "description": "The time launch template was created.",
            "type": "string",
            "returned": "always"
          },
          "created_by": {
            "description": "The principal that created the launch template.",
            "type": "string",
            "returned": "always"
          },
          "default_version_number": {
            "description": "The version number of the default version of the launch template.",
            "type": "integer",
            "returned": "always"
          },
          "latest_version_number": {
            "description": "The version number of the latest version of the launch template.",
            "type": "integer",
            "returned": "always"
          },
          "launch_template_id": {
            "description": "The ID of the launch template.",
            "type": "string",
            "returned": "always"
          },
          "launch_template_name": {
            "description": "The name of the launch template.",
            "type": "string",
            "returned": "always"
          },
          "tags": {
            "description": "A dictionary of tags assigned to image.",
            "type": "dictionary",
            "returned": "when AMI is created or already exists",
            "sample": "{\"Env\": \"devel\", \"Name\": \"nat-server\"}"
          }
        }
      },
      "default_version": {
        "description": "The version that will be used if only the template name is specified. Often this is the same as the latest version, but not always.",
        "type": "integer",
        "returned": "when default_template has a version number."
      },
      "deleted_template": {
        "description": "information about a launch template deleted.",
        "type": "complex",
        "returned": "when state=absent",
        "suboptions": {
          "create_time": {
            "description": "The time launch template was created.",
            "type": "string",
            "returned": "always"
          },
          "created_by": {
            "description": "The principal that created the launch template.",
            "type": "string",
            "returned": "always"
          },
          "default_version_number": {
            "description": "The version number of the default version of the launch template.",
            "type": "integer",
            "returned": "always"
          },
          "latest_version_number": {
            "description": "The version number of the latest version of the launch template.",
            "type": "integer",
            "returned": "always"
          },
          "launch_template_id": {
            "description": "The ID of the launch template.",
            "type": "string",
            "returned": "always"
          },
          "launch_template_name": {
            "description": "The name of the launch template.",
            "type": "string",
            "returned": "always"
          },
          "tags": {
            "description": "A dictionary of tags assigned to image.",
            "type": "dictionary",
            "returned": "when AMI is created or already exists",
            "sample": "{\"Env\": \"devel\", \"Name\": \"nat-server\"}"
          }
        }
      },
      "deleted_versions": {
        "description": "Information about deleted launch template versions.",
        "type": "list",
        "returned": "when state=absent",
        "elements": "elements=dictionary",
        "suboptions": {
          "launch_template_id": {
            "description": "The ID of the launch template.",
            "type": "string",
            "returned": "always"
          },
          "launch_template_name": {
            "description": "The name of the launch template.",
            "type": "string",
            "returned": "always"
          },
          "version_number": {
            "description": "The version number of the launch template.",
            "type": "integer",
            "returned": "always"
          }
        }
      },
      "latest_template": {
        "description": "The latest available version of the launch template.",
        "type": "complex",
        "returned": "when state=present",
        "suboptions": {
          "create_time": {
            "description": "The time launch template was created.",
            "type": "string",
            "returned": "always"
          },
          "created_by": {
            "description": "The principal that created the launch template.",
            "type": "string",
            "returned": "always"
          },
          "default_version_number": {
            "description": "The version number of the default version of the launch template.",
            "type": "integer",
            "returned": "always"
          },
          "latest_version_number": {
            "description": "The version number of the latest version of the launch template.",
            "type": "integer",
            "returned": "always"
          },
          "launch_template_id": {
            "description": "The ID of the launch template.",
            "type": "string",
            "returned": "always"
          },
          "launch_template_name": {
            "description": "The name of the launch template.",
            "type": "string",
            "returned": "always"
          },
          "tags": {
            "description": "A dictionary of tags assigned to image.",
            "type": "dictionary",
            "returned": "when AMI is created or already exists",
            "sample": "{\"Env\": \"devel\", \"Name\": \"nat-server\"}"
          }
        }
      },
      "latest_version": {
        "description": "The latest available version number of the launch template.",
        "type": "integer",
        "returned": "when latest_template has a version number."
      },
      "template": {
        "description": "Latest available version of the launch template.",
        "type": "complex",
        "returned": "when state=present",
        "suboptions": {
          "create_time": {
            "description": "The time launch template was created.",
            "type": "string",
            "returned": "always"
          },
          "created_by": {
            "description": "The principal that created the launch template.",
            "type": "string",
            "returned": "always"
          },
          "default_version_number": {
            "description": "The version number of the default version of the launch template.",
            "type": "integer",
            "returned": "always"
          },
          "latest_version_number": {
            "description": "The version number of the latest version of the launch template.",
            "type": "integer",
            "returned": "always"
          },
          "launch_template_id": {
            "description": "The ID of the launch template.",
            "type": "string",
            "returned": "always"
          },
          "launch_template_name": {
            "description": "The name of the launch template.",
            "type": "string",
            "returned": "always"
          },
          "tags": {
            "description": "A dictionary of tags assigned to image.",
            "type": "dictionary",
            "returned": "when AMI is created or already exists",
            "sample": "{\"Env\": \"devel\", \"Name\": \"nat-server\"}"
          }
        }
      },
      "versions": {
        "description": "All available versions of the launch template.",
        "type": "list",
        "returned": "when state=present",
        "elements": "elements=dictionary",
        "suboptions": {
          "create_time": {
            "description": "The time the version was created.",
            "type": "string",
            "returned": "always"
          },
          "created_by": {
            "description": "The principal that created the version.",
            "type": "string",
            "returned": "always"
          },
          "default_version": {
            "description": "Indicates whether the version is the default version.",
            "type": "boolean",
            "returned": "always"
          },
          "launch_template_data": {
            "description": "Information about the launch template.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"block_device_mappings\": [{\"device_name\": \"/dev/sdb\", \"ebs\": {\"delete_on_termination\": true, \"encrypted\": true, \"volumeSize\": 5}}], \"ebs_optimized\": false, \"image_id\": \"ami-0231217be14a6f3ba\", \"instance_type\": \"t2.micro\", \"network_interfaces\": [{\"associate_public_ip_address\": false, \"device_index\": 0, \"ipv6_addresses\": [{\"ipv6_address\": \"2001:0:130F:0:0:9C0:876A:130B\"}]}]}",
            "suboptions": {
              "block_device_mappings": {
                "description": "The block device mappings.",
                "type": "list",
                "returned": "if applicable",
                "elements": "elements=dictionary",
                "suboptions": {
                  "device_name": {
                    "description": "The device name.",
                    "type": "string",
                    "returned": "always"
                  },
                  "ebs": {
                    "description": "Information about the block device for an EBS volume.",
                    "type": "string",
                    "returned": "if applicable",
                    "suboptions": {
                      "delete_on_termination": {
                        "description": "Indicates whether the EBS volume is deleted on instance termination.",
                        "type": "boolean",
                        "returned": "always"
                      },
                      "encrypted": {
                        "description": "Indicates whether the EBS volume is encrypted.",
                        "type": "boolean",
                        "returned": "always"
                      },
                      "iops": {
                        "description": "The number of I/O operations per second (IOPS) that the volume supports.",
                        "type": "integer",
                        "returned": "always"
                      },
                      "kms_key_id": {
                        "description": "The ARN of the Key Management Service (KMS) CMK used for encryption.",
                        "type": "integer",
                        "returned": "always"
                      },
                      "snapshot_id": {
                        "description": "The ID of the snapshot.",
                        "type": "string",
                        "returned": "always"
                      },
                      "throughput": {
                        "description": "The throughput that the volume supports, in MiB/s.",
                        "type": "integer",
                        "returned": "always"
                      },
                      "volume_size": {
                        "description": "The size of the volume, in GiB.",
                        "type": "integer",
                        "returned": "always"
                      },
                      "volume_type": {
                        "description": "The volume type.",
                        "type": "string",
                        "returned": "always"
                      }
                    }
                  },
                  "no_device": {
                    "description": "To omit the device from the block device mapping, specify an empty string.",
                    "type": "string",
                    "returned": "success"
                  },
                  "virtual_name": {
                    "description": "The virtual device name.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              },
              "cpu_options": {
                "description": "The CPU options for the instance.",
                "type": "dictionary",
                "returned": "if applicable",
                "suboptions": {
                  "amd_sev_snp": {
                    "description": "Indicates whether the instance is enabled for AMD SEV-SNP.",
                    "type": "integer",
                    "returned": "if applicable"
                  },
                  "core_count": {
                    "description": "The number of CPU cores for the instance.",
                    "type": "integer",
                    "returned": "if applicable"
                  },
                  "threads_per_core": {
                    "description": "The number of threads per CPU core.",
                    "type": "integer",
                    "returned": "if applicable"
                  }
                }
              },
              "disable_api_termination": {
                "description": "If set to true, indicates that the instance cannot be terminated using the Amazon EC2 console, command line tool, or API.",
                "type": "boolean",
                "returned": "if applicable"
              },
              "ebs_optimized": {
                "description": "Indicates whether the instance is optimized for Amazon EBS I/O.",
                "type": "boolean",
                "returned": "always"
              },
              "enclave_options": {
                "description": "Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.",
                "type": "dictionary",
                "returned": "if applicable",
                "suboptions": {
                  "enabled": {
                    "description": "If this parameter is set to true, the instance is enabled for Amazon Web Services Nitro Enclaves.",
                    "type": "boolean",
                    "returned": "always"
                  }
                }
              },
              "iam_instance_profile": {
                "description": "The IAM instance profile.",
                "type": "dictionary",
                "returned": "if application",
                "suboptions": {
                  "arn": {
                    "description": "The Amazon Resource Name (ARN) of the instance profile.",
                    "type": "string",
                    "returned": "always"
                  },
                  "name": {
                    "description": "The name of the instance profile.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              },
              "image_id": {
                "description": "The ID of the AMI or a Systems Manager parameter.",
                "type": "string",
                "returned": "if applicable"
              },
              "instance_initiated_shutdown_behavior": {
                "description": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance.",
                "type": "string",
                "returned": "if applicable"
              },
              "instance_type": {
                "description": "The instance type.",
                "type": "string",
                "returned": "if applicable"
              },
              "kernel_id": {
                "description": "The ID of the kernel.",
                "type": "string",
                "returned": "if applicable"
              },
              "key_name": {
                "description": "The name of the key pair.",
                "type": "string",
                "returned": "if applicable"
              },
              "metadata_options": {
                "description": "The metadata options for the instance.",
                "type": "dictionary",
                "returned": "if applicable",
                "suboptions": {
                  "http_endpoint": {
                    "description": "Enables or disables the HTTP metadata endpoint on your instances.",
                    "type": "string",
                    "returned": "if applicable"
                  },
                  "http_protocol_ipv6": {
                    "description": "Enables or disables the IPv6 endpoint for the instance metadata service.",
                    "type": "string",
                    "returned": "if applicable"
                  },
                  "http_put_response_hop_limit": {
                    "description": "The desired HTTP PUT response hop limit for instance metadata requests.",
                    "type": "integer",
                    "returned": "if applicable"
                  },
                  "http_tokens": {
                    "description": "Indicates whether IMDSv2 is required.",
                    "type": "string",
                    "returned": "if applicable"
                  },
                  "instance_metadata_tags": {
                    "description": "Set to enabled to allow access to instance tags from the instance metadata.",
                    "type": "string",
                    "returned": "if applicable"
                  },
                  "state": {
                    "description": "The state of the metadata option changes.",
                    "type": "string",
                    "returned": "if applicable"
                  }
                }
              },
              "monitoring": {
                "description": "The monitoring for the instance.",
                "type": "dictionary",
                "returned": "if applicable",
                "suboptions": {
                  "enabled": {
                    "description": "Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.",
                    "type": "boolean",
                    "returned": "always"
                  }
                }
              },
              "network_interfaces": {
                "description": "The network interfaces.",
                "type": "list",
                "returned": "if applicable",
                "elements": "elements=dictionary",
                "suboptions": {
                  "associate_carrier_ip_address": {
                    "description": "Indicates whether to associate a Carrier IP address with eth0 for a new network interface.",
                    "type": "boolean",
                    "returned": "always"
                  },
                  "associate_public_ip_address": {
                    "description": "Indicates whether to associate a public IPv4 address with eth0 for a new network interface.",
                    "type": "boolean",
                    "returned": "always"
                  },
                  "connection_tracking_specification": {
                    "description": "A security group connection tracking specification that enables you to set the timeout for connection tracking on an Elastic network interface.",
                    "type": "dictionary",
                    "returned": "if applicable",
                    "suboptions": {
                      "tcp_established_timeout": {
                        "description": "Timeout (in seconds) for idle TCP connections in an established state.",
                        "type": "integer",
                        "returned": "always"
                      },
                      "udp_stream_timeout": {
                        "description": "Timeout (in seconds) for idle UDP flows classified as streams which have seen more than one request-response transaction.",
                        "type": "integer",
                        "returned": "always"
                      },
                      "udp_timeout": {
                        "description": "Timeout (in seconds) for idle UDP flows that have seen traffic only in a single direction or a single request-response transaction.",
                        "type": "integer",
                        "returned": "always"
                      }
                    }
                  },
                  "delete_on_termination": {
                    "description": "Indicates whether the network interface is deleted when the instance is terminated.",
                    "type": "boolean",
                    "returned": "always"
                  },
                  "description": {
                    "description": "A description for the network interface.",
                    "type": "string",
                    "returned": "always"
                  },
                  "device_index": {
                    "description": "The device index for the network interface attachment.",
                    "type": "integer",
                    "returned": "always"
                  },
                  "ena_srd_specification": {
                    "description": "Contains the ENA Express settings for instances launched from your launch template.",
                    "type": "dictionary",
                    "returned": "if applicable",
                    "suboptions": {
                      "ena_srd_enabled": {
                        "description": "Indicates whether ENA Express is enabled for the network interface.",
                        "type": "boolean",
                        "returned": "always"
                      },
                      "ena_srd_udp_specification": {
                        "description": "Configures ENA Express for UDP network traffic.",
                        "type": "dictionary",
                        "returned": "always",
                        "suboptions": {
                          "ena_srd_udp_enabled": {
                            "description": "Indicates whether UDP traffic to and from the instance uses ENA Express.",
                            "type": "boolean",
                            "returned": "always"
                          }
                        }
                      }
                    }
                  },
                  "groups": {
                    "description": "The IDs of one or more security groups.",
                    "type": "list",
                    "returned": "if applicable",
                    "elements": "elements=string"
                  },
                  "interface_type": {
                    "description": "The type of network interface.",
                    "type": "string",
                    "returned": "always"
                  },
                  "ipv4_prefix_count": {
                    "description": "The number of IPv4 prefixes that Amazon Web Services automatically assigned to the network interface.",
                    "type": "integer",
                    "returned": "if applicable"
                  },
                  "ipv4_prefixes": {
                    "description": "A list of IPv4 prefixes assigned to the network interface.",
                    "type": "list",
                    "returned": "if applicable",
                    "elements": "elements=dictionary",
                    "suboptions": {
                      "ipv4_prefix": {
                        "description": "The IPv4 delegated prefixes assigned to the network interface.",
                        "type": "string",
                        "returned": "always"
                      }
                    }
                  },
                  "ipv6_address_count": {
                    "description": "The number of IPv6 addresses for the network interface.",
                    "type": "integer",
                    "returned": "if applicable"
                  },
                  "ipv6_addresses": {
                    "description": "The IPv6 addresses for the network interface.",
                    "type": "list",
                    "returned": "if applicable",
                    "elements": "elements=dictionary",
                    "suboptions": {
                      "ipv6_address": {
                        "description": "The IPv6 address.",
                        "type": "string",
                        "returned": "always"
                      },
                      "is_primary_ipv6": {
                        "description": "Determines if an IPv6 address associated with a network interface is the primary IPv6 address.",
                        "type": "boolean",
                        "returned": "always"
                      }
                    }
                  },
                  "ipv6_prefix_count": {
                    "description": "The number of IPv6 prefixes that Amazon Web Services automatically assigned to the network interface.",
                    "type": "integer",
                    "returned": "if applicable"
                  },
                  "ipv6_prefixes": {
                    "description": "A list of IPv6 prefixes assigned to the network interface.",
                    "type": "list",
                    "returned": "if applicable",
                    "elements": "elements=dictionary",
                    "suboptions": {
                      "ipv6_prefix": {
                        "description": "The IPv6 delegated prefixes assigned to the network interface.",
                        "type": "string",
                        "returned": "always"
                      }
                    }
                  },
                  "network_card_index": {
                    "description": "The index of the network card.",
                    "type": "integer",
                    "returned": "if applicable"
                  },
                  "network_interface_id": {
                    "description": "The ID of the network interface.",
                    "type": "string",
                    "returned": "always"
                  },
                  "primary_ipv6": {
                    "description": "The primary IPv6 address of the network interface.",
                    "type": "string",
                    "returned": "if applicable"
                  },
                  "private_ip_address": {
                    "description": "The primary private IPv4 address of the network interface.",
                    "type": "string",
                    "returned": "if applicable"
                  },
                  "private_ip_addresses": {
                    "description": "A list of private IPv4 addresses.",
                    "type": "list",
                    "returned": "if applicable",
                    "elements": "elements=string",
                    "suboptions": {
                      "primary": {
                        "description": "Indicates whether the private IPv4 address is the primary private IPv4 address.",
                        "type": "boolean",
                        "returned": "always"
                      },
                      "private_ip_address": {
                        "description": "The private IPv4 address.",
                        "type": "boolean",
                        "returned": "always"
                      }
                    }
                  },
                  "secondary_private_ip_address_count": {
                    "description": "The number of secondary private IPv4 addresses for the network interface.",
                    "type": "integer",
                    "returned": "if applicable"
                  },
                  "subnet_id": {
                    "description": "The ID of the subnet for the network interface.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              },
              "placement": {
                "description": "The placement of the instance.",
                "type": "dictionary",
                "returned": "if applicable",
                "suboptions": {
                  "affinity": {
                    "description": "The affinity setting for the instance on the Dedicated Host.",
                    "type": "string",
                    "returned": "if applicable"
                  },
                  "availability_zone": {
                    "description": "The Availability Zone of the instance.",
                    "type": "string",
                    "returned": "if applicable"
                  },
                  "group_id": {
                    "description": "The Group ID of the placement group.",
                    "type": "string",
                    "returned": "if applicable"
                  },
                  "group_name": {
                    "description": "The name of the placement group for the instance.",
                    "type": "string",
                    "returned": "if applicable"
                  },
                  "host_id": {
                    "description": "The ID of the Dedicated Host for the instance.",
                    "type": "string",
                    "returned": "if applicable"
                  },
                  "host_resource_group_arn": {
                    "description": "The ARN of the host resource group in which to launch the instances.",
                    "type": "string",
                    "returned": "if applicable"
                  },
                  "partition_number": {
                    "description": "The number of the partition the instance should launch in.",
                    "type": "integer",
                    "returned": "if applicable"
                  },
                  "tenancy": {
                    "description": "The tenancy of the instance.",
                    "type": "string",
                    "returned": "if applicable"
                  }
                }
              },
              "ram_disk_id": {
                "description": "The ID of the RAM disk, if applicable.",
                "type": "string",
                "returned": "if applicable"
              },
              "security_group_ids": {
                "description": "The security group IDs.",
                "type": "list",
                "returned": "if applicable",
                "elements": "elements=string"
              },
              "security_groups": {
                "description": "The security group names.",
                "type": "list",
                "returned": "if applicable",
                "elements": "elements=string"
              },
              "tag_specifications": {
                "description": "The tags that are applied to the resources that are created during instance launch.",
                "type": "list",
                "returned": "if applicable",
                "elements": "elements=dictionary",
                "suboptions": {
                  "resource_type": {
                    "description": "The type of resource to tag.",
                    "type": "string",
                    "returned": "always"
                  },
                  "tags": {
                    "description": "The tags for the resource.",
                    "type": "list",
                    "returned": "success",
                    "elements": "elements=dictionary",
                    "suboptions": {
                      "key": {
                        "description": "The key of the tag.",
                        "type": "string",
                        "returned": "always"
                      },
                      "value": {
                        "description": "The value of the tag.",
                        "type": "string",
                        "returned": "always"
                      }
                    }
                  }
                }
              },
              "user_data": {
                "description": "The user data for the instance.",
                "type": "string",
                "returned": "if applicable"
              }
            }
          },
          "launch_template_id": {
            "description": "The ID of the launch template.",
            "type": "string",
            "returned": "always"
          },
          "launch_template_name": {
            "description": "The name of the launch template.",
            "type": "string",
            "returned": "always"
          },
          "version_description": {
            "description": "The description for the version.",
            "type": "string",
            "returned": "always"
          },
          "version_number": {
            "description": "The version number.",
            "type": "integer",
            "returned": "always"
          }
        }
      }
    }
  },
  "ec2_launch_template_info": {
    "description": "Gather information about launch templates and versions",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_launch_template_info_module.html#ansible-collections-amazon-aws-ec2-launch-template-info-module",
    "return_values": {
      "launch_templates": {
        "description": "A list of launch templates.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "create_time": {
            "description": "The time launch template was created.",
            "type": "string",
            "returned": "always"
          },
          "created_by": {
            "description": "The principal that created the launch template.",
            "type": "string",
            "returned": "always"
          },
          "default_version_number": {
            "description": "The version number of the default version of the launch template.",
            "type": "integer",
            "returned": "always"
          },
          "latest_version_number": {
            "description": "The version number of the latest version of the launch template.",
            "type": "integer",
            "returned": "always"
          },
          "launch_template_id": {
            "description": "The ID of the launch template.",
            "type": "string",
            "returned": "always"
          },
          "launch_template_name": {
            "description": "The name of the launch template.",
            "type": "string",
            "returned": "always"
          },
          "tags": {
            "description": "A dictionary of tags assigned to image.",
            "type": "dictionary",
            "returned": "when AMI is created or already exists",
            "sample": "{\"Env\": \"devel\", \"Name\": \"nat-server\"}"
          },
          "versions": {
            "description": "All available versions of the launch template.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "create_time": {
                "description": "The time the version was created.",
                "type": "string",
                "returned": "always"
              },
              "created_by": {
                "description": "The principal that created the version.",
                "type": "string",
                "returned": "always"
              },
              "default_version": {
                "description": "Indicates whether the version is the default version.",
                "type": "boolean",
                "returned": "always"
              },
              "launch_template_data": {
                "description": "Information about the launch template.",
                "type": "dictionary",
                "returned": "always",
                "suboptions": {
                  "block_device_mappings": {
                    "description": "The block device mappings.",
                    "type": "list",
                    "returned": "if applicable",
                    "elements": "elements=dictionary",
                    "suboptions": {
                      "device_name": {
                        "description": "The device name.",
                        "type": "string",
                        "returned": "always"
                      },
                      "ebs": {
                        "description": "Information about the block device for an EBS volume.",
                        "type": "string",
                        "returned": "if applicable",
                        "suboptions": {
                          "delete_on_termination": {
                            "description": "Indicates whether the EBS volume is deleted on instance termination.",
                            "type": "boolean",
                            "returned": "always"
                          },
                          "encrypted": {
                            "description": "Indicates whether the EBS volume is encrypted.",
                            "type": "boolean",
                            "returned": "always"
                          },
                          "iops": {
                            "description": "The number of I/O operations per second (IOPS) that the volume supports.",
                            "type": "integer",
                            "returned": "always"
                          },
                          "kms_key_id": {
                            "description": "The ARN of the Key Management Service (KMS) CMK used for encryption.",
                            "type": "integer",
                            "returned": "always"
                          },
                          "snapshot_id": {
                            "description": "The ID of the snapshot.",
                            "type": "string",
                            "returned": "always"
                          },
                          "throughput": {
                            "description": "The throughput that the volume supports, in MiB/s.",
                            "type": "integer",
                            "returned": "always"
                          },
                          "volume_size": {
                            "description": "The size of the volume, in GiB.",
                            "type": "integer",
                            "returned": "always"
                          },
                          "volume_type": {
                            "description": "The volume type.",
                            "type": "string",
                            "returned": "always"
                          }
                        }
                      },
                      "no_device": {
                        "description": "To omit the device from the block device mapping, specify an empty string.",
                        "type": "string",
                        "returned": "success"
                      },
                      "virtual_name": {
                        "description": "The virtual device name.",
                        "type": "string",
                        "returned": "always"
                      }
                    }
                  },
                  "cpu_options": {
                    "description": "The CPU options for the instance.",
                    "type": "dictionary",
                    "returned": "if applicable",
                    "suboptions": {
                      "amd_sev_snp": {
                        "description": "Indicates whether the instance is enabled for AMD SEV-SNP.",
                        "type": "integer",
                        "returned": "if applicable"
                      },
                      "core_count": {
                        "description": "The number of CPU cores for the instance.",
                        "type": "integer",
                        "returned": "if applicable"
                      },
                      "threads_per_core": {
                        "description": "The number of threads per CPU core.",
                        "type": "integer",
                        "returned": "if applicable"
                      }
                    }
                  },
                  "disable_api_termination": {
                    "description": "If set to true, indicates that the instance cannot be terminated using the Amazon EC2 console, command line tool, or API.",
                    "type": "boolean",
                    "returned": "if applicable"
                  },
                  "ebs_optimized": {
                    "description": "Indicates whether the instance is optimized for Amazon EBS I/O.",
                    "type": "boolean",
                    "returned": "always"
                  },
                  "enclave_options": {
                    "description": "Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.",
                    "type": "dictionary",
                    "returned": "if applicable",
                    "suboptions": {
                      "enabled": {
                        "description": "If this parameter is set to true, the instance is enabled for Amazon Web Services Nitro Enclaves.",
                        "type": "boolean",
                        "returned": "always"
                      }
                    }
                  },
                  "iam_instance_profile": {
                    "description": "The IAM instance profile.",
                    "type": "dictionary",
                    "returned": "if application",
                    "suboptions": {
                      "arn": {
                        "description": "The Amazon Resource Name (ARN) of the instance profile.",
                        "type": "string",
                        "returned": "always"
                      },
                      "name": {
                        "description": "The name of the instance profile.",
                        "type": "string",
                        "returned": "always"
                      }
                    }
                  },
                  "image_id": {
                    "description": "The ID of the AMI or a Systems Manager parameter.",
                    "type": "string",
                    "returned": "if applicable"
                  },
                  "instance_initiated_shutdown_behavior": {
                    "description": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance.",
                    "type": "string",
                    "returned": "if applicable"
                  },
                  "instance_type": {
                    "description": "The instance type.",
                    "type": "string",
                    "returned": "if applicable"
                  },
                  "kernel_id": {
                    "description": "The ID of the kernel.",
                    "type": "string",
                    "returned": "if applicable"
                  },
                  "key_name": {
                    "description": "The name of the key pair.",
                    "type": "string",
                    "returned": "if applicable"
                  },
                  "metadata_options": {
                    "description": "The metadata options for the instance.",
                    "type": "dictionary",
                    "returned": "if applicable",
                    "suboptions": {
                      "http_endpoint": {
                        "description": "Enables or disables the HTTP metadata endpoint on your instances.",
                        "type": "string",
                        "returned": "if applicable"
                      },
                      "http_protocol_ipv6": {
                        "description": "Enables or disables the IPv6 endpoint for the instance metadata service.",
                        "type": "string",
                        "returned": "if applicable"
                      },
                      "http_put_response_hop_limit": {
                        "description": "The desired HTTP PUT response hop limit for instance metadata requests.",
                        "type": "integer",
                        "returned": "if applicable"
                      },
                      "http_tokens": {
                        "description": "Indicates whether IMDSv2 is required.",
                        "type": "string",
                        "returned": "if applicable"
                      },
                      "instance_metadata_tags": {
                        "description": "Set to enabled to allow access to instance tags from the instance metadata.",
                        "type": "string",
                        "returned": "if applicable"
                      },
                      "state": {
                        "description": "The state of the metadata option changes.",
                        "type": "string",
                        "returned": "if applicable"
                      }
                    }
                  },
                  "monitoring": {
                    "description": "The monitoring for the instance.",
                    "type": "dictionary",
                    "returned": "if applicable",
                    "suboptions": {
                      "enabled": {
                        "description": "Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.",
                        "type": "boolean",
                        "returned": "always"
                      }
                    }
                  },
                  "network_interfaces": {
                    "description": "The network interfaces.",
                    "type": "list",
                    "returned": "if applicable",
                    "elements": "elements=dictionary",
                    "suboptions": {
                      "associate_carrier_ip_address": {
                        "description": "Indicates whether to associate a Carrier IP address with eth0 for a new network interface.",
                        "type": "boolean",
                        "returned": "always"
                      },
                      "associate_public_ip_address": {
                        "description": "Indicates whether to associate a public IPv4 address with eth0 for a new network interface.",
                        "type": "boolean",
                        "returned": "always"
                      },
                      "connection_tracking_specification": {
                        "description": "A security group connection tracking specification that enables you to set the timeout for connection tracking on an Elastic network interface.",
                        "type": "dictionary",
                        "returned": "if applicable",
                        "suboptions": {
                          "tcp_established_timeout": {
                            "description": "Timeout (in seconds) for idle TCP connections in an established state.",
                            "type": "integer",
                            "returned": "always"
                          },
                          "udp_stream_timeout": {
                            "description": "Timeout (in seconds) for idle UDP flows classified as streams which have seen more than one request-response transaction.",
                            "type": "integer",
                            "returned": "always"
                          },
                          "udp_timeout": {
                            "description": "Timeout (in seconds) for idle UDP flows that have seen traffic only in a single direction or a single request-response transaction.",
                            "type": "integer",
                            "returned": "always"
                          }
                        }
                      },
                      "delete_on_termination": {
                        "description": "Indicates whether the network interface is deleted when the instance is terminated.",
                        "type": "boolean",
                        "returned": "always"
                      },
                      "description": {
                        "description": "A description for the network interface.",
                        "type": "string",
                        "returned": "always"
                      },
                      "device_index": {
                        "description": "The device index for the network interface attachment.",
                        "type": "integer",
                        "returned": "always"
                      },
                      "ena_srd_specification": {
                        "description": "Contains the ENA Express settings for instances launched from your launch template.",
                        "type": "dictionary",
                        "returned": "if applicable",
                        "suboptions": {
                          "ena_srd_enabled": {
                            "description": "Indicates whether ENA Express is enabled for the network interface.",
                            "type": "boolean",
                            "returned": "always"
                          },
                          "ena_srd_udp_specification": {
                            "description": "Configures ENA Express for UDP network traffic.",
                            "type": "dictionary",
                            "returned": "always",
                            "suboptions": {
                              "ena_srd_udp_enabled": {
                                "description": "Indicates whether UDP traffic to and from the instance uses ENA Express.",
                                "type": "boolean",
                                "returned": "always"
                              }
                            }
                          }
                        }
                      },
                      "groups": {
                        "description": "The IDs of one or more security groups.",
                        "type": "list",
                        "returned": "if applicable",
                        "elements": "elements=string"
                      },
                      "interface_type": {
                        "description": "The type of network interface.",
                        "type": "string",
                        "returned": "always"
                      },
                      "ipv4_prefix_count": {
                        "description": "The number of IPv4 prefixes that Amazon Web Services automatically assigned to the network interface.",
                        "type": "integer",
                        "returned": "if applicable"
                      },
                      "ipv4_prefixes": {
                        "description": "A list of IPv4 prefixes assigned to the network interface.",
                        "type": "list",
                        "returned": "if applicable",
                        "elements": "elements=dictionary",
                        "suboptions": {
                          "ipv4_prefix": {
                            "description": "The IPv4 delegated prefixes assigned to the network interface.",
                            "type": "string",
                            "returned": "always"
                          }
                        }
                      },
                      "ipv6_address_count": {
                        "description": "The number of IPv6 addresses for the network interface.",
                        "type": "integer",
                        "returned": "if applicable"
                      },
                      "ipv6_addresses": {
                        "description": "The IPv6 addresses for the network interface.",
                        "type": "list",
                        "returned": "if applicable",
                        "elements": "elements=dictionary",
                        "suboptions": {
                          "ipv6_address": {
                            "description": "The IPv6 address.",
                            "type": "string",
                            "returned": "always"
                          },
                          "is_primary_ipv6": {
                            "description": "Determines if an IPv6 address associated with a network interface is the primary IPv6 address.",
                            "type": "boolean",
                            "returned": "always"
                          }
                        }
                      },
                      "ipv6_prefix_count": {
                        "description": "The number of IPv6 prefixes that Amazon Web Services automatically assigned to the network interface.",
                        "type": "integer",
                        "returned": "if applicable"
                      },
                      "ipv6_prefixes": {
                        "description": "A list of IPv6 prefixes assigned to the network interface.",
                        "type": "list",
                        "returned": "if applicable",
                        "elements": "elements=dictionary",
                        "suboptions": {
                          "ipv6_prefix": {
                            "description": "The IPv6 delegated prefixes assigned to the network interface.",
                            "type": "string",
                            "returned": "always"
                          }
                        }
                      },
                      "network_card_index": {
                        "description": "The index of the network card.",
                        "type": "integer",
                        "returned": "if applicable"
                      },
                      "network_interface_id": {
                        "description": "The ID of the network interface.",
                        "type": "string",
                        "returned": "always"
                      },
                      "primary_ipv6": {
                        "description": "The primary IPv6 address of the network interface.",
                        "type": "string",
                        "returned": "if applicable"
                      },
                      "private_ip_address": {
                        "description": "The primary private IPv4 address of the network interface.",
                        "type": "string",
                        "returned": "if applicable"
                      },
                      "private_ip_addresses": {
                        "description": "A list of private IPv4 addresses.",
                        "type": "list",
                        "returned": "if applicable",
                        "elements": "elements=string",
                        "suboptions": {
                          "primary": {
                            "description": "Indicates whether the private IPv4 address is the primary private IPv4 address.",
                            "type": "boolean",
                            "returned": "always"
                          },
                          "private_ip_address": {
                            "description": "The private IPv4 address.",
                            "type": "boolean",
                            "returned": "always"
                          }
                        }
                      },
                      "secondary_private_ip_address_count": {
                        "description": "The number of secondary private IPv4 addresses for the network interface.",
                        "type": "integer",
                        "returned": "if applicable"
                      },
                      "subnet_id": {
                        "description": "The ID of the subnet for the network interface.",
                        "type": "string",
                        "returned": "always"
                      }
                    }
                  },
                  "placement": {
                    "description": "The placement of the instance.",
                    "type": "dictionary",
                    "returned": "if applicable",
                    "suboptions": {
                      "affinity": {
                        "description": "The affinity setting for the instance on the Dedicated Host.",
                        "type": "string",
                        "returned": "if applicable"
                      },
                      "availability_zone": {
                        "description": "The Availability Zone of the instance.",
                        "type": "string",
                        "returned": "if applicable"
                      },
                      "group_id": {
                        "description": "The Group ID of the placement group.",
                        "type": "string",
                        "returned": "if applicable"
                      },
                      "group_name": {
                        "description": "The name of the placement group for the instance.",
                        "type": "string",
                        "returned": "if applicable"
                      },
                      "host_id": {
                        "description": "The ID of the Dedicated Host for the instance.",
                        "type": "string",
                        "returned": "if applicable"
                      },
                      "host_resource_group_arn": {
                        "description": "The ARN of the host resource group in which to launch the instances.",
                        "type": "string",
                        "returned": "if applicable"
                      },
                      "partition_number": {
                        "description": "The number of the partition the instance should launch in.",
                        "type": "integer",
                        "returned": "if applicable"
                      },
                      "tenancy": {
                        "description": "The tenancy of the instance.",
                        "type": "string",
                        "returned": "if applicable"
                      }
                    }
                  },
                  "ram_disk_id": {
                    "description": "The ID of the RAM disk, if applicable.",
                    "type": "string",
                    "returned": "if applicable"
                  },
                  "security_group_ids": {
                    "description": "The security group IDs.",
                    "type": "list",
                    "returned": "if applicable",
                    "elements": "elements=string"
                  },
                  "security_groups": {
                    "description": "The security group names.",
                    "type": "list",
                    "returned": "if applicable",
                    "elements": "elements=string"
                  },
                  "tag_specifications": {
                    "description": "The tags that are applied to the resources that are created during instance launch.",
                    "type": "list",
                    "returned": "if applicable",
                    "elements": "elements=dictionary",
                    "suboptions": {
                      "resource_type": {
                        "description": "The type of resource to tag.",
                        "type": "string",
                        "returned": "always"
                      },
                      "tags": {
                        "description": "The tags for the resource.",
                        "type": "list",
                        "returned": "success",
                        "elements": "elements=dictionary",
                        "suboptions": {
                          "key": {
                            "description": "The key of the tag.",
                            "type": "string",
                            "returned": "always"
                          },
                          "value": {
                            "description": "The value of the tag.",
                            "type": "string",
                            "returned": "always"
                          }
                        }
                      }
                    }
                  },
                  "user_data": {
                    "description": "The user data for the instance.",
                    "type": "string",
                    "returned": "if applicable"
                  }
                }
              },
              "launch_template_id": {
                "description": "The ID of the launch template.",
                "type": "string",
                "returned": "always"
              },
              "launch_template_name": {
                "description": "The name of the launch template.",
                "type": "string",
                "returned": "always"
              },
              "version_description": {
                "description": "The description for the version.",
                "type": "string",
                "returned": "always"
              },
              "version_number": {
                "description": "The version number.",
                "type": "integer",
                "returned": "always"
              }
            }
          }
        }
      }
    }
  },
  "ec2_metadata_facts": {
    "description": "Gathers facts (instance metadata) about remote hosts within EC2",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_metadata_facts_module.html#ansible-collections-amazon-aws-ec2-metadata-facts-module",
    "return_values": {}
  },
  "ec2_placement_group": {
    "description": "Create or delete an EC2 Placement Group",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_placement_group_module.html#ansible-collections-amazon-aws-ec2-placement-group-module",
    "return_values": {
      "placement_group": {
        "description": "Placement group attributes.",
        "type": "dictionary",
        "returned": "when state != absent",
        "suboptions": {
          "group_arn": {
            "description": "Placement Group ARN.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:ec2:us-east-1:123456789012:placement-group\""
          },
          "group_id": {
            "description": "Placement Group Id.",
            "type": "string",
            "returned": "always",
            "sample": "\"pg-123456789012\""
          },
          "name": {
            "description": "Placement Group name.",
            "type": "string",
            "returned": "always",
            "sample": "\"my-cluster\""
          },
          "partition_count": {
            "description": "Partition Count.",
            "type": "string",
            "returned": "If applicable",
            "sample": "\"my-cluster\""
          },
          "state": {
            "description": "Placement Groupt state.",
            "type": "string",
            "returned": "If applicable",
            "sample": "\"available\""
          },
          "strategy": {
            "description": "Placement Group strategy.",
            "type": "string",
            "returned": "If applicable",
            "sample": "\"cluster\""
          },
          "tags": {
            "description": "Tags associated with the placement group.",
            "type": "dictionary",
            "returned": "If applicable",
            "sample": "{\"tags\": {\"other\": \"value2\", \"some\": \"value1\"}}"
          }
        }
      }
    }
  },
  "ec2_placement_group_info": {
    "description": "List EC2 Placement Group(s) details",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_placement_group_info_module.html#ansible-collections-amazon-aws-ec2-placement-group-info-module",
    "return_values": {
      "placement_groups": {
        "description": "Placement group attributes.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "name": {
            "description": "PG name.",
            "type": "string",
            "returned": "success",
            "sample": "\"my-cluster\""
          },
          "state": {
            "description": "PG state.",
            "type": "string",
            "returned": "success",
            "sample": "\"available\""
          },
          "strategy": {
            "description": "PG strategy.",
            "type": "string",
            "returned": "success",
            "sample": "\"cluster\""
          },
          "tags": {
            "description": "Tags associated with the placement group.",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"tags\": {\"other\": \"value2\", \"some\": \"value1\"}}"
          }
        }
      }
    }
  },
  "ec2_security_group": {
    "description": "Maintain an EC2 security group",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_security_group_module.html#ansible-collections-amazon-aws-ec2-security-group-module",
    "return_values": {
      "description": {
        "description": "Description of security group.",
        "type": "string",
        "returned": "on create/update",
        "sample": "\"My Security Group\""
      },
      "group_id": {
        "description": "Security group id.",
        "type": "string",
        "returned": "on create/update",
        "sample": "\"sg-abcd1234\""
      },
      "group_name": {
        "description": "Security group name.",
        "type": "string",
        "returned": "on create/update",
        "sample": "\"My Security Group\""
      },
      "ip_permissions": {
        "description": "The inbound rules associated with the security group.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "from_port": {
            "description": "If the protocol is TCP or UDP, this is the start of the port range.",
            "type": "integer",
            "returned": "success",
            "sample": "80"
          },
          "ip_protocol": {
            "description": "The IP protocol name or number.",
            "type": "string",
            "returned": "always"
          },
          "ip_ranges": {
            "description": "The IPv4 ranges.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "cidr_ip": {
                "description": "The IPv4 CIDR range.",
                "type": "string",
                "returned": "always"
              }
            }
          },
          "ipv6_ranges": {
            "description": "The IPv6 ranges.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "cidr_ipv6": {
                "description": "The IPv6 CIDR range.",
                "type": "string",
                "returned": "always"
              }
            }
          },
          "prefix_list_ids": {
            "description": "The prefix list IDs.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "prefix_list_id": {
                "description": "The ID of the prefix.",
                "type": "string",
                "returned": "always"
              }
            }
          },
          "to_group": {
            "description": "If the protocol is TCP or UDP, this is the end of the port range.",
            "type": "integer",
            "returned": "success",
            "sample": "80"
          },
          "user_id_group_pairs": {
            "description": "The security group and AWS account ID pairs.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "group_id": {
                "description": "The security group ID of the pair.",
                "type": "string",
                "returned": "always"
              },
              "user_id": {
                "description": "The user ID of the pair.",
                "type": "string",
                "returned": "always"
              }
            }
          }
        }
      },
      "ip_permissions_egress": {
        "description": "The outbound rules associated with the security group.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "ip_protocol": {
            "description": "The IP protocol name or number.",
            "type": "string",
            "returned": "always"
          },
          "ip_ranges": {
            "description": "The IPv4 ranges.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "cidr_ip": {
                "description": "The IPv4 CIDR range.",
                "type": "string",
                "returned": "always"
              }
            }
          },
          "ipv6_ranges": {
            "description": "The IPv6 ranges.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "cidr_ipv6": {
                "description": "The IPv6 CIDR range.",
                "type": "string",
                "returned": "always"
              }
            }
          },
          "prefix_list_ids": {
            "description": "The prefix list IDs.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "prefix_list_id": {
                "description": "The ID of the prefix.",
                "type": "string",
                "returned": "always"
              }
            }
          },
          "user_id_group_pairs": {
            "description": "The security group and AWS account ID pairs.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "group_id": {
                "description": "The security group ID of the pair.",
                "type": "string",
                "returned": "always"
              },
              "user_id": {
                "description": "The user ID of the pair.",
                "type": "string",
                "returned": "always"
              }
            }
          }
        }
      },
      "owner_id": {
        "description": "AWS Account ID of the security group.",
        "type": "integer",
        "returned": "on create/update",
        "sample": "123456789012"
      },
      "tags": {
        "description": "Tags associated with the security group.",
        "type": "dictionary",
        "returned": "on create/update",
        "sample": "{\"Name\": \"My Security Group\", \"Purpose\": \"protecting stuff\"}"
      },
      "vpc_id": {
        "description": "ID of VPC to which the security group belongs.",
        "type": "string",
        "returned": "on create/update",
        "sample": "\"vpc-abcd1234\""
      }
    }
  },
  "ec2_security_group_info": {
    "description": "Gather information about EC2 security groups in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_security_group_info_module.html#ansible-collections-amazon-aws-ec2-security-group-info-module",
    "return_values": {
      "security_groups": {
        "description": "Security groups that match the provided filters. Each element consists of a dict with all the information related to that security group.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "sample": "[{\"description\": \"created by rds_instance integration tests\", \"group_id\": \"sg-036496a610b79da88\", \"group_name\": \"ansible-test-89355088-unknown5c5f67f3ad09-sg-1\", \"ip_permissions\": [], \"ip_permissions_egress\": [{\"ip_protocol\": \"-1\", \"ip_ranges\": [{\"cidr_ip\": \"0.0.0.0/0\"}], \"ipv6_ranges\": [], \"prefix_list_ids\": [], \"user_id_group_pairs\": []}], \"owner_id\": \"123456789012\", \"tags\": {}, \"vpc_id\": \"vpc-0bc3bb03f97405435\"}]",
        "suboptions": {
          "description": {
            "description": "The description of the security group.",
            "type": "string",
            "returned": "always"
          },
          "group_id": {
            "description": "The ID of the security group.",
            "type": "string",
            "returned": "always"
          },
          "group_name": {
            "description": "The name of the security group.",
            "type": "string",
            "returned": "always"
          },
          "ip_permissions": {
            "description": "The inbound rules associated with the security group.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "from_port": {
                "description": "If the protocol is TCP or UDP, this is the start of the port range.",
                "type": "integer",
                "returned": "success",
                "sample": "80"
              },
              "ip_protocol": {
                "description": "The IP protocol name or number.",
                "type": "string",
                "returned": "always"
              },
              "ip_ranges": {
                "description": "The IPv4 ranges.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "cidr_ip": {
                    "description": "The IPv4 CIDR range.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              },
              "ipv6_ranges": {
                "description": "The IPv6 ranges.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "cidr_ipv6": {
                    "description": "The IPv6 CIDR range.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              },
              "prefix_list_ids": {
                "description": "The prefix list IDs.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "prefix_list_id": {
                    "description": "The ID of the prefix.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              },
              "to_group": {
                "description": "If the protocol is TCP or UDP, this is the end of the port range.",
                "type": "integer",
                "returned": "success",
                "sample": "80"
              },
              "user_id_group_pairs": {
                "description": "The security group and AWS account ID pairs.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "group_id": {
                    "description": "The security group ID of the pair.",
                    "type": "string",
                    "returned": "always"
                  },
                  "user_id": {
                    "description": "The user ID of the pair.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              }
            }
          },
          "ip_permissions_egress": {
            "description": "The outbound rules associated with the security group.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "ip_protocol": {
                "description": "The IP protocol name or number.",
                "type": "string",
                "returned": "always"
              },
              "ip_ranges": {
                "description": "The IPv4 ranges.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "cidr_ip": {
                    "description": "The IPv4 CIDR range.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              },
              "ipv6_ranges": {
                "description": "The IPv6 ranges.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "cidr_ipv6": {
                    "description": "The IPv6 CIDR range.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              },
              "prefix_list_ids": {
                "description": "The prefix list IDs.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "prefix_list_id": {
                    "description": "The ID of the prefix.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              },
              "user_id_group_pairs": {
                "description": "The security group and AWS account ID pairs.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "group_id": {
                    "description": "The security group ID of the pair.",
                    "type": "string",
                    "returned": "always"
                  },
                  "user_id": {
                    "description": "The user ID of the pair.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              }
            }
          },
          "owner_id": {
            "description": "The AWS account ID of the owner of the security group.",
            "type": "string",
            "returned": "always"
          },
          "tags": {
            "description": "The tags associated with the security group.",
            "type": "dictionary",
            "returned": "always"
          },
          "vpc_id": {
            "description": "The ID of the VPC for the security group.",
            "type": "string",
            "returned": "always"
          }
        }
      }
    }
  },
  "ec2_snapshot": {
    "description": "Creates a snapshot from an existing volume",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_snapshot_module.html#ansible-collections-amazon-aws-ec2-snapshot-module",
    "return_values": {
      "snapshot_id": {
        "description": "The ID of the snapshot. Each snapshot receives a unique identifier when it is created.",
        "type": "string",
        "returned": "always",
        "sample": "\"snap-01234567\""
      },
      "snapshots": {
        "description": "List of snapshots.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "description": {
            "description": "Description specified by the CreateSnapshotRequest that has been applied to all snapshots.",
            "type": "string",
            "returned": "always",
            "sample": "\"\""
          },
          "encrypted": {
            "description": "Indicates whether the snapshot is encrypted.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "owner_id": {
            "description": "Account id used when creating this snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"123456\""
          },
          "progress": {
            "description": "Progress this snapshot has made towards completing.",
            "type": "string",
            "returned": "always",
            "sample": "\"\""
          },
          "snapshot_id": {
            "description": "Snapshot id that can be used to describe this snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"snap-1234\""
          },
          "start_time": {
            "description": "Time this snapshot was started. This is the same for all snapshots initiated by the same request.",
            "type": "string",
            "returned": "always",
            "sample": "\"2024-05-07T14:29:24.523000+00:00\""
          },
          "state": {
            "description": "Current state of the snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"pending\""
          },
          "tags": {
            "description": "Tags associated with this snapshot.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"Name\": \"instance-name\"}"
          },
          "volume_id": {
            "description": "The ID of the volume that was used to create the snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"vol-01234567\""
          },
          "volume_size": {
            "description": "The size of the volume, in GiB.",
            "type": "integer",
            "returned": "always",
            "sample": "8"
          }
        }
      },
      "tags": {
        "description": "Any tags assigned to the snapshot.",
        "type": "dictionary",
        "returned": "always",
        "sample": "{\"Name\": \"instance-name\"}"
      },
      "volume_id": {
        "description": "The ID of the volume that was used to create the snapshot.",
        "type": "string",
        "returned": "always",
        "sample": "\"vol-01234567\""
      },
      "volume_size": {
        "description": "The size of the volume, in GiB.",
        "type": "integer",
        "returned": "always",
        "sample": "8"
      }
    }
  },
  "ec2_snapshot_info": {
    "description": "Gathers information about EC2 volume snapshots in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_snapshot_info_module.html#ansible-collections-amazon-aws-ec2-snapshot-info-module",
    "return_values": {
      "next_token_id": {
        "description": "Contains the value returned from a previous paginated request where max_results was used and the results exceeded the value of that parameter. This value is null when there are no more results to return.",
        "type": "string",
        "returned": "when option max_results is set in input"
      },
      "snapshots": {
        "description": "List of snapshots retrieved with their respective info.",
        "type": "list",
        "returned": "success",
        "elements": "elements=dictionary",
        "suboptions": {
          "create_volume_permissions": {
            "description": "The users and groups that have the permissions for creating volumes from the snapshot. The module will return empty list if the create volume permissions on snapshot are \u2018private\u2019.",
            "type": "list",
            "returned": "success",
            "elements": "elements=dictionary",
            "sample": "[{\"group\": \"all\"}]"
          },
          "data_encryption_key_id": {
            "description": "The data encryption key identifier for the snapshot. This value is a unique identifier that corresponds to the data encryption key that was used to encrypt the original volume or snapshot copy.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:kms:ap-southeast-2:123456789012:key/74c9742a-a1b2-45cb-b3fe-abcdef123456\""
          },
          "description": {
            "description": "The description for the snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"My important backup\""
          },
          "encrypted": {
            "description": "Indicates whether the snapshot is encrypted.",
            "type": "boolean",
            "returned": "always",
            "sample": "true"
          },
          "kms_key_id": {
            "description": "The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the parent volume.",
            "type": "string",
            "returned": "success",
            "sample": "\"74c9742a-a1b2-45cb-b3fe-abcdef123456\""
          },
          "owner_id": {
            "description": "The AWS account ID of the EBS snapshot owner.",
            "type": "string",
            "returned": "always",
            "sample": "\"123456789012\""
          },
          "progress": {
            "description": "The progress of the snapshot, as a percentage.",
            "type": "string",
            "returned": "always",
            "sample": "\"100%\""
          },
          "snapshot_id": {
            "description": "The ID of the snapshot. Each snapshot receives a unique identifier when it is created.",
            "type": "string",
            "returned": "always",
            "sample": "\"snap-01234567\""
          },
          "start_time": {
            "description": "The time stamp when the snapshot was initiated.",
            "type": "string",
            "returned": "always",
            "sample": "\"2015-02-12T02:14:02+00:00\""
          },
          "state": {
            "description": "The snapshot state (completed, pending or error).",
            "type": "string",
            "returned": "always",
            "sample": "\"completed\""
          },
          "state_message": {
            "description": "Encrypted Amazon EBS snapshots are copied asynchronously. If a snapshot copy operation fails (for example, if the proper AWS Key Management Service (AWS KMS) permissions are not obtained) this field displays error state details to help you diagnose why the error occurred.",
            "type": "string",
            "returned": "success"
          },
          "storage_tier": {
            "description": "The storage tier in which the snapshot is stored.",
            "type": "string",
            "returned": "always",
            "sample": "\"standard\""
          },
          "tags": {
            "description": "Any tags assigned to the snapshot.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"my_tag_key\": \"my_tag_value\"}"
          },
          "volume_id": {
            "description": "The ID of the volume that was used to create the snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"vol-01234567\""
          },
          "volume_size": {
            "description": "The size of the volume, in GiB.",
            "type": "integer",
            "returned": "always",
            "sample": "8"
          }
        }
      }
    }
  },
  "ec2_spot_instance": {
    "description": "Request, stop, reboot or cancel spot instance",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_spot_instance_module.html#ansible-collections-amazon-aws-ec2-spot-instance-module",
    "return_values": {
      "cancelled_spot_request": {
        "description": "Details of the cancelled spot instance request.",
        "type": "string",
        "returned": "when cancellation is successful",
        "sample": "\"Spot requests with IDs: sir-1234abcd have been cancelled\""
      },
      "spot_request": {
        "description": "The spot instance request details after creation.",
        "type": "dictionary",
        "returned": "when success",
        "sample": "{\"create_time\": \"2021-08-23T22:59:12+00:00\", \"instance_interruption_behavior\": \"terminate\", \"launch_specification\": {\"block_device_mappings\": [{\"device_name\": \"/dev/sdb\", \"ebs\": {\"delete_on_termination\": true, \"volume_size\": 5, \"volume_type\": \"gp3\"}}], \"ebs_optimized\": false, \"iam_instance_profile\": {\"arn\": \"arn:aws:iam::EXAMPLE:instance-profile/myinstanceprofile\"}, \"image_id\": \"ami-083ac7c7ecf9bb9b0\", \"instance_type\": \"t2.small\", \"key_name\": \"mykey\", \"monitoring\": {\"enabled\": false}, \"network_interfaces\": [{\"associate_public_ip_address\": false, \"delete_on_termination\": true, \"device_index\": 0}], \"placement\": {\"availability_zone\": \"us-west-2a\", \"tenancy\": \"default\"}, \"security_groups\": [{\"group_name\": \"default\"}]}, \"product_description\": \"Linux/UNIX\", \"spot_instance_request_id\": \"sir-1234abcd\", \"spot_price\": \"0.00600\", \"state\": \"open\", \"status\": {\"code\": \"pending-evaluation\", \"message\": \"Your Spot request has been submitted for review, and is pending evaluation.\", \"update_time\": \"2021-08-23T22:59:12+00:00\"}, \"tags\": {}, \"type\": \"one-time\"}"
      }
    }
  },
  "ec2_spot_instance_info": {
    "description": "Gather information about ec2 spot instance requests",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_spot_instance_info_module.html#ansible-collections-amazon-aws-ec2-spot-instance-info-module",
    "return_values": {
      "spot_request": {
        "description": "The gathered information about specified spot instance requests.",
        "type": "list",
        "returned": "when success",
        "elements": "elements=dictionary",
        "sample": "{\"create_time\": \"2021-09-01T21:05:57+00:00\", \"instance_id\": \"i-08877936b801ac475\", \"instance_interruption_behavior\": \"terminate\", \"launch_specification\": {\"ebs_optimized\": false, \"image_id\": \"ami-0443305dabd4be2bc\", \"instance_type\": \"t2.medium\", \"key_name\": \"zuul\", \"monitoring\": {\"enabled\": false}, \"placement\": {\"availability_zone\": \"us-east-2b\"}, \"security_groups\": [{\"group_id\": \"sg-01f9833207d53b937\", \"group_name\": \"default\"}], \"subnet_id\": \"subnet-07d906b8358869bda\"}, \"launched_availability_zone\": \"us-east-2b\", \"product_description\": \"Linux/UNIX\", \"spot_instance_request_id\": \"sir-c3cp9jsk\", \"spot_price\": \"0.046400\", \"state\": \"active\", \"status\": {\"code\": \"fulfilled\", \"message\": \"Your spot request is fulfilled.\", \"update_time\": \"2021-09-01T21:05:59+00:00\"}, \"tags\": {}, \"type\": \"one-time\", \"valid_until\": \"2021-09-08T21:05:57+00:00\"}",
        "suboptions": {
          "create_time": {
            "description": "The date and time when the Spot Instance request was created.",
            "type": "string",
            "returned": "always"
          },
          "instance_id": {
            "description": "The instance ID, if an instance has been launched to fulfill the Spot Instance request.",
            "type": "string",
            "returned": "when instance exists"
          },
          "instance_interruption_behavior": {
            "description": "The behavior when a Spot Instance is interruped.",
            "type": "string",
            "returned": "always"
          },
          "launch_specification": {
            "description": "Additional information for launching instances.",
            "type": "dictionary",
            "returned": "always",
            "suboptions": {
              "ebs_optimized": {
                "description": "Indicates whether the instance is optimized for EBS I/O.",
                "type": "boolean",
                "returned": "always"
              },
              "image_id": {
                "description": "The ID of the AMI.",
                "type": "string",
                "returned": "always"
              },
              "instance_type": {
                "description": "The instance type.",
                "type": "string",
                "returned": "always"
              },
              "key_name": {
                "description": "The name of the key pair.",
                "type": "string",
                "returned": "always"
              },
              "monitoring": {
                "description": "Described the monitoring of an instance.",
                "type": "dictionary",
                "returned": "always",
                "suboptions": {
                  "enabled": {
                    "description": "Indicated whether detailed monitoring is enabled.",
                    "type": "boolean",
                    "returned": "always"
                  }
                }
              },
              "placement": {
                "description": "The placement information for the instance.",
                "type": "dictionary",
                "returned": "always",
                "suboptions": {
                  "availability_zone": {
                    "description": "The name of the availability zone.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              },
              "security_groups": {
                "description": "List of security groups.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "group_id": {
                    "description": "The ID of the security group.",
                    "type": "string",
                    "returned": "always"
                  },
                  "group_name": {
                    "description": "The name of the security group.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              },
              "subnet_id": {
                "description": "The ID of the subnet.",
                "type": "string",
                "returned": "when creating a network interface when launching an instance"
              }
            }
          },
          "launched_availability_zone": {
            "description": "The availability zone in which the request is launched.",
            "type": "string",
            "returned": "always"
          },
          "product_description": {
            "description": "The product description associated with the Spot Instance.",
            "type": "string",
            "returned": "always"
          },
          "spot_instance_request_id": {
            "description": "The ID of the Spot Instance request.",
            "type": "string",
            "returned": "always"
          },
          "spot_price": {
            "description": "The maximum price per hour that you are willing to pay for a Spot Instance.",
            "type": "string",
            "returned": "always"
          },
          "state": {
            "description": "The state of the Spot Instance request.",
            "type": "string",
            "returned": "always"
          },
          "status": {
            "description": "Extra information about the status of the Spot Instance request.",
            "type": "dictionary",
            "returned": "always",
            "suboptions": {
              "code": {
                "description": "The status code. See https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-request-status.html#spot-instance-request-status-understand for codes.",
                "type": "string",
                "returned": "always"
              },
              "message": {
                "description": "The description of the status code.",
                "type": "string",
                "returned": "always"
              },
              "update_time": {
                "description": "The date and time of the most recent status update in UTC format.",
                "type": "string",
                "returned": "always"
              }
            }
          },
          "tags": {
            "description": "List of tags associated with the resource.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "key": {
                "description": "The key of the tag.",
                "type": "string",
                "returned": "always"
              },
              "value": {
                "description": "The value of the tag.",
                "type": "string",
                "returned": "always"
              }
            }
          },
          "type": {
            "description": "The Spot Instance request type.",
            "type": "string",
            "returned": "always"
          },
          "valid_until": {
            "description": "The end date of the request in UTC format.",
            "type": "string",
            "returned": "always"
          }
        }
      }
    }
  },
  "ec2_tag": {
    "description": "Create and remove tags on ec2 resources",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_tag_module.html#ansible-collections-amazon-aws-ec2-tag-module",
    "return_values": {
      "added_tags": {
        "description": "A dict of tags that were added to the resource.",
        "type": "dictionary",
        "returned": "If tags were added"
      },
      "removed_tags": {
        "description": "A dict of tags that were removed from the resource.",
        "type": "dictionary",
        "returned": "If tags were removed"
      },
      "tags": {
        "description": "A dict containing the tags on the resource.",
        "type": "dictionary",
        "returned": "always"
      }
    }
  },
  "ec2_tag_info": {
    "description": "List tags on ec2 resources",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_tag_info_module.html#ansible-collections-amazon-aws-ec2-tag-info-module",
    "return_values": {
      "tags": {
        "description": "A dict containing the tags on the resource.",
        "type": "dictionary",
        "returned": "always"
      }
    }
  },
  "ec2_transit_gateway": {
    "description": "Create and delete AWS Transit Gateways",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_transit_gateway_module.html#ansible-collections-amazon-aws-ec2-transit-gateway-module",
    "return_values": {
      "transit_gateway": {
        "description": "The attributes of the transit gateway.",
        "type": "dictionary",
        "returned": "state=present",
        "suboptions": {
          "creation_time": {
            "description": "The creation time of the transit gateway.",
            "type": "string",
            "returned": "always",
            "sample": "\"2019-03-06T17:13:51+00:00\""
          },
          "description": {
            "description": "The description of the transit gateway.",
            "type": "string",
            "returned": "always",
            "sample": "\"my test tgw\""
          },
          "options": {
            "description": "The options attributes of the transit gateway.",
            "type": "dictionary",
            "returned": "always",
            "suboptions": {
              "amazon_side_asn": {
                "description": "A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs.",
                "type": "string",
                "returned": "always",
                "sample": "\"64512\""
              },
              "association_default_route_table_id": {
                "description": "The ID of the default association route table.",
                "type": "string",
                "returned": "Iwhen exists",
                "sample": "\"tgw-rtb-abc123444\""
              },
              "auto_accept_shared_attachements": {
                "description": "Indicates whether attachment requests are automatically accepted.",
                "type": "string",
                "returned": "always",
                "sample": "\"disable\""
              },
              "default_route_table_association": {
                "description": "Indicates whether resource attachments are automatically associated with the default association route table.",
                "type": "string",
                "returned": "always",
                "sample": "\"enable\""
              },
              "default_route_table_propagation": {
                "description": "Indicates whether resource attachments automatically propagate routes to the default propagation route table.",
                "type": "string",
                "returned": "always",
                "sample": "\"disable\""
              },
              "dns_support": {
                "description": "Indicates whether DNS support is enabled.",
                "type": "string",
                "returned": "always",
                "sample": "\"enable\""
              },
              "multicast_support": {
                "description": "Indicates whether Multicast support is enabled.",
                "type": "string",
                "returned": "always",
                "sample": "\"enable\""
              },
              "propagation_default_route_table_id": {
                "description": "The ID of the default propagation route table.",
                "type": "string",
                "returned": "when exists",
                "sample": "\"tgw-rtb-def456777\""
              },
              "vpn_ecmp_support": {
                "description": "Indicates whether Equal Cost Multipath Protocol support is enabled.",
                "type": "string",
                "returned": "always",
                "sample": "\"enable\""
              }
            }
          },
          "owner_id": {
            "description": "The account that owns the transit gateway.",
            "type": "string",
            "returned": "always",
            "sample": "\"123456789012\""
          },
          "state": {
            "description": "The state of the transit gateway.",
            "type": "string",
            "returned": "always",
            "sample": "\"pending\""
          },
          "tags": {
            "description": "A dictionary of resource tags.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"tags\": {\"Name\": \"nonprod_tgw\"}}"
          },
          "transit_gateway_arn": {
            "description": "The ID of the transit_gateway.",
            "type": "string",
            "returned": "always",
            "sample": "\"tgw-3a9aa123\""
          },
          "transit_gateway_id": {
            "description": "The ID of the transit_gateway.",
            "type": "string",
            "returned": "always",
            "sample": "\"tgw-3a9aa123\""
          }
        }
      }
    }
  },
  "ec2_transit_gateway_info": {
    "description": "Retrieve information about EC2 Transit Gateways in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_transit_gateway_info_module.html#ansible-collections-amazon-aws-ec2-transit-gateway-info-module",
    "return_values": {
      "transit_gateways": {
        "description": "Transit gateways that match the provided filters. Each element consists of a dict with all the information related to that transit gateway.",
        "type": "list",
        "returned": "on success",
        "elements": "elements=dictionary",
        "suboptions": {
          "creation_time": {
            "description": "The creation time.",
            "type": "string",
            "returned": "always",
            "sample": "\"2019-02-05T16:19:58+00:00\""
          },
          "description": {
            "description": "The description of the transit gateway.",
            "type": "string",
            "returned": "always",
            "sample": "\"A transit gateway\""
          },
          "options": {
            "description": "A dictionary of the transit gateway options.",
            "type": "dictionary",
            "returned": "always",
            "suboptions": {
              "amazon_side_asn": {
                "description": "A private Autonomous System Number (ASN) for the Amazon ide of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs.",
                "type": "integer",
                "returned": "always",
                "sample": "64512"
              },
              "association_default_route_table_id": {
                "description": "The ID of the default association route table.",
                "type": "string",
                "returned": "when present",
                "sample": "\"tgw-rtb-0fd332c911223344\""
              },
              "auto_accept_shared_attachments": {
                "description": "Indicates whether attachment requests are automatically accepted.",
                "type": "string",
                "returned": "always",
                "sample": "\"enable\""
              },
              "default_route_table_association": {
                "description": "Indicates whether resource attachments are automatically associated with the default association route table.",
                "type": "string",
                "returned": "always",
                "sample": "\"disable\""
              },
              "default_route_table_propagation": {
                "description": "Indicates whether resource attachments automatically propagate routes to the default propagation route table.",
                "type": "string",
                "returned": "always",
                "sample": "\"disable\""
              },
              "dns_support": {
                "description": "Indicates whether DNS support is enabled.",
                "type": "string",
                "returned": "always",
                "sample": "\"enable\""
              },
              "multicast_support": {
                "description": "Indicates whether Multicast support is enabled.",
                "type": "string",
                "returned": "always",
                "sample": "\"enable\""
              },
              "propagation_default_route_table_id": {
                "description": "The ID of the default propagation route table.",
                "type": "string",
                "returned": "when present",
                "sample": "\"rtb-11223344\""
              },
              "vpn_ecmp_support": {
                "description": "Indicates whether Equal Cost Multipath Protocol support is enabled.",
                "type": "string",
                "returned": "always",
                "sample": "\"enable\""
              }
            }
          },
          "owner_id": {
            "description": "The AWS account number ID which owns the transit gateway.",
            "type": "string",
            "returned": "always",
            "sample": "\"123456789012\""
          },
          "state": {
            "description": "The state of the transit gateway.",
            "type": "string",
            "returned": "always",
            "sample": "\"available\""
          },
          "tags": {
            "description": "A dict of tags associated with the transit gateway.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"Env\": \"Dev\", \"Name\": \"A sample TGW\"}"
          },
          "transit_gateway_arn": {
            "description": "The Amazon Resource Name (ARN) of the transit gateway.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:ec2:us-west-2:123456789012:transit-gateway/tgw-02c42332e6b7da829\""
          },
          "transit_gateway_id": {
            "description": "The ID of the transit gateway.",
            "type": "string",
            "returned": "always",
            "sample": "\"tgw-02c42332e6b7da829\""
          }
        }
      }
    }
  },
  "ec2_transit_gateway_vpc_attachment": {
    "description": "Create and delete AWS Transit Gateway VPC attachments",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_transit_gateway_vpc_attachment_module.html#ansible-collections-amazon-aws-ec2-transit-gateway-vpc-attachment-module",
    "return_values": {
      "attachments": {
        "description": "The attributes of the Transit Gateway attachments.",
        "type": "list",
        "returned": "success",
        "elements": "elements=dictionary",
        "suboptions": {
          "creation_time": {
            "description": "An ISO 8601 date time stamp of when the attachment was created.",
            "type": "string",
            "returned": "success",
            "sample": "\"2022-03-10T16:40:26+00:00\""
          },
          "options": {
            "description": "Additional VPC attachment options.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "appliance_mode_support": {
                "description": "Indicates whether appliance mode support is enabled.",
                "type": "string",
                "returned": "success",
                "sample": "\"enable\""
              },
              "dns_support": {
                "description": "Indicates whether DNS support is enabled.",
                "type": "string",
                "returned": "success",
                "sample": "\"disable\""
              },
              "ipv6_support": {
                "description": "Indicates whether IPv6 support is disabled.",
                "type": "string",
                "returned": "success",
                "sample": "\"disable\""
              },
              "security_group_referencing_support": {
                "description": "Indicated weather security group referencing support is disabled.",
                "type": "string",
                "returned": "success",
                "sample": "\"enable\""
              }
            }
          },
          "state": {
            "description": "The state of the attachment.",
            "type": "string",
            "returned": "success",
            "sample": "\"deleting\""
          },
          "subnet_ids": {
            "description": "The IDs of the subnets in use by the attachment.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[\"subnet-0123456789abcdef0\", \"subnet-11111111111111111\"]"
          },
          "tags": {
            "description": "A dictionary representing the resource tags.",
            "type": "dictionary",
            "returned": "success"
          },
          "transit_gateway_attachment_id": {
            "description": "The ID of the attachment.",
            "type": "string",
            "returned": "success",
            "sample": "\"tgw-attach-0c0c5fd0b0f01d1c9\""
          },
          "transit_gateway_id": {
            "description": "The ID of the transit gateway that the attachment is connected to.",
            "type": "string",
            "returned": "success",
            "sample": "\"tgw-0123456789abcdef0\""
          },
          "vpc_id": {
            "description": "The ID of the VPC that the attachment is connected to.",
            "type": "string",
            "returned": "success",
            "sample": "\"vpc-0123456789abcdef0\""
          },
          "vpc_owner_id": {
            "description": "The ID of the account that the VPC belongs to.",
            "type": "string",
            "returned": "success",
            "sample": "\"1234567890122\""
          }
        }
      }
    }
  },
  "ec2_transit_gateway_vpc_attachment_info": {
    "description": "describes AWS Transit Gateway VPC attachments",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_transit_gateway_vpc_attachment_info_module.html#ansible-collections-amazon-aws-ec2-transit-gateway-vpc-attachment-info-module",
    "return_values": {
      "attachments": {
        "description": "The attributes of the Transit Gateway attachments.",
        "type": "list",
        "returned": "success",
        "elements": "elements=dictionary",
        "suboptions": {
          "creation_time": {
            "description": "An ISO 8601 date time stamp of when the attachment was created.",
            "type": "string",
            "returned": "success",
            "sample": "\"2022-03-10T16:40:26+00:00\""
          },
          "options": {
            "description": "Additional VPC attachment options.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "appliance_mode_support": {
                "description": "Indicates whether appliance mode support is enabled.",
                "type": "string",
                "returned": "success",
                "sample": "\"enable\""
              },
              "dns_support": {
                "description": "Indicates whether DNS support is enabled.",
                "type": "string",
                "returned": "success",
                "sample": "\"disable\""
              },
              "ipv6_support": {
                "description": "Indicates whether IPv6 support is disabled.",
                "type": "string",
                "returned": "success",
                "sample": "\"disable\""
              },
              "security_group_referencing_support": {
                "description": "Indicated weather security group referencing support is disabled.",
                "type": "string",
                "returned": "success",
                "sample": "\"enable\""
              }
            }
          },
          "state": {
            "description": "The state of the attachment.",
            "type": "string",
            "returned": "success",
            "sample": "\"deleting\""
          },
          "subnet_ids": {
            "description": "The IDs of the subnets in use by the attachment.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[\"subnet-0123456789abcdef0\", \"subnet-11111111111111111\"]"
          },
          "tags": {
            "description": "A dictionary representing the resource tags.",
            "type": "dictionary",
            "returned": "success"
          },
          "transit_gateway_attachment_id": {
            "description": "The ID of the attachment.",
            "type": "string",
            "returned": "success",
            "sample": "\"tgw-attach-0c0c5fd0b0f01d1c9\""
          },
          "transit_gateway_id": {
            "description": "The ID of the transit gateway that the attachment is connected to.",
            "type": "string",
            "returned": "success",
            "sample": "\"tgw-0123456789abcdef0\""
          },
          "vpc_id": {
            "description": "The ID of the VPC that the attachment is connected to.",
            "type": "string",
            "returned": "success",
            "sample": "\"vpc-0123456789abcdef0\""
          },
          "vpc_owner_id": {
            "description": "The ID of the account that the VPC belongs to.",
            "type": "string",
            "returned": "success",
            "sample": "\"123456789012\""
          }
        }
      }
    }
  },
  "ec2_vol": {
    "description": "Create and attach a volume, return volume ID and device map",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vol_module.html#ansible-collections-amazon-aws-ec2-vol-module",
    "return_values": {
      "device": {
        "description": "Device name of attached volume.",
        "type": "string",
        "returned": "when success",
        "sample": "\"/dev/sdf\""
      },
      "volume": {
        "description": "A dictionary containing detailed attributes of the volume.",
        "type": "dictionary",
        "returned": "when success",
        "suboptions": {
          "attachment_set": {
            "description": "Information about the volume attachments. This was changed in version 2.0.0 from a dictionary to a list of dictionaries.",
            "type": "list",
            "returned": "when success",
            "elements": "elements=dictionary",
            "sample": "[{\"attach_time\": \"2015-10-23T00:22:29.000Z\", \"deleteOnTermination\": \"false\", \"device\": \"/dev/sdf\", \"instance_id\": \"i-8356263c\", \"status\": \"attached\"}]"
          },
          "create_time": {
            "description": "The time stamp when volume creation was initiated.",
            "type": "string",
            "returned": "when success",
            "sample": "\"2015-10-21T14:36:08.870Z\""
          },
          "encrypted": {
            "description": "Indicates whether the volume is encrypted.",
            "type": "boolean",
            "returned": "when success",
            "sample": "false"
          },
          "id": {
            "description": "The ID of the volume.",
            "type": "string",
            "returned": "when success",
            "sample": "\"vol-35b333d9\""
          },
          "iops": {
            "description": "The number of I/O operations per second (IOPS) that the volume supports.",
            "type": "integer",
            "returned": "when success"
          },
          "size": {
            "description": "The size of the volume, in GiBs.",
            "type": "integer",
            "returned": "when success",
            "sample": "1"
          },
          "snapshot_id": {
            "description": "The snapshot from which the volume was created, if applicable.",
            "type": "string",
            "returned": "when success",
            "sample": "\"\""
          },
          "status": {
            "description": "The volume state.",
            "type": "string",
            "returned": "when success",
            "sample": "\"in-use\""
          },
          "tags": {
            "description": "Any tags assigned to the volume.",
            "type": "dictionary",
            "returned": "when success",
            "sample": "{\"env\": \"dev\"}"
          },
          "throughput": {
            "description": "The throughput that the volume supports, in MiB/s.",
            "type": "integer",
            "returned": "when success",
            "sample": "131"
          },
          "type": {
            "description": "The volume type. This can be gp2, io1, st1, sc1, or standard.",
            "type": "string",
            "returned": "when success",
            "sample": "\"standard\""
          },
          "zone": {
            "description": "The Availability Zone of the volume.",
            "type": "string",
            "returned": "when success",
            "sample": "\"us-east-1b\""
          }
        }
      },
      "volume_id": {
        "description": "The id of volume.",
        "type": "string",
        "returned": "when success",
        "sample": "\"vol-35b333d9\""
      },
      "volume_type": {
        "description": "The volume type.",
        "type": "string",
        "returned": "when success",
        "sample": "\"standard\""
      }
    }
  },
  "ec2_vol_info": {
    "description": "Gather information about EC2 volumes in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vol_info_module.html#ansible-collections-amazon-aws-ec2-vol-info-module",
    "return_values": {
      "volumes": {
        "description": "Volumes that match the provided filters. Each element consists of a dict with all the information related to that volume.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "attachment_set": {
            "description": "Information about the volume attachments. This was changed in version 2.0.0 from a dictionary to a list of dictionaries.",
            "type": "list",
            "returned": "success",
            "elements": "elements=dictionary",
            "sample": "[{\"attach_time\": \"2015-10-23T00:22:29.000Z\", \"deleteOnTermination\": \"false\", \"device\": \"/dev/sdf\", \"instance_id\": \"i-8356263c\", \"status\": \"attached\"}]"
          },
          "create_time": {
            "description": "The time stamp when volume creation was initiated.",
            "type": "string",
            "returned": "success",
            "sample": "\"2015-10-21T14:36:08.870Z\""
          },
          "encrypted": {
            "description": "Indicates whether the volume is encrypted.",
            "type": "boolean",
            "returned": "success",
            "sample": "false"
          },
          "id": {
            "description": "The ID of the volume.",
            "type": "string",
            "returned": "success",
            "sample": "\"vol-35b333d9\""
          },
          "iops": {
            "description": "The number of I/O operations per second (IOPS) that the volume supports.",
            "type": "integer",
            "returned": "success"
          },
          "size": {
            "description": "The size of the volume, in GiBs.",
            "type": "integer",
            "returned": "success",
            "sample": "1"
          },
          "snapshot_id": {
            "description": "The snapshot from which the volume was created, if applicable.",
            "type": "string",
            "returned": "success",
            "sample": "\"\""
          },
          "status": {
            "description": "The volume state.",
            "type": "string",
            "returned": "success",
            "sample": "\"in-use\""
          },
          "tags": {
            "description": "Any tags assigned to the volume.",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"env\": \"dev\"}"
          },
          "throughput": {
            "description": "The throughput that the volume supports, in MiB/s.",
            "type": "integer",
            "returned": "success",
            "sample": "131"
          },
          "type": {
            "description": "The volume type. This can be gp2, io1, st1, sc1, or standard.",
            "type": "string",
            "returned": "success",
            "sample": "\"standard\""
          },
          "zone": {
            "description": "The Availability Zone of the volume.",
            "type": "string",
            "returned": "success",
            "sample": "\"us-east-1b\""
          }
        }
      }
    }
  },
  "ec2_vpc_dhcp_option": {
    "description": "Manages DHCP Options, and can ensure the DHCP options for the given VPC match what\u2019s requested",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_dhcp_option_module.html#ansible-collections-amazon-aws-ec2-vpc-dhcp-option-module",
    "return_values": {
      "changed": {
        "description": "Whether the dhcp options were changed",
        "type": "boolean",
        "returned": "always"
      },
      "dhcp_config": {
        "description": "The boto2-style DHCP options created, associated or found",
        "type": "dictionary",
        "returned": "when available",
        "suboptions": {
          "domain-name": {
            "description": "The domain name for hosts in the DHCP option sets",
            "type": "list",
            "returned": "when available",
            "elements": "elements=string",
            "sample": "[\"my.example.com\"]"
          },
          "domain-name-servers": {
            "description": "The IP addresses of up to four domain name servers, or AmazonProvidedDNS.",
            "type": "list",
            "returned": "when available",
            "elements": "elements=string",
            "sample": "[\"10.0.0.1\", \"10.0.1.1\"]"
          },
          "netbios-name-servers": {
            "description": "The IP addresses of up to four NetBIOS name servers.",
            "type": "list",
            "returned": "when available",
            "elements": "elements=string",
            "sample": "[\"10.0.0.1\", \"10.0.1.1\"]"
          },
          "netbios-node-type": {
            "description": "The NetBIOS node type (1, 2, 4, or 8).",
            "type": "string",
            "returned": "when available",
            "sample": "\"2\""
          },
          "ntp-servers": {
            "description": "The IP addresses of up to four Network Time Protocol (NTP) servers.",
            "type": "list",
            "returned": "when available",
            "elements": "elements=string",
            "sample": "[\"10.0.0.1\", \"10.0.1.1\"]"
          }
        }
      },
      "dhcp_options": {
        "description": "The DHCP options created, associated or found",
        "type": "dictionary",
        "returned": "when available",
        "suboptions": {
          "dhcp_configurations": {
            "description": "The DHCP configuration for the option set",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[\"{\\\"key\\\": \\\"ntp-servers\\\", \\\"values\\\": [{\\\"value\\\": \\\"10.0.0.2\\\" , \\\"value\\\": \\\"10.0.1.2\\\"}]}\", \"{\\\"key\\\": \\\"netbios-name-servers\\\", \\\"values\\\": [{value\\\": \\\"10.0.0.1\\\"}, {\\\"value\\\": \\\"10.0.1.1\\\" }]}\"]"
          },
          "dhcp_options_id": {
            "description": "The aws resource id of the primary DCHP options set created or found",
            "type": "string",
            "returned": "success",
            "sample": "\"dopt-0955331de6a20dd07\""
          },
          "owner_id": {
            "description": "The ID of the AWS account that owns the DHCP options set.",
            "type": "string",
            "returned": "success",
            "sample": "\"012345678912\""
          },
          "tags": {
            "description": "The tags to be applied to a DHCP options set",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[\"{\\\"Key\\\": \\\"CreatedBy\\\", \\\"Value\\\": \\\"ansible-test\\\"}\", \"{\\\"Key\\\": \\\"Collection\\\", \\\"Value\\\": \\\"amazon.aws\\\"}\"]"
          }
        }
      },
      "dhcp_options_id": {
        "description": "The aws resource id of the primary DCHP options set created, found or removed",
        "type": "string",
        "returned": "when available"
      }
    }
  },
  "ec2_vpc_dhcp_option_info": {
    "description": "Gather information about DHCP options sets in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_dhcp_option_info_module.html#ansible-collections-amazon-aws-ec2-vpc-dhcp-option-info-module",
    "return_values": {
      "changed": {
        "description": "True if listing the dhcp options succeeds.",
        "type": "boolean",
        "returned": "always"
      },
      "dhcp_config": {
        "description": "The boto2-style DHCP options created, associated or found. Provided for consistency with ec2_vpc_dhcp_option\u2019s dhcp_config.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "domain-name": {
            "description": "The domain name for hosts in the DHCP option sets.",
            "type": "list",
            "returned": "when available",
            "elements": "elements=string",
            "sample": "[\"my.example.com\"]"
          },
          "domain-name-servers": {
            "description": "The IP addresses of up to four domain name servers, or AmazonProvidedDNS.",
            "type": "list",
            "returned": "when available",
            "elements": "elements=string",
            "sample": "[\"10.0.0.1\", \"10.0.1.1\"]"
          },
          "netbios-name-servers": {
            "description": "The IP addresses of up to four NetBIOS name servers.",
            "type": "list",
            "returned": "when available",
            "elements": "elements=string",
            "sample": "[\"10.0.0.1\", \"10.0.1.1\"]"
          },
          "netbios-node-type": {
            "description": "The NetBIOS node type (1, 2, 4, or 8).",
            "type": "string",
            "returned": "when available",
            "sample": "\"2\""
          },
          "ntp-servers": {
            "description": "The IP addresses of up to four Network Time Protocol (NTP) servers.",
            "type": "list",
            "returned": "when available",
            "elements": "elements=string",
            "sample": "[\"10.0.0.1\", \"10.0.1.1\"]"
          }
        }
      },
      "dhcp_options": {
        "description": "The DHCP options created, associated or found.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "dhcp_configurations": {
            "description": "The DHCP configuration for the option set.",
            "type": "list",
            "returned": "success",
            "elements": "elements=dictionary",
            "sample": "[{\"key\": \"ntp-servers\", \"values\": [{\"value\": \"10.0.1.2\"}]}, \"{\\\"key\\\": \\\"netbios-name-servers\\\", \\\"values\\\": [{value\\\": \\\"10.0.0.1\\\"}, {\\\"value\\\": \\\"10.0.1.1\\\" }]}\"]",
            "suboptions": {
              "key": {
                "description": "The name of a DHCP option.",
                "type": "string",
                "returned": "always"
              },
              "values": {
                "description": "List of values for the DHCP option.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "value": {
                    "description": "The attribute value. This value is case-sensitive.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              }
            }
          },
          "dhcp_options_id": {
            "description": "The aws resource id of the primary DHCP options set created or found.",
            "type": "string",
            "returned": "success",
            "sample": "\"dopt-0955331de6a20dd07\""
          },
          "owner_id": {
            "description": "The ID of the AWS account that owns the DHCP options set.",
            "type": "string",
            "returned": "success",
            "sample": "\"012345678912\""
          },
          "tags": {
            "description": "The tags to be applied to a DHCP options set.",
            "type": "list",
            "returned": "success",
            "elements": "elements=dictionary",
            "sample": "[{\"Key\": \"CreatedBy\", \"Value\": \"ansible-test\"}, {\"Key\": \"Collection\", \"Value\": \"amazon.aws\"}]"
          }
        }
      }
    }
  },
  "ec2_vpc_egress_igw": {
    "description": "Manage an AWS VPC Egress Only Internet gateway",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_egress_igw_module.html#ansible-collections-amazon-aws-ec2-vpc-egress-igw-module",
    "return_values": {
      "gateway_id": {
        "description": "The ID of the Egress Only Internet Gateway or Null.",
        "type": "string",
        "returned": "always",
        "sample": "\"eigw-0e00cf111ba5bc11e\""
      },
      "tags": {
        "description": "Any tags assigned to the internet gateway.",
        "type": "dictionary",
        "returned": "always"
      },
      "vpc_id": {
        "description": "The ID of the VPC to attach or detach gateway from.",
        "type": "string",
        "returned": "always",
        "sample": "\"vpc-012345678\""
      }
    }
  },
  "ec2_vpc_egress_igw_info": {
    "description": "Gather information about AWS VPC Egress Only Internet gateway",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_egress_igw_info_module.html#ansible-collections-amazon-aws-ec2-vpc-egress-igw-info-module",
    "return_values": {
      "egress_only_internet_gateways": {
        "description": "The AWS Egress only internet gateways.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "suboptions": {
          "attachments": {
            "description": "Information about the attachment of the egress-only internet gateway.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "suboptions": {
              "state": {
                "description": "The current state of the attachment.",
                "type": "string",
                "returned": "always",
                "sample": "\"available\""
              },
              "vpc_id": {
                "description": "The ID of the VPC.",
                "type": "string",
                "returned": "always",
                "sample": "\"vpc-02123b67\""
              }
            }
          },
          "egress_only_internet_gateway_id": {
            "description": "The ID of the egress-only internet gateway.",
            "type": "string",
            "returned": "always",
            "sample": "\"eigw-0123456789abcdef\""
          },
          "tags": {
            "description": "Any tags assigned to the egress-only internet gateway.",
            "type": "dictionary",
            "returned": "always"
          }
        }
      }
    }
  },
  "ec2_vpc_endpoint": {
    "description": "Create and delete AWS VPC endpoints",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_endpoint_module.html#ansible-collections-amazon-aws-ec2-vpc-endpoint-module",
    "return_values": {
      "endpoints": {
        "description": "The resulting endpoints from the module call.",
        "type": "list",
        "returned": "success",
        "elements": "elements=dictionary",
        "suboptions": {
          "creation_timestamp": {
            "description": "The date and time that the endpoint was created.",
            "type": "string",
            "returned": "always"
          },
          "dns_entries": {
            "description": "List of DNS entires for the endpoint.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "dns_name": {
                "description": "The DNS name.",
                "type": "string",
                "returned": "always"
              },
              "hosted_zone_id": {
                "description": "The ID of the private hosted zone.",
                "type": "string",
                "returned": "success"
              }
            }
          },
          "groups": {
            "description": "List of security groups associated with the network interface.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "group_id": {
                "description": "The ID of the security group.",
                "type": "string",
                "returned": "always"
              },
              "group_name": {
                "description": "The name of the security group.",
                "type": "string",
                "returned": "always"
              }
            }
          },
          "ip_address_type": {
            "description": "The IP address type for the endpoint.",
            "type": "string",
            "returned": "success"
          },
          "network_interface_ids": {
            "description": "List of network interfaces for the endpoint.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string"
          },
          "owner_id": {
            "description": "The ID of the AWS account that owns the endpoint.",
            "type": "string",
            "returned": "always"
          },
          "policy_document": {
            "description": "The policy document associated with the endpoint.",
            "type": "string",
            "returned": "always"
          },
          "private_dns_enabled": {
            "description": "Indicates whether the VPC is associated with a private hosted zone.",
            "type": "boolean",
            "returned": "always"
          },
          "requester_managed": {
            "description": "Indicated whether the endpoint is being managed by its service.",
            "type": "boolean",
            "returned": "always"
          },
          "route_table_ids": {
            "description": "List of route table IDs associated with the endpoint.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string"
          },
          "service_name": {
            "description": "The name of the service to which the endpoint is associated.",
            "type": "string",
            "returned": "always"
          },
          "state": {
            "description": "The state of the endpoint.",
            "type": "string",
            "returned": "always"
          },
          "subnet_ids": {
            "description": "List of subnets associated with the endpoint.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string"
          },
          "tags": {
            "description": "List of tags associated with the endpoint.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary"
          },
          "vpc_endpoint_id": {
            "description": "The ID of the endpoint.",
            "type": "string",
            "returned": "always"
          },
          "vpc_endpoint_type": {
            "description": "The type of endpoint.",
            "type": "string",
            "returned": "always"
          },
          "vpc_id": {
            "description": "The ID of the VPC.",
            "type": "string",
            "returned": "always"
          }
        }
      }
    }
  },
  "ec2_vpc_endpoint_info": {
    "description": "Retrieves AWS VPC endpoints details using AWS methods",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_endpoint_info_module.html#ansible-collections-amazon-aws-ec2-vpc-endpoint-info-module",
    "return_values": {
      "vpc_endpoints": {
        "description": "A list of matching endpoints.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "sample": "{\"vpc_endpoints\": [{\"creation_timestamp\": \"2017-02-16T11:06:48+00:00\", \"policy_document\": \"\\\"{\\\\\\\"Version\\\\\\\":\\\\\\\"2012-10-17\\\\\\\",\\\\\\\"Id\\\\\\\":\\\\\\\"Policy1450910922815\\\\\\\", \\\\\\\"Statement\\\\\\\":[{\\\\\\\"Sid\\\\\\\":\\\\\\\"Stmt1450910920641\\\\\\\",\\\\\\\"Effect\\\\\\\":\\\\\\\"Allow\\\\\\\", \\\\\\\"Principal\\\\\\\":\\\\\\\"*\\\\\\\",\\\\\\\"Action\\\\\\\":\\\\\\\"s3:*\\\\\\\",\\\\\\\"Resource\\\\\\\":[\\\\\\\"arn:aws:s3:::*/*\\\\\\\",\\\\\\\"arn:aws:s3:::*\\\\\\\"]}]}\\\"\\n\", \"route_table_ids\": [\"rtb-abcd1234\"], \"service_name\": \"com.amazonaws.ap-southeast-2.s3\", \"state\": \"available\", \"vpc_endpoint_id\": \"vpce-abbad0d0\", \"vpc_id\": \"vpc-1111ffff\"}]}",
        "suboptions": {
          "creation_timestamp": {
            "description": "The date and time that the endpoint was created.",
            "type": "string",
            "returned": "always"
          },
          "dns_entries": {
            "description": "List of DNS entires for the endpoint.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "dns_name": {
                "description": "The DNS name.",
                "type": "string",
                "returned": "always"
              },
              "hosted_zone_id": {
                "description": "The ID of the private hosted zone.",
                "type": "string",
                "returned": "success"
              }
            }
          },
          "groups": {
            "description": "List of security groups associated with the network interface.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "group_id": {
                "description": "The ID of the security group.",
                "type": "string",
                "returned": "always"
              },
              "group_name": {
                "description": "The name of the security group.",
                "type": "string",
                "returned": "always"
              }
            }
          },
          "ip_address_type": {
            "description": "The IP address type for the endpoint.",
            "type": "string",
            "returned": "success"
          },
          "network_interface_ids": {
            "description": "List of network interfaces for the endpoint.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string"
          },
          "owner_id": {
            "description": "The ID of the AWS account that owns the endpoint.",
            "type": "string",
            "returned": "always"
          },
          "policy_document": {
            "description": "The policy document associated with the endpoint.",
            "type": "string",
            "returned": "always"
          },
          "private_dns_enabled": {
            "description": "Indicates whether the VPC is associated with a private hosted zone.",
            "type": "boolean",
            "returned": "always"
          },
          "requester_managed": {
            "description": "Indicated whether the endpoint is being managed by its service.",
            "type": "boolean",
            "returned": "always"
          },
          "route_table_ids": {
            "description": "List of route table IDs associated with the endpoint.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string"
          },
          "service_name": {
            "description": "The name of the service to which the endpoint is associated.",
            "type": "string",
            "returned": "always"
          },
          "state": {
            "description": "The state of the endpoint.",
            "type": "string",
            "returned": "always"
          },
          "subnet_ids": {
            "description": "List of subnets associated with the endpoint.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string"
          },
          "tags": {
            "description": "List of tags associated with the endpoint.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary"
          },
          "vpc_endpoint_id": {
            "description": "The ID of the endpoint.",
            "type": "string",
            "returned": "always"
          },
          "vpc_endpoint_type": {
            "description": "The type of endpoint.",
            "type": "string",
            "returned": "always"
          },
          "vpc_id": {
            "description": "The ID of the VPC.",
            "type": "string",
            "returned": "always"
          }
        }
      }
    }
  },
  "ec2_vpc_endpoint_service_info": {
    "description": "Retrieves AWS VPC endpoint service details",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_endpoint_service_info_module.html#ansible-collections-amazon-aws-ec2-vpc-endpoint-service-info-module",
    "return_values": {
      "service_details": {
        "description": "Detailed information about the AWS VPC endpoint services.",
        "type": "complex",
        "returned": "success",
        "suboptions": {
          "acceptance_required": {
            "description": "Whether VPC endpoint connection requests to the service must be accepted by the service owner.",
            "type": "boolean",
            "returned": "success"
          },
          "availability_zones": {
            "description": "The Availability Zones in which the service is available.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string"
          },
          "base_endpoint_dns_names": {
            "description": "The DNS names for the service.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string"
          },
          "manages_vpc_endpoints": {
            "description": "Whether the service manages its VPC endpoints.",
            "type": "boolean",
            "returned": "success"
          },
          "owner": {
            "description": "The AWS account ID of the service owner.",
            "type": "string",
            "returned": "success"
          },
          "private_dns_name": {
            "description": "The private DNS name for the service.",
            "type": "string",
            "returned": "success"
          },
          "private_dns_name_verification_state": {
            "description": "The verification state of the VPC endpoint service. Consumers of an endpoint service cannot use the private name when the state is not verified.",
            "type": "string",
            "returned": "success"
          },
          "private_dns_names": {
            "description": "The private DNS names assigned to the VPC endpoint service.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string"
          },
          "service_id": {
            "description": "The ID of the endpoint service.",
            "type": "string",
            "returned": "success"
          },
          "service_name": {
            "description": "The ARN of the endpoint service.",
            "type": "string",
            "returned": "success"
          },
          "service_type": {
            "description": "The type of the service",
            "type": "list",
            "returned": "success",
            "elements": "elements=string"
          },
          "supported_ip_address_types": {
            "description": "The supported IP address types.",
            "type": "string",
            "returned": "success"
          },
          "tags": {
            "description": "A dict of tags associated with the service",
            "type": "dictionary",
            "returned": "success"
          },
          "vpc_endpoint_policy_supported": {
            "description": "Whether the service supports endpoint policies.",
            "type": "boolean",
            "returned": "success"
          }
        }
      },
      "service_names": {
        "description": "List of supported AWS VPC endpoint service names.",
        "type": "list",
        "returned": "success",
        "elements": "elements=string",
        "sample": "{\"service_names\": [\"com.amazonaws.ap-southeast-2.s3\"]}"
      }
    }
  },
  "ec2_vpc_igw": {
    "description": "Manage an AWS VPC Internet gateway",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_igw_module.html#ansible-collections-amazon-aws-ec2-vpc-igw-module",
    "return_values": {
      "changed": {
        "description": "If any changes have been made to the Internet Gateway.",
        "type": "boolean",
        "returned": "always",
        "sample": "{\"changed\": false}"
      },
      "gateway_id": {
        "description": "The unique identifier for the Internet Gateway.",
        "type": "string",
        "returned": "state=present",
        "sample": "\"{'gateway_id': 'igw-XXXXXXXX'}\""
      },
      "tags": {
        "description": "The tags associated the Internet Gateway.",
        "type": "dictionary",
        "returned": "state=present",
        "sample": "{\"tags\": {\"Ansible\": \"Test\"}}"
      },
      "vpc_id": {
        "description": "The VPC ID associated with the Internet Gateway.",
        "type": "string",
        "returned": "state=present",
        "sample": "\"{'vpc_id': 'vpc-XXXXXXXX'}\""
      }
    }
  },
  "ec2_vpc_igw_info": {
    "description": "Gather information about internet gateways in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_igw_info_module.html#ansible-collections-amazon-aws-ec2-vpc-igw-info-module",
    "return_values": {
      "changed": {
        "description": "True if listing the internet gateways succeeds.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "internet_gateways": {
        "description": "The internet gateways for the account.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "attachments": {
            "description": "Any VPCs attached to the internet gateway.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "state": {
                "description": "The current state of the attachment.",
                "type": "string",
                "returned": "always",
                "sample": "\"available\""
              },
              "vpc_id": {
                "description": "The ID of the VPC.",
                "type": "string",
                "returned": "always",
                "sample": "\"vpc-02123b67\""
              }
            }
          },
          "internet_gateway_id": {
            "description": "The ID of the internet gateway.",
            "type": "string",
            "returned": "always",
            "sample": "\"igw-2123634d\""
          },
          "tags": {
            "description": "Any tags assigned to the internet gateway.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"tags\": {\"Ansible\": \"Test\"}}"
          }
        }
      }
    }
  },
  "ec2_vpc_nacl": {
    "description": "create and delete Network ACLs",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_nacl_module.html#ansible-collections-amazon-aws-ec2-vpc-nacl-module",
    "return_values": {
      "nacl_id": {
        "description": "The id of the NACL (when creating or updating an ACL).",
        "type": "string",
        "returned": "success",
        "sample": "\"acl-123456789abcdef01\""
      }
    }
  },
  "ec2_vpc_nacl_info": {
    "description": "Gather information about Network ACLs in an AWS VPC",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_nacl_info_module.html#ansible-collections-amazon-aws-ec2-vpc-nacl-info-module",
    "return_values": {
      "nacls": {
        "description": "Returns an array of complex objects as described below.",
        "type": "complex",
        "returned": "success",
        "suboptions": {
          "egress": {
            "description": "A list of NACL egress rules. The rule format is [rule no, protocol, allow/deny, v4 or v6 cidr, icmp_type, icmp_code, port from, port to].",
            "type": "list",
            "returned": "always",
            "elements": "elements=list",
            "sample": "[[100, \"all\", \"allow\", \"0.0.0.0/0\", null, null, null, null]]"
          },
          "ingress": {
            "description": "A list of NACL ingress rules. The rule format is [rule no, protocol, allow/deny, v4 or v6 cidr, icmp_type, icmp_code, port from, port to].",
            "type": "list",
            "returned": "always",
            "elements": "elements=list",
            "sample": "[[100, \"tcp\", \"allow\", \"0.0.0.0/0\", null, null, 22, 22]]"
          },
          "is_default": {
            "description": "True if the NACL is the default for its VPC.",
            "type": "boolean",
            "returned": "always"
          },
          "nacl_id": {
            "description": "The ID of the Network Access Control List.",
            "type": "string",
            "returned": "always"
          },
          "subnets": {
            "description": "A list of subnet IDs that are associated with the NACL.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string"
          },
          "tags": {
            "description": "A dict of tags associated with the NACL.",
            "type": "dictionary",
            "returned": "always"
          },
          "vpc_id": {
            "description": "The ID of the VPC that the NACL is attached to.",
            "type": "string",
            "returned": "always"
          }
        }
      }
    }
  },
  "ec2_vpc_nat_gateway": {
    "description": "Manage AWS VPC NAT Gateways",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_nat_gateway_module.html#ansible-collections-amazon-aws-ec2-vpc-nat-gateway-module",
    "return_values": {
      "connectivity_type": {
        "description": "Indicates whether the NAT gateway supports public or private connectivity.",
        "type": "string",
        "returned": "always",
        "sample": "\"public\""
      },
      "create_time": {
        "description": "The ISO 8601 date time format in UTC.",
        "type": "string",
        "returned": "always",
        "sample": "\"2016-03-05T05:19:20.282000+00:00'\""
      },
      "nat_gateway_addresses": {
        "description": "List of dictionaries containing the public_ip, network_interface_id, private_ip, and allocation_id.",
        "type": "complex",
        "returned": "always",
        "sample": "[{\"allocation_id\": \"eipalloc-08ec128d03629671d\", \"association_id\": \"eipassoc-0d6365c7eeb7d4932\", \"is_primary\": true, \"network_interface_id\": \"eni-095104e630881bad6\", \"private_ip\": \"10.1.0.250\", \"public_ip\": \"34.202.90.172\", \"status\": \"succeeded\"}]",
        "suboptions": {
          "allocation_id": {
            "description": "The allocation ID of the Elastic IP address that\u2019s associated with the NAT gateway.",
            "type": "string",
            "returned": "always",
            "sample": "\"eipalloc-0853e66a40803da76\""
          },
          "association_id": {
            "description": "The association ID of the Elastic IP address that is associated with the NAT gateway.",
            "type": "string",
            "returned": "always",
            "sample": "\"eipassoc-0d6365c7eeb7d4932\""
          },
          "is_primary": {
            "description": "Defines if the IP address is the primary address.",
            "type": "boolean",
            "returned": "always",
            "sample": "true"
          },
          "network_interface_id": {
            "description": "The ID of the network interface associated with the NAT gateway.",
            "type": "string",
            "returned": "always",
            "sample": "\"eni-0a37acdbe306c661c\""
          },
          "private_ip": {
            "description": "The private IP address associated with the Elastic IP address.",
            "type": "string",
            "returned": "always",
            "sample": "\"10.0.238.227\""
          },
          "public_ip": {
            "description": "The Elastic IP address associated with the NAT gateway.",
            "type": "string",
            "returned": "always",
            "sample": "\"34.204.123.52\""
          },
          "status": {
            "description": "The address status.",
            "type": "string",
            "returned": "always",
            "sample": "\"succeeded\""
          }
        }
      },
      "nat_gateway_id": {
        "description": "Id of the VPC NAT Gateway.",
        "type": "string",
        "returned": "always",
        "sample": "\"nat-0d1e3a878585988f8\""
      },
      "state": {
        "description": "The current state of the NAT Gateway.",
        "type": "string",
        "returned": "always",
        "sample": "\"available\""
      },
      "subnet_id": {
        "description": "Id of the Subnet.",
        "type": "string",
        "returned": "always",
        "sample": "\"subnet-12345\""
      },
      "tags": {
        "description": "The tags associated the VPC NAT Gateway.",
        "type": "dictionary",
        "returned": "When tags are present.",
        "sample": "{\"tags\": {\"Ansible\": \"Test\"}}"
      },
      "vpc_id": {
        "description": "Id of the VPC.",
        "type": "string",
        "returned": "always",
        "sample": "\"vpc-12345\""
      }
    }
  },
  "ec2_vpc_nat_gateway_info": {
    "description": "Retrieves AWS VPC Managed Nat Gateway details using AWS methods",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_nat_gateway_info_module.html#ansible-collections-amazon-aws-ec2-vpc-nat-gateway-info-module",
    "return_values": {
      "changed": {
        "description": "True if listing the internet gateways succeeds.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "result": {
        "description": "The result of the describe, converted to ansible snake case style. See also http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Client.describe_nat_gateways.",
        "type": "list",
        "returned": "suceess",
        "elements": "elements=string",
        "suboptions": {
          "connectivity_type": {
            "description": "Indicates whether the NAT gateway supports public or private connectivity.",
            "type": "string",
            "returned": "always",
            "sample": "\"public\""
          },
          "create_time": {
            "description": "The date and time the NAT gateway was created.",
            "type": "string",
            "returned": "always",
            "sample": "\"2021-03-11T22:43:25+00:00\""
          },
          "delete_time": {
            "description": "The date and time the NAT gateway was deleted.",
            "type": "string",
            "returned": "when the NAT gateway has been deleted",
            "sample": "\"2021-03-11T22:43:25+00:00\""
          },
          "nat_gateway_addresses": {
            "description": "List containing a dictionary with the IP addresses and network interface associated with the NAT gateway.",
            "type": "dictionary",
            "returned": "always",
            "suboptions": {
              "allocation_id": {
                "description": "The allocation ID of the Elastic IP address that\u2019s associated with the NAT gateway.",
                "type": "string",
                "returned": "always",
                "sample": "\"eipalloc-0853e66a40803da76\""
              },
              "association_id": {
                "description": "The association ID of the Elastic IP address that is associated with the NAT gateway.",
                "type": "string",
                "returned": "always",
                "sample": "\"eipassoc-0d6365c7eeb7d4932\""
              },
              "is_primary": {
                "description": "Defines if the IP address is the primary address.",
                "type": "boolean",
                "returned": "always",
                "sample": "true"
              },
              "network_interface_id": {
                "description": "The ID of the network interface associated with the NAT gateway.",
                "type": "string",
                "returned": "always",
                "sample": "\"eni-0a37acdbe306c661c\""
              },
              "private_ip": {
                "description": "The private IP address associated with the Elastic IP address.",
                "type": "string",
                "returned": "always",
                "sample": "\"10.0.238.227\""
              },
              "public_ip": {
                "description": "The Elastic IP address associated with the NAT gateway.",
                "type": "string",
                "returned": "always",
                "sample": "\"34.204.123.52\""
              },
              "status": {
                "description": "The address status.",
                "type": "string",
                "returned": "always",
                "sample": "\"succeeded\""
              }
            }
          },
          "nat_gateway_id": {
            "description": "The ID of the NAT gateway.",
            "type": "string",
            "returned": "always",
            "sample": "\"nat-0c242a2397acf6173\""
          },
          "state": {
            "description": "state of the NAT gateway.",
            "type": "string",
            "returned": "always",
            "sample": "\"available\""
          },
          "subnet_id": {
            "description": "The ID of the subnet in which the NAT gateway is located.",
            "type": "string",
            "returned": "always",
            "sample": "\"subnet-098c447465d4344f9\""
          },
          "tags": {
            "description": "Tags applied to the NAT gateway.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"Tag1\": \"tag1\", \"Tag_2\": \"tag_2\"}"
          },
          "vpc_id": {
            "description": "The ID of the VPC in which the NAT gateway is located.",
            "type": "string",
            "returned": "always",
            "sample": "\"vpc-02f37f48438ab7d4c\""
          }
        }
      }
    }
  },
  "ec2_vpc_net": {
    "description": "Configure AWS Virtual Private Clouds",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_net_module.html#ansible-collections-amazon-aws-ec2-vpc-net-module",
    "return_values": {
      "vpc": {
        "description": "Info about the VPC that was created or deleted.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "cidr_block": {
            "description": "The CIDR of the VPC.",
            "type": "string",
            "returned": "always",
            "sample": "\"10.0.0.0/16\""
          },
          "cidr_block_association_set": {
            "description": "IPv4 CIDR blocks associated with the VPC.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "{\"cidr_block_association_set\": [{\"association_id\": \"vpc-cidr-assoc-97aeeefd\", \"cidr_block\": \"10.0.0.0/24\", \"cidr_block_state\": {\"state\": \"associated\"}}]}"
          },
          "dhcp_options_id": {
            "description": "The id of the DHCP options associated with this VPC.",
            "type": "string",
            "returned": "always",
            "sample": "\"dopt-12345678\""
          },
          "id": {
            "description": "VPC resource id.",
            "type": "string",
            "returned": "always",
            "sample": "\"vpc-12345678\""
          },
          "instance_tenancy": {
            "description": "Indicates whether VPC uses default or dedicated tenancy.",
            "type": "string",
            "returned": "always",
            "sample": "\"default\""
          },
          "ipv6_cidr_block_association_set": {
            "description": "IPv6 CIDR blocks associated with the VPC.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "{\"ipv6_cidr_block_association_set\": [{\"association_id\": \"vpc-cidr-assoc-97aeeefd\", \"ipv6_cidr_block\": \"2001:db8::/56\", \"ipv6_cidr_block_state\": {\"state\": \"associated\"}}]}"
          },
          "is_default": {
            "description": "Indicates whether this is the default VPC.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "name": {
            "description": "The Name tag of the VPC.",
            "type": "string",
            "returned": "When the Name tag has been set on the VPC",
            "sample": "\"MyVPC\""
          },
          "owner_id": {
            "description": "The AWS account which owns the VPC.",
            "type": "string",
            "returned": "always",
            "sample": "\"123456789012\""
          },
          "state": {
            "description": "State of the VPC.",
            "type": "string",
            "returned": "always",
            "sample": "\"available\""
          },
          "tags": {
            "description": "Tags attached to the VPC, includes name.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "Name": {
                "description": "Name tag for the VPC.",
                "type": "string",
                "returned": "always",
                "sample": "\"pk_vpc4\""
              }
            }
          }
        }
      }
    }
  },
  "ec2_vpc_net_info": {
    "description": "Gather information about EC2 VPCs in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_net_info_module.html#ansible-collections-amazon-aws-ec2-vpc-net-info-module",
    "return_values": {
      "vpcs": {
        "description": "Returns an array of complex objects as described below.",
        "type": "complex",
        "returned": "success",
        "suboptions": {
          "cidr_block": {
            "description": "The IPv4 CIDR block assigned to the VPC.",
            "type": "string",
            "returned": "always"
          },
          "cidr_block_association_set": {
            "description": "An array of IPv4 cidr block association set information.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "association_id": {
                "description": "The association ID.",
                "type": "string",
                "returned": "always"
              },
              "cidr_block": {
                "description": "The IPv4 CIDR block that is associated with the VPC.",
                "type": "string",
                "returned": "always"
              },
              "cidr_block_state": {
                "description": "A hash/dict that contains a single item. The state of the cidr block association.",
                "type": "dictionary",
                "returned": "always",
                "suboptions": {
                  "state": {
                    "description": "The CIDR block association state.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              }
            }
          },
          "dhcp_options_id": {
            "description": "The ID of the DHCP options associated with this VPC.",
            "type": "string",
            "returned": "always",
            "sample": "\"dopt-12345678\""
          },
          "enable_dns_hostnames": {
            "description": "True/False depending on attribute setting for DNS hostnames support.",
            "type": "boolean",
            "returned": "always"
          },
          "enable_dns_support": {
            "description": "True/False depending on attribute setting for DNS support.",
            "type": "boolean",
            "returned": "always"
          },
          "id": {
            "description": "The ID of the VPC (for backwards compatibility).",
            "type": "string",
            "returned": "always"
          },
          "instance_tenancy": {
            "description": "The instance tenancy setting for the VPC.",
            "type": "string",
            "returned": "always"
          },
          "ipv6_cidr_block_association_set": {
            "description": "An array of IPv6 cidr block association set information.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "association_id": {
                "description": "The association ID.",
                "type": "string",
                "returned": "always"
              },
              "ipv6_cidr_block": {
                "description": "The IPv6 CIDR block that is associated with the VPC.",
                "type": "string",
                "returned": "always"
              },
              "ipv6_cidr_block_state": {
                "description": "A hash/dict that contains a single item. The state of the cidr block association.",
                "type": "dictionary",
                "returned": "always",
                "suboptions": {
                  "state": {
                    "description": "The CIDR block association state.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              }
            }
          },
          "is_default": {
            "description": "True if this is the default VPC for account.",
            "type": "boolean",
            "returned": "always"
          },
          "owner_id": {
            "description": "The AWS account which owns the VPC.",
            "type": "string",
            "returned": "always",
            "sample": "\"123456789012\""
          },
          "state": {
            "description": "The state of the VPC.",
            "type": "string",
            "returned": "always"
          },
          "tags": {
            "description": "A dict of tags associated with the VPC.",
            "type": "dictionary",
            "returned": "always"
          },
          "vpc_id": {
            "description": "The ID of the VPC.",
            "type": "string",
            "returned": "always"
          }
        }
      }
    }
  },
  "ec2_vpc_peering": {
    "description": "create, delete, accept, and reject VPC peering connections between two VPCs.",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_peering_module.html#ansible-collections-amazon-aws-ec2-vpc-peering-module",
    "return_values": {
      "peering_id": {
        "description": "The id of the VPC peering connection created/deleted.",
        "type": "string",
        "returned": "always",
        "sample": "\"pcx-034223d7c0aec3cde\""
      },
      "vpc_peering_connection": {
        "description": "The details of the VPC peering connection.",
        "type": "dictionary",
        "returned": "success",
        "suboptions": {
          "accepter_vpc_info": {
            "description": "Information about the VPC which accepted the connection.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "cidr_block": {
                "description": "The primary CIDR for the VPC.",
                "type": "string",
                "returned": "when connection is in the accepted state.",
                "sample": "\"10.10.10.0/23\""
              },
              "cidr_block_set": {
                "description": "A list of all CIDRs for the VPC.",
                "type": "list",
                "returned": "when connection is in the accepted state.",
                "elements": "elements=dictionary",
                "suboptions": {
                  "cidr_block": {
                    "description": "A CIDR block used by the VPC.",
                    "type": "string",
                    "returned": "success",
                    "sample": "\"10.10.10.0/23\""
                  }
                }
              },
              "owner_id": {
                "description": "The AWS account that owns the VPC.",
                "type": "string",
                "returned": "success",
                "sample": "\"123456789012\""
              },
              "peering_options": {
                "description": "Additional peering configuration.",
                "type": "dictionary",
                "returned": "when connection is in the accepted state.",
                "suboptions": {
                  "allow_dns_resolution_from_remote_vpc": {
                    "description": "Indicates whether a VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC.",
                    "type": "boolean",
                    "returned": "success"
                  },
                  "allow_egress_from_local_classic_link_to_remote_vpc": {
                    "description": "Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection.",
                    "type": "boolean",
                    "returned": "success"
                  },
                  "allow_egress_from_local_vpc_to_remote_classic_link": {
                    "description": "Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection.",
                    "type": "boolean",
                    "returned": "success"
                  }
                }
              },
              "region": {
                "description": "The AWS region that the VPC is in.",
                "type": "string",
                "returned": "success",
                "sample": "\"us-east-1\""
              },
              "vpc_id": {
                "description": "The ID of the VPC",
                "type": "string",
                "returned": "success",
                "sample": "\"vpc-0123456789abcdef0\""
              }
            }
          },
          "expiration_time": {
            "description": "The time that an unaccepted VPC peering connection will expire.",
            "type": "string",
            "returned": "success",
            "sample": "\"2024-10-01T12:11:12+00:00\""
          },
          "requester_vpc_info": {
            "description": "Information about the VPC which requested the connection.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "cidr_block": {
                "description": "The primary CIDR for the VPC.",
                "type": "string",
                "returned": "when connection is not in the deleted state.",
                "sample": "\"10.10.10.0/23\""
              },
              "cidr_block_set": {
                "description": "A list of all CIDRs for the VPC.",
                "type": "list",
                "returned": "when connection is not in the deleted state.",
                "elements": "elements=dictionary",
                "suboptions": {
                  "cidr_block": {
                    "description": "A CIDR block used by the VPC",
                    "type": "string",
                    "returned": "success",
                    "sample": "\"10.10.10.0/23\""
                  }
                }
              },
              "owner_id": {
                "description": "The AWS account that owns the VPC.",
                "type": "string",
                "returned": "success",
                "sample": "\"123456789012\""
              },
              "peering_options": {
                "description": "Additional peering configuration.",
                "type": "dictionary",
                "returned": "when connection is not in the deleted state.",
                "suboptions": {
                  "allow_dns_resolution_from_remote_vpc": {
                    "description": "Indicates whether a VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC.",
                    "type": "boolean",
                    "returned": "success"
                  },
                  "allow_egress_from_local_classic_link_to_remote_vpc": {
                    "description": "Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection.",
                    "type": "boolean",
                    "returned": "success"
                  },
                  "allow_egress_from_local_vpc_to_remote_classic_link": {
                    "description": "Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection.",
                    "type": "boolean",
                    "returned": "success"
                  }
                }
              },
              "region": {
                "description": "The AWS region that the VPC is in.",
                "type": "string",
                "returned": "success",
                "sample": "\"us-east-1\""
              },
              "vpc_id": {
                "description": "The ID of the VPC",
                "type": "string",
                "returned": "success",
                "sample": "\"vpc-0123456789abcdef0\""
              }
            }
          },
          "status": {
            "description": "Details of the current status of the connection.",
            "type": "complex",
            "returned": "success",
            "suboptions": {
              "code": {
                "description": "A short code describing the status of the connection.",
                "type": "string",
                "returned": "success",
                "sample": "\"active\""
              },
              "message": {
                "description": "Additional information about the status of the connection.",
                "type": "string",
                "returned": "success",
                "sample": "\"Pending Acceptance by 123456789012\""
              }
            }
          },
          "tags": {
            "description": "Tags applied to the connection.",
            "type": "dictionary",
            "returned": "success"
          },
          "vpc_peering_connection_id": {
            "description": "The ID of the VPC peering connection.",
            "type": "string",
            "returned": "success",
            "sample": "\"pcx-0123456789abcdef0\""
          }
        }
      }
    }
  },
  "ec2_vpc_peering_info": {
    "description": "Retrieves AWS VPC Peering details using AWS methods",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_peering_info_module.html#ansible-collections-amazon-aws-ec2-vpc-peering-info-module",
    "return_values": {
      "result": {
        "description": "The result of the describe.",
        "type": "list",
        "returned": "success",
        "elements": "elements=dictionary",
        "suboptions": {
          "accepter_vpc_info": {
            "description": "Information about the VPC which accepted the connection.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "cidr_block": {
                "description": "The primary CIDR for the VPC.",
                "type": "string",
                "returned": "when connection is in the accepted state.",
                "sample": "\"10.10.10.0/23\""
              },
              "cidr_block_set": {
                "description": "A list of all CIDRs for the VPC.",
                "type": "list",
                "returned": "when connection is in the accepted state.",
                "elements": "elements=dictionary",
                "suboptions": {
                  "cidr_block": {
                    "description": "A CIDR block used by the VPC.",
                    "type": "string",
                    "returned": "success",
                    "sample": "\"10.10.10.0/23\""
                  }
                }
              },
              "owner_id": {
                "description": "The AWS account that owns the VPC.",
                "type": "string",
                "returned": "success",
                "sample": "\"123456789012\""
              },
              "peering_options": {
                "description": "Additional peering configuration.",
                "type": "dictionary",
                "returned": "when connection is in the accepted state.",
                "suboptions": {
                  "allow_dns_resolution_from_remote_vpc": {
                    "description": "Indicates whether a VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC.",
                    "type": "boolean",
                    "returned": "success"
                  },
                  "allow_egress_from_local_classic_link_to_remote_vpc": {
                    "description": "Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection.",
                    "type": "boolean",
                    "returned": "success"
                  },
                  "allow_egress_from_local_vpc_to_remote_classic_link": {
                    "description": "Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection.",
                    "type": "boolean",
                    "returned": "success"
                  }
                }
              },
              "region": {
                "description": "The AWS region that the VPC is in.",
                "type": "string",
                "returned": "success",
                "sample": "\"us-east-1\""
              },
              "vpc_id": {
                "description": "The ID of the VPC",
                "type": "string",
                "returned": "success",
                "sample": "\"vpc-0123456789abcdef0\""
              }
            }
          },
          "requester_vpc_info": {
            "description": "Information about the VPC which requested the connection.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "cidr_block": {
                "description": "The primary CIDR for the VPC.",
                "type": "string",
                "returned": "when connection is not in the deleted state.",
                "sample": "\"10.10.10.0/23\""
              },
              "cidr_block_set": {
                "description": "A list of all CIDRs for the VPC.",
                "type": "list",
                "returned": "when connection is not in the deleted state.",
                "elements": "elements=dictionary",
                "suboptions": {
                  "cidr_block": {
                    "description": "A CIDR block used by the VPC",
                    "type": "string",
                    "returned": "success",
                    "sample": "\"10.10.10.0/23\""
                  }
                }
              },
              "owner_id": {
                "description": "The AWS account that owns the VPC.",
                "type": "string",
                "returned": "success",
                "sample": "\"123456789012\""
              },
              "peering_options": {
                "description": "Additional peering configuration.",
                "type": "dictionary",
                "returned": "when connection is not in the deleted state.",
                "suboptions": {
                  "allow_dns_resolution_from_remote_vpc": {
                    "description": "Indicates whether a VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC.",
                    "type": "boolean",
                    "returned": "success"
                  },
                  "allow_egress_from_local_classic_link_to_remote_vpc": {
                    "description": "Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection.",
                    "type": "boolean",
                    "returned": "success"
                  },
                  "allow_egress_from_local_vpc_to_remote_classic_link": {
                    "description": "Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection.",
                    "type": "boolean",
                    "returned": "success"
                  }
                }
              },
              "region": {
                "description": "The AWS region that the VPC is in.",
                "type": "string",
                "returned": "success",
                "sample": "\"us-east-1\""
              },
              "vpc_id": {
                "description": "The ID of the VPC",
                "type": "string",
                "returned": "success",
                "sample": "\"vpc-0123456789abcdef0\""
              }
            }
          },
          "status": {
            "description": "Details of the current status of the connection.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "code": {
                "description": "A short code describing the status of the connection.",
                "type": "string",
                "returned": "success",
                "sample": "\"active\""
              },
              "message": {
                "description": "Additional information about the status of the connection.",
                "type": "string",
                "returned": "success",
                "sample": "\"Pending Acceptance by 123456789012\""
              }
            }
          },
          "tags": {
            "description": "Tags applied to the connection.",
            "type": "dictionary",
            "returned": "success"
          },
          "vpc_peering_connection_id": {
            "description": "The ID of the VPC peering connection.",
            "type": "string",
            "returned": "success",
            "sample": "\"pcx-0123456789abcdef0\""
          }
        }
      },
      "vpc_peering_connections": {
        "description": "Details of the matching VPC peering connections.",
        "type": "list",
        "returned": "success",
        "elements": "elements=dictionary",
        "suboptions": {
          "accepter_vpc_info": {
            "description": "Information about the VPC which accepted the connection.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "cidr_block": {
                "description": "The primary CIDR for the VPC.",
                "type": "string",
                "returned": "when connection is in the accepted state.",
                "sample": "\"10.10.10.0/23\""
              },
              "cidr_block_set": {
                "description": "A list of all CIDRs for the VPC.",
                "type": "list",
                "returned": "when connection is in the accepted state.",
                "elements": "elements=dictionary",
                "suboptions": {
                  "cidr_block": {
                    "description": "A CIDR block used by the VPC.",
                    "type": "string",
                    "returned": "success",
                    "sample": "\"10.10.10.0/23\""
                  }
                }
              },
              "owner_id": {
                "description": "The AWS account that owns the VPC.",
                "type": "string",
                "returned": "success",
                "sample": "\"123456789012\""
              },
              "peering_options": {
                "description": "Additional peering configuration.",
                "type": "dictionary",
                "returned": "when connection is in the accepted state.",
                "suboptions": {
                  "allow_dns_resolution_from_remote_vpc": {
                    "description": "Indicates whether a VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC.",
                    "type": "boolean",
                    "returned": "success"
                  },
                  "allow_egress_from_local_classic_link_to_remote_vpc": {
                    "description": "Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection.",
                    "type": "boolean",
                    "returned": "success"
                  },
                  "allow_egress_from_local_vpc_to_remote_classic_link": {
                    "description": "Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection.",
                    "type": "boolean",
                    "returned": "success"
                  }
                }
              },
              "region": {
                "description": "The AWS region that the VPC is in.",
                "type": "string",
                "returned": "success",
                "sample": "\"us-east-1\""
              },
              "vpc_id": {
                "description": "The ID of the VPC",
                "type": "string",
                "returned": "success",
                "sample": "\"vpc-0123456789abcdef0\""
              }
            }
          },
          "requester_vpc_info": {
            "description": "Information about the VPC which requested the connection.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "cidr_block": {
                "description": "The primary CIDR for the VPC.",
                "type": "string",
                "returned": "when connection is not in the deleted state.",
                "sample": "\"10.10.10.0/23\""
              },
              "cidr_block_set": {
                "description": "A list of all CIDRs for the VPC.",
                "type": "list",
                "returned": "when connection is not in the deleted state.",
                "elements": "elements=dictionary",
                "suboptions": {
                  "cidr_block": {
                    "description": "A CIDR block used by the VPC",
                    "type": "string",
                    "returned": "success",
                    "sample": "\"10.10.10.0/23\""
                  }
                }
              },
              "owner_id": {
                "description": "The AWS account that owns the VPC.",
                "type": "string",
                "returned": "success",
                "sample": "\"123456789012\""
              },
              "peering_options": {
                "description": "Additional peering configuration.",
                "type": "dictionary",
                "returned": "when connection is not in the deleted state.",
                "suboptions": {
                  "allow_dns_resolution_from_remote_vpc": {
                    "description": "Indicates whether a VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC.",
                    "type": "boolean",
                    "returned": "success"
                  },
                  "allow_egress_from_local_classic_link_to_remote_vpc": {
                    "description": "Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection.",
                    "type": "boolean",
                    "returned": "success"
                  },
                  "allow_egress_from_local_vpc_to_remote_classic_link": {
                    "description": "Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection.",
                    "type": "boolean",
                    "returned": "success"
                  }
                }
              },
              "region": {
                "description": "The AWS region that the VPC is in.",
                "type": "string",
                "returned": "success",
                "sample": "\"us-east-1\""
              },
              "vpc_id": {
                "description": "The ID of the VPC",
                "type": "string",
                "returned": "success",
                "sample": "\"vpc-0123456789abcdef0\""
              }
            }
          },
          "status": {
            "description": "Details of the current status of the connection.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "code": {
                "description": "A short code describing the status of the connection.",
                "type": "string",
                "returned": "success",
                "sample": "\"active\""
              },
              "message": {
                "description": "Additional information about the status of the connection.",
                "type": "string",
                "returned": "success",
                "sample": "\"Pending Acceptance by 123456789012\""
              }
            }
          },
          "tags": {
            "description": "Tags applied to the connection.",
            "type": "dictionary",
            "returned": "success"
          },
          "vpc_peering_connection_id": {
            "description": "The ID of the VPC peering connection.",
            "type": "string",
            "returned": "success",
            "sample": "\"pcx-0123456789abcdef0\""
          }
        }
      }
    }
  },
  "ec2_vpc_route_table": {
    "description": "Manage route tables for AWS Virtual Private Clouds",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_route_table_module.html#ansible-collections-amazon-aws-ec2-vpc-route-table-module",
    "return_values": {
      "route_table": {
        "description": "Route Table result.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "associations": {
            "description": "List of associations between the route table and one or more subnets or a gateway.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "association_state": {
                "description": "The state of the association.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "state": {
                    "description": "The state of the association.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"associated\""
                  },
                  "state_message": {
                    "description": "Additional information about the state of the association.",
                    "type": "string",
                    "returned": "when available",
                    "sample": "\"Creating association\""
                  }
                }
              },
              "gateway_id": {
                "description": "ID of the internet gateway or virtual private gateway.",
                "type": "string",
                "returned": "when route table is a gateway route table",
                "sample": "\"igw-03312309\""
              },
              "main": {
                "description": "Whether this is the main route table.",
                "type": "boolean",
                "returned": "always",
                "sample": "false"
              },
              "route_table_association_id": {
                "description": "ID of association between route table and subnet.",
                "type": "string",
                "returned": "always",
                "sample": "\"rtbassoc-ab47cfc3\""
              },
              "route_table_id": {
                "description": "ID of the route table.",
                "type": "string",
                "returned": "always",
                "sample": "\"rtb-bf779ed7\""
              },
              "subnet_id": {
                "description": "ID of the subnet.",
                "type": "string",
                "returned": "when route table is a subnet route table",
                "sample": "\"subnet-82055af9\""
              }
            }
          },
          "id": {
            "description": "ID of the route table (same as route_table.route_table_id for backwards compatibility).",
            "type": "string",
            "returned": "always",
            "sample": "\"rtb-bf779ed7\""
          },
          "owner_id": {
            "description": "AWS account owning resource.",
            "type": "string",
            "returned": "success",
            "sample": "\"123456789012\""
          },
          "propagating_vgws": {
            "description": "List of Virtual Private Gateways propagating routes.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[]"
          },
          "route_table_id": {
            "description": "ID of the route table.",
            "type": "string",
            "returned": "always",
            "sample": "\"rtb-bf779ed7\""
          },
          "routes": {
            "description": "List of routes in the route table.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "carrier_gateway_id": {
                "description": "ID of the Carrier gateway.",
                "type": "string",
                "returned": "when the route is via a Carrier gateway",
                "sample": "\"local\""
              },
              "destination_cidr_block": {
                "description": "IPv4 CIDR block of destination",
                "type": "string",
                "returned": "always",
                "sample": "\"10.228.228.0/22\""
              },
              "destination_ipv6_cidr_block": {
                "description": "IPv6 CIDR block of destination",
                "type": "string",
                "returned": "when the route includes an IPv6 destination",
                "sample": "\"2600:1f1c:1b3:8f00:8000::/65\""
              },
              "gateway_id": {
                "description": "ID of the gateway.",
                "type": "string",
                "returned": "when gateway is local or internet gateway",
                "sample": "\"local\""
              },
              "instance_id": {
                "description": "ID of a NAT instance.",
                "type": "string",
                "returned": "when the route is via an EC2 instance",
                "sample": "\"i-abcd123456789\""
              },
              "instance_owner_id": {
                "description": "AWS account owning the NAT instance.",
                "type": "string",
                "returned": "when the route is via an EC2 instance",
                "sample": "\"123456789012\""
              },
              "nat_gateway_id": {
                "description": "ID of the NAT gateway.",
                "type": "string",
                "returned": "when the route is via a NAT gateway",
                "sample": "\"local\""
              },
              "origin": {
                "description": "mechanism through which the route is in the table.",
                "type": "string",
                "returned": "always",
                "sample": "\"CreateRouteTable\""
              },
              "state": {
                "description": "state of the route.",
                "type": "string",
                "returned": "always",
                "sample": "\"active\""
              },
              "transit_gateway_id": {
                "description": "ID of the Transit gateway.",
                "type": "string",
                "returned": "when the route is via a Transit gateway",
                "sample": "\"tgw-123456789012\""
              }
            }
          },
          "tags": {
            "description": "Tags applied to the route table.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"Name\": \"Public route table\", \"Public\": \"true\"}"
          },
          "vpc_id": {
            "description": "ID for the VPC in which the route lives.",
            "type": "string",
            "returned": "always",
            "sample": "\"vpc-6e2d2407\""
          }
        }
      }
    }
  },
  "ec2_vpc_route_table_info": {
    "description": "Gather information about ec2 VPC route tables in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_route_table_info_module.html#ansible-collections-amazon-aws-ec2-vpc-route-table-info-module",
    "return_values": {
      "route_tables": {
        "description": "A list of dictionarys describing route tables. See also https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ec2.html#EC2.Client.describe_route_tables.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "associations": {
            "description": "List of associations between the route table and one or more subnets or a gateway.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "association_state": {
                "description": "The state of the association.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "state": {
                    "description": "The state of the association.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"associated\""
                  },
                  "state_message": {
                    "description": "Additional information about the state of the association.",
                    "type": "string",
                    "returned": "when available",
                    "sample": "\"Creating association\""
                  }
                }
              },
              "gateway_id": {
                "description": "ID of the internet gateway or virtual private gateway.",
                "type": "string",
                "returned": "when route table is a gateway route table",
                "sample": "\"igw-03312309\""
              },
              "main": {
                "description": "Whether this is the main route table.",
                "type": "boolean",
                "returned": "always",
                "sample": "false"
              },
              "route_table_association_id": {
                "description": "ID of association between route table and subnet.",
                "type": "string",
                "returned": "always",
                "sample": "\"rtbassoc-ab47cfc3\""
              },
              "route_table_id": {
                "description": "ID of the route table.",
                "type": "string",
                "returned": "always",
                "sample": "\"rtb-bf779ed7\""
              },
              "subnet_id": {
                "description": "ID of the subnet.",
                "type": "string",
                "returned": "when route table is a subnet route table",
                "sample": "\"subnet-82055af9\""
              }
            }
          },
          "id": {
            "description": "ID of the route table (same as route_tables.route_table_id for backwards compatibility).",
            "type": "string",
            "returned": "always",
            "sample": "\"rtb-bf779ed7\""
          },
          "owner_id": {
            "description": "ID of the account which owns the route table.",
            "type": "string",
            "returned": "always",
            "sample": "\"012345678912\""
          },
          "propagating_vgws": {
            "description": "List of Virtual Private Gateways propagating routes.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[]"
          },
          "route_table_id": {
            "description": "ID of the route table.",
            "type": "string",
            "returned": "always",
            "sample": "\"rtb-bf779ed7\""
          },
          "routes": {
            "description": "List of routes in the route table.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "destination_cidr_block": {
                "description": "CIDR block of destination.",
                "type": "string",
                "returned": "always",
                "sample": "\"10.228.228.0/22\""
              },
              "gateway_id": {
                "description": "ID of the gateway.",
                "type": "string",
                "returned": "when gateway is local or internet gateway",
                "sample": "\"local\""
              },
              "instance_id": {
                "description": "ID of a NAT instance. Empty unless the route is via an EC2 instance.",
                "type": "string",
                "returned": "always",
                "sample": "\"i-abcd123456789\""
              },
              "instance_owner_id": {
                "description": "AWS account owning the NAT instance. Empty unless the route is via an EC2 instance.",
                "type": "string",
                "returned": "always",
                "sample": "\"123456789012\""
              },
              "nat_gateway_id": {
                "description": "ID of the NAT gateway.",
                "type": "string",
                "returned": "when the route is via a NAT gateway.",
                "sample": "\"local\""
              },
              "network_interface_id": {
                "description": "The ID of the network interface. Empty unless the route is via an EC2 instance.",
                "type": "string",
                "returned": "always",
                "sample": "\"123456789012\""
              },
              "origin": {
                "description": "mechanism through which the route is in the table.",
                "type": "string",
                "returned": "always",
                "sample": "\"CreateRouteTable\""
              },
              "state": {
                "description": "state of the route.",
                "type": "string",
                "returned": "always",
                "sample": "\"active\""
              },
              "transit_gateway_id": {
                "description": "ID of the Transit gateway.",
                "type": "string",
                "returned": "when the route is via a Transit gateway.",
                "sample": "\"tgw-123456789012\""
              }
            }
          },
          "tags": {
            "description": "Tags applied to the route table.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"Name\": \"Public route table\", \"Public\": \"true\"}"
          },
          "vpc_id": {
            "description": "ID for the VPC in which the route lives.",
            "type": "string",
            "returned": "always",
            "sample": "\"vpc-6e2d2407\""
          }
        }
      }
    }
  },
  "ec2_vpc_subnet": {
    "description": "Manage subnets in AWS virtual private clouds",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_subnet_module.html#ansible-collections-amazon-aws-ec2-vpc-subnet-module",
    "return_values": {
      "subnet": {
        "description": "Dictionary of subnet values.",
        "type": "complex",
        "returned": "state=present",
        "suboptions": {
          "assign_ipv6_address_on_creation": {
            "description": "Whether IPv6 address is auto-assigned to new instances.",
            "type": "boolean",
            "returned": "state=present",
            "sample": "false"
          },
          "availability_zone": {
            "description": "Availability zone of the Subnet.",
            "type": "string",
            "returned": "state=present",
            "sample": "\"us-east-1a\""
          },
          "availability_zone_id": {
            "description": "The AZ ID of the subnet.",
            "type": "string",
            "returned": "state=present",
            "sample": "\"use1-az6\""
          },
          "available_ip_address_count": {
            "description": "Number of available IPv4 addresses.",
            "type": "string",
            "returned": "state=present",
            "sample": "\"251\""
          },
          "cidr_block": {
            "description": "The IPv4 CIDR of the Subnet.",
            "type": "string",
            "returned": "state=present",
            "sample": "\"10.0.0.0/16\""
          },
          "default_for_az": {
            "description": "Indicates whether this is the default Subnet for this Availability Zone.",
            "type": "boolean",
            "returned": "state=present",
            "sample": "false"
          },
          "enable_dns64": {
            "description": "Indicates whether DNS queries made should return synthetic IPv6 addresses for IPv4-only destinations.",
            "type": "boolean",
            "returned": "success",
            "sample": "false"
          },
          "id": {
            "description": "Subnet resource id.",
            "type": "string",
            "returned": "state=present",
            "sample": "\"subnet-b883b2c4\""
          },
          "ipv6_association_id": {
            "description": "The IPv6 association ID for the currently associated CIDR.",
            "type": "string",
            "returned": "state=present",
            "sample": "\"subnet-cidr-assoc-b85c74d2\""
          },
          "ipv6_cidr_block": {
            "description": "The IPv6 CIDR block actively associated with the Subnet.",
            "type": "string",
            "returned": "state=present",
            "sample": "\"2001:db8:0:102::/64\""
          },
          "ipv6_cidr_block_association_set": {
            "description": "An array of IPv6 cidr block association set information.",
            "type": "complex",
            "returned": "state=present",
            "suboptions": {
              "association_id": {
                "description": "The association ID.",
                "type": "string",
                "returned": "always"
              },
              "ipv6_cidr_block": {
                "description": "The IPv6 CIDR block that is associated with the subnet.",
                "type": "string",
                "returned": "always"
              },
              "ipv6_cidr_block_state": {
                "description": "A hash/dict that contains a single item. The state of the cidr block association.",
                "type": "dictionary",
                "returned": "always",
                "suboptions": {
                  "state": {
                    "description": "The CIDR block association state.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              }
            }
          },
          "ipv6_native": {
            "description": "Indicates whether this is an IPv6 only subnet.",
            "type": "boolean",
            "returned": "success",
            "sample": "false"
          },
          "map_customer_owned_ip_on_launch": {
            "description": "Indicates whether a network interface receives a customer-owned IPv4 address.",
            "type": "boolean",
            "returned": "success",
            "sample": "\"flase\""
          },
          "map_public_ip_on_launch": {
            "description": "Whether public IP is auto-assigned to new instances.",
            "type": "boolean",
            "returned": "state=present",
            "sample": "false"
          },
          "owner_id": {
            "description": "The ID of the Amazon Web Services account that owns the subnet.",
            "type": "string",
            "returned": "success",
            "sample": "\"12344567\""
          },
          "private_dns_name_options_on_launch": {
            "description": "The type of hostnames to assign to instances in the subnet at launch. An instance hostname is based on the IPv4 address or ID of the instance.",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"enable_resource_name_dns_a_record\": false, \"enable_resource_name_dns_aaaa_record\": false, \"hostname_type\": \"ip-name\"}"
          },
          "state": {
            "description": "State of the Subnet.",
            "type": "string",
            "returned": "state=present",
            "sample": "\"available\""
          },
          "subnet_arn": {
            "description": "The Amazon Resource Name (ARN) of the subnet.",
            "type": "string",
            "returned": "success",
            "sample": "\"arn:aws:ec2:us-east-1:xxx:subnet/subnet-xxx\""
          },
          "tags": {
            "description": "Tags attached to the Subnet, includes name.",
            "type": "dictionary",
            "returned": "state=present",
            "sample": "{\"Name\": \"My Subnet\", \"env\": \"staging\"}"
          },
          "vpc_id": {
            "description": "The id of the VPC where this Subnet exists.",
            "type": "string",
            "returned": "state=present",
            "sample": "\"vpc-67236184\""
          }
        }
      }
    }
  },
  "ec2_vpc_subnet_info": {
    "description": "Gather information about EC2 VPC subnets in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_subnet_info_module.html#ansible-collections-amazon-aws-ec2-vpc-subnet-info-module",
    "return_values": {
      "subnets": {
        "description": "Returns an array of complex objects as described below.",
        "type": "complex",
        "returned": "success",
        "suboptions": {
          "assign_ipv6_address_on_creation": {
            "description": "whether IPv6 address is auto-assigned to new instances.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "availability_zone": {
            "description": "Availability zone of the Subnet.",
            "type": "string",
            "returned": "always",
            "sample": "\"us-east-1a\""
          },
          "availability_zone_id": {
            "description": "The AZ ID of the subnet.",
            "type": "string",
            "returned": "always",
            "sample": "\"use1-az6\""
          },
          "available_ip_address_count": {
            "description": "number of available IPv4 addresses.",
            "type": "string",
            "returned": "always",
            "sample": "\"251\""
          },
          "cidr_block": {
            "description": "The IPv4 CIDR of the Subnet.",
            "type": "string",
            "returned": "always",
            "sample": "\"10.0.0.0/16\""
          },
          "default_for_az": {
            "description": "indicates whether this is the default Subnet for this Availability Zone.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "enable_dns64": {
            "description": "Indicates whether DNS queries made should return synthetic IPv6 addresses for IPv4-only destinations.",
            "type": "boolean",
            "returned": "success",
            "sample": "false"
          },
          "id": {
            "description": "Subnet resource id.",
            "type": "string",
            "returned": "always",
            "sample": "\"subnet-b883b2c4\""
          },
          "ipv6_association_id": {
            "description": "The IPv6 association ID for the currently associated CIDR.",
            "type": "string",
            "returned": "always",
            "sample": "\"subnet-cidr-assoc-b85c74d2\""
          },
          "ipv6_cidr_block": {
            "description": "The IPv6 CIDR block actively associated with the Subnet.",
            "type": "string",
            "returned": "always",
            "sample": "\"2001:db8:0:102::/64\""
          },
          "ipv6_cidr_block_association_set": {
            "description": "An array of IPv6 cidr block association set information.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "association_id": {
                "description": "The association ID.",
                "type": "string",
                "returned": "always"
              },
              "ipv6_cidr_block": {
                "description": "The IPv6 CIDR block that is associated with the subnet.",
                "type": "string",
                "returned": "always"
              },
              "ipv6_cidr_block_state": {
                "description": "A hash/dict that contains a single item. The state of the cidr block association.",
                "type": "dictionary",
                "returned": "always",
                "suboptions": {
                  "state": {
                    "description": "The CIDR block association state.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              }
            }
          },
          "ipv6_native": {
            "description": "Indicates whether this is an IPv6 only subnet.",
            "type": "boolean",
            "returned": "success",
            "sample": "false"
          },
          "map_customer_owned_ip_on_launch": {
            "description": "Indicates whether a network interface receives a customer-owned IPv4 address.",
            "type": "boolean",
            "returned": "success",
            "sample": "\"flase\""
          },
          "map_public_ip_on_launch": {
            "description": "whether public IP is auto-assigned to new instances.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "owner_id": {
            "description": "The ID of the Amazon Web Services account that owns the subnet.",
            "type": "string",
            "returned": "success",
            "sample": "\"12344567\""
          },
          "private_dns_name_options_on_launch": {
            "description": "The type of hostnames to assign to instances in the subnet at launch. An instance hostname is based on the IPv4 address or ID of the instance.",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"enable_resource_name_dns_a_record\": false, \"enable_resource_name_dns_aaaa_record\": false, \"hostname_type\": \"ip-name\"}"
          },
          "state": {
            "description": "state of the Subnet.",
            "type": "string",
            "returned": "always",
            "sample": "\"available\""
          },
          "subnet_arn": {
            "description": "The Amazon Resource Name (ARN) of the subnet.",
            "type": "string",
            "returned": "success",
            "sample": "\"arn:aws:ec2:us-east-1:xxx:subnet/subnet-xxx\""
          },
          "subnet_id": {
            "description": "The ID of the Subnet.",
            "type": "string",
            "returned": "always"
          },
          "tags": {
            "description": "tags attached to the Subnet, includes name.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"Name\": \"My Subnet\", \"env\": \"staging\"}"
          },
          "vpc_id": {
            "description": "the id of the VPC where this Subnet exists.",
            "type": "string",
            "returned": "always",
            "sample": "\"vpc-67236184\""
          }
        }
      }
    }
  },
  "ec2_vpc_vgw": {
    "description": "Create and delete AWS VPN Virtual Gateways",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_vgw_module.html#ansible-collections-amazon-aws-ec2-vpc-vgw-module",
    "return_values": {
      "vgw": {
        "description": "Information about the virtual private gateway.",
        "type": "dictionary",
        "returned": "success",
        "suboptions": {
          "id": {
            "description": "The ID of the virtual private gateway.",
            "type": "string",
            "returned": "success",
            "sample": "\"vgw-0123456789abcdef0\""
          },
          "state": {
            "description": "The current state of the virtual private gateway.",
            "type": "string",
            "returned": "success",
            "sample": "\"available\""
          },
          "tags": {
            "description": "A dictionary representing the tags attached to the virtual private gateway.",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"Env\": \"Dev_Test_001\", \"Name\": \"ansible-test-ec2-vpc-vgw\"}"
          },
          "type": {
            "description": "The type of VPN connection the virtual private gateway supports.",
            "type": "string",
            "returned": "success",
            "sample": "\"ipsec.1\""
          },
          "vpc_id": {
            "description": "The ID of the VPC.",
            "type": "string",
            "returned": "success",
            "sample": "\"vpc-123456789abcdef01\""
          }
        }
      }
    }
  },
  "ec2_vpc_vgw_info": {
    "description": "Gather information about virtual gateways in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_vgw_info_module.html#ansible-collections-amazon-aws-ec2-vpc-vgw-info-module",
    "return_values": {
      "virtual_gateways": {
        "description": "Information about one or more virtual private gateways.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "resource_tags": {
            "description": "A dictionary representing the tags attached to the VGW. Represents the same details as virtual_gateways.tags.",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"Env\": \"Dev_Test_01\", \"MyKey\": \"MyValue\"}"
          },
          "state": {
            "description": "Informtion about the current state of the virtual private gateway.",
            "type": "string",
            "returned": "success",
            "sample": "\"available\""
          },
          "tags": {
            "description": "A list of dictionaries representing the tags attached to the virtual private gateway. Represents the same details as virtual_gateways.resource_tags.",
            "type": "list",
            "returned": "success",
            "elements": "elements=dictionary",
            "suboptions": {
              "key": {
                "description": "The key of the tag.",
                "type": "string",
                "returned": "success",
                "sample": "\"MyKey\""
              },
              "value": {
                "description": "The value of the tag.",
                "type": "string",
                "returned": "success",
                "sample": "\"MyValue\""
              }
            }
          },
          "type": {
            "description": "Information about type of VPN connection the virtual private gateway supports.",
            "type": "string",
            "returned": "success",
            "sample": "\"ipsec.1\""
          },
          "vpc_attachments": {
            "description": "Information about the VPCs attached to the virtual private gateway.",
            "type": "list",
            "returned": "success",
            "elements": "elements=dictionary",
            "suboptions": {
              "state": {
                "description": "The current state of the attachment.",
                "type": "string",
                "returned": "success",
                "sample": "\"available\""
              },
              "vpc_id": {
                "description": "The ID of the VPC.",
                "type": "string",
                "returned": "success",
                "sample": "\"vpc-12345678901234567\""
              }
            }
          },
          "vpn_gateway_id": {
            "description": "The ID of the virtual private gateway.",
            "type": "string",
            "returned": "success",
            "sample": "\"vgw-0123456789abcdef0\""
          }
        }
      }
    }
  },
  "ec2_vpc_vpn": {
    "description": "Create, modify, and delete EC2 VPN connections",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_vpn_module.html#ansible-collections-amazon-aws-ec2-vpc-vpn-module",
    "return_values": {
      "changed": {
        "description": "If the VPN connection has changed.",
        "type": "boolean",
        "returned": "always",
        "sample": "true"
      },
      "customer_gateway_configuration": {
        "description": "The configuration of the VPN connection.",
        "type": "string",
        "returned": "state=present"
      },
      "customer_gateway_id": {
        "description": "The customer gateway connected via the connection.",
        "type": "string",
        "returned": "state=present",
        "sample": "\"cgw-1220c87b\""
      },
      "gateway_association_state": {
        "description": "The current state of the gateway association.",
        "type": "string",
        "returned": "state=present",
        "sample": "\"associated\""
      },
      "options": {
        "description": "The VPN connection options.",
        "type": "list",
        "returned": "state=present",
        "elements": "elements=dictionary",
        "suboptions": {
          "enable_acceleration": {
            "description": "Indicates whether acceleration is enabled for the VPN connection.",
            "type": "boolean",
            "returned": "state=present",
            "sample": "false"
          },
          "local_ipv4_network_cidr": {
            "description": "The IPv4 CIDR on the customer gateway (on-premises) side of the VPN connection.",
            "type": "string",
            "returned": "state=present",
            "sample": "\"0.0.0.0/0\""
          },
          "outside_ip_address_type": {
            "description": "The external IP address of the VPN tunnel.",
            "type": "string",
            "returned": "state=present",
            "sample": "\"PublicIpv4\""
          },
          "remote_ipv4_network_cidr": {
            "description": "The IPv4 CIDR on the Amazon Web Services side of the VPN connection.",
            "type": "string",
            "returned": "state=present",
            "sample": "\"0.0.0.0/0\""
          },
          "static_routes_only": {
            "description": "If the VPN connection only allows static routes.",
            "type": "boolean",
            "returned": "state=present",
            "sample": "true"
          },
          "tunnel_inside_ip_version": {
            "description": "Indicates whether the VPN tunnels process IPv4 or IPv6 traffic.",
            "type": "string",
            "returned": "state=present",
            "sample": "\"ipv4\""
          },
          "tunnel_options": {
            "description": "Indicates the VPN tunnel options.",
            "type": "list",
            "returned": "state=present",
            "elements": "elements=dictionary",
            "sample": "[{\"log_options\": {\"cloud_watch_log_options\": {\"log_enabled\": false}}, \"outside_ip_address\": \"34.225.101.10\", \"pre_shared_key\": \"8n7hnjNE8zhIt4VpMOIfcrw6XnUTHLW9\", \"tunnel_inside_cidr\": \"169.254.31.8/30\"}]",
            "suboptions": {
              "log_options": {
                "description": "Options for logging VPN tunnel activity.",
                "type": "dictionary",
                "returned": "state=present",
                "suboptions": {
                  "cloud_watch_log_options": {
                    "description": "Options for sending VPN tunnel logs to CloudWatch.",
                    "type": "dictionary",
                    "returned": "state=present"
                  }
                }
              },
              "outside_ip_address": {
                "description": "The external IP address of the VPN tunnel.",
                "type": "string",
                "returned": "state=present"
              },
              "pre_shared_key": {
                "description": "The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and the customer gateway.",
                "type": "string",
                "returned": "state=present"
              },
              "tunnel_inside_cidr": {
                "description": "The range of inside IPv4 addresses for the tunnel.",
                "type": "string",
                "returned": "state=present"
              }
            }
          }
        }
      },
      "routes": {
        "description": "The routes of the VPN connection.",
        "type": "list",
        "returned": "state=present",
        "elements": "elements=string",
        "sample": "[{\"destination_cidr_block\": \"192.168.1.0/24\", \"state\": \"available\"}]",
        "suboptions": {
          "destination_cidr_block": {
            "description": "The CIDR block associated with the local subnet of the customer data center.",
            "type": "string",
            "returned": "state=present"
          },
          "source": {
            "description": "Indicates how the routes were provided.",
            "type": "string",
            "returned": "state=present"
          },
          "state": {
            "description": "The current state of the static route.",
            "type": "string",
            "returned": "state=present"
          }
        }
      },
      "state": {
        "description": "The status of the VPN connection.",
        "type": "string",
        "returned": "state=present",
        "sample": "\"available\""
      },
      "tags": {
        "description": "The tags associated with the connection.",
        "type": "dictionary",
        "returned": "state=present",
        "sample": "{\"name\": \"ansible-test\", \"other\": \"tag\"}"
      },
      "transit_gateway_id": {
        "description": "The transit gateway id to which the vpn connection can be attached.",
        "type": "string",
        "returned": "state=present",
        "sample": "\"tgw-cb0ae2a2\""
      },
      "type": {
        "description": "The type of VPN connection (currently only ipsec.1 is available).",
        "type": "string",
        "returned": "state=present",
        "sample": "\"ipsec.1\""
      },
      "vgw_telemetry": {
        "description": "The telemetry for the VPN tunnel.",
        "type": "list",
        "returned": "state=present",
        "elements": "elements=string",
        "sample": "[{\"accepted_route_count\": 0, \"last_status_change\": \"2024-09-30T13:12:33+00:00\", \"outside_ip_address\": \"34.225.101.10\", \"status\": \"DOWN\", \"status_message\": \"IPSEC IS DOWN\"}]",
        "suboptions": {
          "accepted_route_count": {
            "description": "The number of accepted routes.",
            "type": "integer",
            "returned": "state=present"
          },
          "certificate_arn": {
            "description": "The Amazon Resource Name of the virtual private gateway tunnel endpoint certificate.",
            "type": "string",
            "returned": "when a private certificate is used for authentication",
            "sample": "\"arn:aws:acm:us-east-1:123456789012:certificate/c544d8ce-20b8-4fff-98b0-example\""
          },
          "last_status_change": {
            "description": "The date and time of the last change in status.",
            "type": "string",
            "returned": "state=present"
          },
          "outside_ip_address": {
            "description": "The Internet-routable IP address of the virtual private gateway\u2019s outside interface.",
            "type": "string",
            "returned": "state=present"
          },
          "status": {
            "description": "The status of the VPN tunnel.",
            "type": "string",
            "returned": "state=present"
          },
          "status_message": {
            "description": "If an error occurs, a description of the error.",
            "type": "string",
            "returned": "state=present"
          }
        }
      },
      "vpn_connection_id": {
        "description": "The identifier for the VPN connection.",
        "type": "string",
        "returned": "state=present",
        "sample": "\"vpn-781e0e19\""
      },
      "vpn_gateway_id": {
        "description": "The virtual private gateway connected via the connection.",
        "type": "string",
        "returned": "state=present",
        "sample": "\"vgw-cb0ae2a2\""
      }
    }
  },
  "ec2_vpc_vpn_info": {
    "description": "Gather information about EC2 VPN Connections in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_vpn_info_module.html#ansible-collections-amazon-aws-ec2-vpc-vpn-info-module",
    "return_values": {
      "vpn_connections": {
        "description": "List of one or more EC2 VPN Connections.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "category": {
            "description": "The category of the VPN connection.",
            "type": "string",
            "returned": "always",
            "sample": "\"VPN\""
          },
          "customer_gateway_id": {
            "description": "The ID of the customer gateway at your end of the VPN connection.",
            "type": "string",
            "returned": "always",
            "sample": "\"cgw-17a53c37\""
          },
          "customer_gatway_configuration": {
            "description": "The configuration information for the VPN connection\u2019s customer gateway (in the native XML format).",
            "type": "string",
            "returned": "always"
          },
          "gateway_association_state": {
            "description": "The current state of the gateway association.",
            "type": "string",
            "returned": "success",
            "sample": "\"associated\""
          },
          "options": {
            "description": "The VPN connection options.",
            "type": "list",
            "returned": "success",
            "elements": "elements=dictionary",
            "suboptions": {
              "enable_acceleration": {
                "description": "Indicates whether acceleration is enabled for the VPN connection.",
                "type": "boolean",
                "returned": "success",
                "sample": "false"
              },
              "local_ipv4_network_cidr": {
                "description": "The IPv4 CIDR on the customer gateway (on-premises) side of the VPN connection.",
                "type": "string",
                "returned": "success",
                "sample": "\"0.0.0.0/0\""
              },
              "outside_ip_address_type": {
                "description": "The external IP address of the VPN tunnel.",
                "type": "string",
                "returned": "success",
                "sample": "\"PublicIpv4\""
              },
              "remote_ipv4_network_cidr": {
                "description": "The IPv4 CIDR on the Amazon Web Services side of the VPN connection.",
                "type": "string",
                "returned": "success",
                "sample": "\"0.0.0.0/0\""
              },
              "static_routes_only": {
                "description": "If the VPN connection only allows static routes.",
                "type": "boolean",
                "returned": "success",
                "sample": "true"
              },
              "tunnel_inside_ip_version": {
                "description": "Indicates whether the VPN tunnels process IPv4 or IPv6 traffic.",
                "type": "string",
                "returned": "success",
                "sample": "\"ipv4\""
              },
              "tunnel_options": {
                "description": "Indicates the VPN tunnel options.",
                "type": "list",
                "returned": "success",
                "elements": "elements=dictionary",
                "sample": "[{\"log_options\": {\"cloud_watch_log_options\": {\"log_enabled\": false}}, \"outside_ip_address\": \"34.225.101.10\", \"pre_shared_key\": \"8n7hnjNE8zhIt4VpMOIfcrw6XnUTHLW9\", \"tunnel_inside_cidr\": \"169.254.31.8/30\"}]",
                "suboptions": {
                  "log_options": {
                    "description": "Options for logging VPN tunnel activity.",
                    "type": "dictionary",
                    "returned": "success",
                    "suboptions": {
                      "cloud_watch_log_options": {
                        "description": "Options for sending VPN tunnel logs to CloudWatch.",
                        "type": "dictionary",
                        "returned": "success"
                      }
                    }
                  },
                  "outside_ip_address": {
                    "description": "The external IP address of the VPN tunnel.",
                    "type": "string",
                    "returned": "success"
                  },
                  "pre_shared_key": {
                    "description": "The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and the customer gateway.",
                    "type": "string",
                    "returned": "success"
                  },
                  "tunnel_inside_cidr": {
                    "description": "The range of inside IPv4 addresses for the tunnel.",
                    "type": "string",
                    "returned": "success"
                  }
                }
              }
            }
          },
          "routes": {
            "description": "List of static routes associated with the VPN connection.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "destination_cidr_block": {
                "description": "The CIDR block associated with the local subnet of the customer data center.",
                "type": "string",
                "returned": "success"
              },
              "source": {
                "description": "Indicates how the routes were provided.",
                "type": "string",
                "returned": "success"
              },
              "state": {
                "description": "The current state of the static route.",
                "type": "string",
                "returned": "success"
              }
            }
          },
          "state": {
            "description": "The current state of the VPN connection.",
            "type": "string",
            "returned": "always",
            "sample": "\"available\""
          },
          "tags": {
            "description": "Any tags assigned to the VPN connection.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"Name\": \"test-conn\"}"
          },
          "type": {
            "description": "The type of VPN connection.",
            "type": "string",
            "returned": "always",
            "sample": "\"ipsec.1\""
          },
          "vgw_telemetry": {
            "description": "Information about the VPN tunnel.",
            "type": "dictionary",
            "returned": "always",
            "suboptions": {
              "accepted_route_count": {
                "description": "The number of accepted routes.",
                "type": "integer",
                "returned": "always",
                "sample": "0"
              },
              "certificate_arn": {
                "description": "The Amazon Resource Name of the virtual private gateway tunnel endpoint certificate.",
                "type": "string",
                "returned": "when a private certificate is used for authentication",
                "sample": "\"arn:aws:acm:us-east-1:123456789012:certificate/c544d8ce-20b8-4fff-98b0-example\""
              },
              "last_status_change": {
                "description": "The date and time of the last change in status.",
                "type": "string",
                "returned": "always",
                "sample": "\"2018-02-09T14:35:27+00:00\""
              },
              "outside_ip_address": {
                "description": "The Internet-routable IP address of the virtual private gateway\u2019s outside interface.",
                "type": "string",
                "returned": "always",
                "sample": "\"13.127.79.191\""
              },
              "status": {
                "description": "The status of the VPN tunnel.",
                "type": "string",
                "returned": "always",
                "sample": "\"DOWN\""
              },
              "status_message": {
                "description": "If an error occurs, a description of the error.",
                "type": "string",
                "returned": "always",
                "sample": "\"IPSEC IS DOWN\""
              }
            }
          },
          "vpn_connection_id": {
            "description": "The ID of the VPN connection.",
            "type": "string",
            "returned": "always",
            "sample": "\"vpn-f700d5c0\""
          },
          "vpn_gateway_id": {
            "description": "The ID of the virtual private gateway at the AWS side of the VPN connection.",
            "type": "string",
            "returned": "always",
            "sample": "\"vgw-cbe56bfb\""
          }
        }
      }
    }
  },
  "elb_application_lb": {
    "description": "Manage an Application Load Balancer",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/elb_application_lb_module.html#ansible-collections-amazon-aws-elb-application-lb-module",
    "return_values": {
      "access_logs_s3_bucket": {
        "description": "The name of the S3 bucket for the access logs.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"mys3bucket\""
      },
      "access_logs_s3_enabled": {
        "description": "Indicates whether access logs stored in Amazon S3 are enabled.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"true\""
      },
      "access_logs_s3_prefix": {
        "description": "The prefix for the location in the S3 bucket.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"my/logs\""
      },
      "availability_zones": {
        "description": "The Availability Zones for the load balancer.",
        "type": "list",
        "returned": "when state=present",
        "elements": "elements=dictionary",
        "sample": "[{\"load_balancer_addresses\": [], \"subnet_id\": \"subnet-aabbccddff\", \"zone_name\": \"ap-southeast-2a\"}]",
        "suboptions": {
          "load_balancer_addresses": {
            "description": "Information about static IP addresses for a load balancer.",
            "type": "list",
            "returned": "when state=present",
            "elements": "elements=dictionary",
            "suboptions": {
              "allocation_id": {
                "description": "The allocation ID of the Elastic IP address for an internal-facing load balancer.",
                "type": "string",
                "returned": "when state=present"
              },
              "ip_address": {
                "description": "The static IP address.",
                "type": "string",
                "returned": "when state=present"
              },
              "ipv6_address": {
                "description": "The IPv6 address.",
                "type": "string",
                "returned": "when state=present"
              },
              "private_ipv4_address": {
                "description": "The private IPv4 address for an internal load balancer.",
                "type": "string",
                "returned": "when state=present"
              }
            }
          },
          "subnet_id": {
            "description": "The ID of the subnet.",
            "type": "string",
            "returned": "when state=present"
          },
          "zone_name": {
            "description": "The name of the Availability Zone.",
            "type": "string",
            "returned": "when state=present"
          }
        }
      },
      "canonical_hosted_zone_id": {
        "description": "The ID of the Amazon Route 53 hosted zone associated with the load balancer.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"ABCDEF12345678\""
      },
      "changed": {
        "description": "Whether an ALB was created/updated/deleted.",
        "type": "boolean",
        "returned": "always",
        "sample": "true"
      },
      "client_keep_alive_seconds": {
        "description": "The client keep alive value, in seconds.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"3600\""
      },
      "connection_logs_s3_bucket": {
        "description": "The name of the S3 bucket for the connection logs.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"\""
      },
      "connection_logs_s3_enabled": {
        "description": "Indicates whether connection logs are enabled.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"false\""
      },
      "connection_logs_s3_prefix": {
        "description": "The prefix for the location in the S3 bucket for the connection logs.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"\""
      },
      "created_time": {
        "description": "The date and time the load balancer was created.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"2015-02-12T02:14:02+00:00\""
      },
      "deletion_protection_enabled": {
        "description": "Indicates whether deletion protection is enabled.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"true\""
      },
      "dns_name": {
        "description": "The public DNS name of the load balancer.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"internal-my-elb-123456789.ap-southeast-2.elb.amazonaws.com\""
      },
      "idle_timeout_timeout_seconds": {
        "description": "The idle timeout value, in seconds.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"60\""
      },
      "ip_address_type": {
        "description": "The type of IP addresses used by the subnets for the load balancer.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"ipv4\""
      },
      "ipv6_deny_all_igw_traffic": {
        "description": "Locks internet gateway (IGW) access to the load balancer.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"false\""
      },
      "listeners": {
        "description": "Information about the listeners.",
        "type": "list",
        "returned": "when state=present",
        "elements": "elements=dictionary",
        "suboptions": {
          "certificates": {
            "description": "The SSL server certificate.",
            "type": "list",
            "returned": "when state=present",
            "elements": "elements=dictionary",
            "suboptions": {
              "certificate_arn": {
                "description": "The Amazon Resource Name (ARN) of the certificate.",
                "type": "string",
                "returned": "when state=present",
                "sample": "\"arn:aws:acm:us-east-1:123456789012:certificate/28d2f3d9-cb2f-4033-a9aa-e75e704125a2\""
              }
            }
          },
          "default_actions": {
            "description": "The default actions for the listener.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"[{'forward_config': {'target_group_stickiness_config': {'enabled': False}, 'target_groups': [{'target_group_arn': 'arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/alb-test-2-98b7f374/bf43c68602c51c02', 'weight': 1}]}, 'target_group_arn': 'arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/alb-test-2-98b7f374/bf43c68602c51c02', 'type': 'forward'}]\"",
            "suboptions": {
              "forward_config": {
                "description": "Information for creating an action that distributes requests among one or more target groups.",
                "type": "dictionary",
                "returned": "when state=present",
                "suboptions": {
                  "target_group_stickiness_config": {
                    "description": "The target group stickiness for the rule.",
                    "type": "dictionary",
                    "returned": "when state=present",
                    "suboptions": {
                      "enabled": {
                        "description": "Indicates whether target group stickiness is enabled.",
                        "type": "boolean",
                        "returned": "when state=present"
                      }
                    }
                  },
                  "target_groups": {
                    "description": "The target groups.",
                    "type": "dictionary",
                    "returned": "when state=present",
                    "suboptions": {
                      "target_group_arn": {
                        "description": "The Amazon Resource Name (ARN) of the target group.",
                        "type": "string",
                        "returned": "when state=present"
                      },
                      "weight": {
                        "description": "The weight.",
                        "type": "integer",
                        "returned": "when state=present"
                      }
                    }
                  }
                }
              },
              "target_group_arn": {
                "description": "The Amazon Resource Name (ARN) of the target group.",
                "type": "string",
                "returned": "when state=present",
                "sample": "\"arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/alb-test-169eb5ba/09ba111f8079fb83\""
              },
              "type": {
                "description": "The type of action.",
                "type": "string",
                "returned": "when state=present",
                "sample": "\"forward\""
              }
            }
          },
          "listener_arn": {
            "description": "The Amazon Resource Name (ARN) of the listener.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"arn:aws:elasticloadbalancing:us-east-1:123456789012:listener/app/alb-test-169eb5ba/1659336d4100d496/8367c4262cc1d0cc\""
          },
          "load_balancer_arn": {
            "description": "The Amazon Resource Name (ARN) of the load balancer.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"arn:aws:elasticloadbalancing:us-east-1:123456789012:loadbalancer/app/alb-test-169eb5ba/1659336d4100d496\""
          },
          "port": {
            "description": "The port on which the load balancer is listening.",
            "type": "integer",
            "returned": "when state=present",
            "sample": "80"
          },
          "protocol": {
            "description": "The protocol for connections from clients to the load balancer.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"HTTPS\""
          },
          "rules": {
            "description": "List of listener rules.",
            "type": "list",
            "returned": "when state=present",
            "elements": "elements=dictionary",
            "suboptions": {
              "actions": {
                "description": "The actions.",
                "type": "list",
                "returned": "when state=present",
                "elements": "elements=dictionary",
                "sample": "[{\"forward_config\": {\"target_group_stickiness_config\": {\"enabled\": false}, \"target_groups\": [{\"target_group_arn\": \"arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/alb-test-169eb/09ba111f8079fb83\", \"weight\": 1}]}, \"target_group_arn\": \"arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/alb-test-169eb/09ba111f8079fb83\", \"type\": \"forward\"}]",
                "suboptions": {
                  "forward_config": {
                    "description": "Information for creating an action that distributes requests among one or more target groups.",
                    "type": "dictionary",
                    "returned": "when state=present",
                    "suboptions": {
                      "target_group_stickiness_config": {
                        "description": "The target group stickiness for the rule.",
                        "type": "dictionary",
                        "returned": "when state=present",
                        "suboptions": {
                          "enabled": {
                            "description": "Indicates whether target group stickiness is enabled.",
                            "type": "boolean",
                            "returned": "when state=present"
                          }
                        }
                      },
                      "target_groups": {
                        "description": "The target groups.",
                        "type": "dictionary",
                        "returned": "when state=present",
                        "suboptions": {
                          "target_group_arn": {
                            "description": "The Amazon Resource Name (ARN) of the target group.",
                            "type": "string",
                            "returned": "when state=present"
                          },
                          "weight": {
                            "description": "The weight.",
                            "type": "integer",
                            "returned": "when state=present"
                          }
                        }
                      }
                    }
                  },
                  "target_group_arn": {
                    "description": "The Amazon Resource Name (ARN) of the target group.",
                    "type": "string",
                    "returned": "when state=present"
                  },
                  "type": {
                    "description": "The type of action.",
                    "type": "string",
                    "returned": "when state=present"
                  }
                }
              },
              "conditions": {
                "description": "The conditions.",
                "type": "list",
                "returned": "when state=present",
                "elements": "elements=string",
                "sample": "[]"
              },
              "is_default": {
                "description": "Indicates whether this is the default rule.",
                "type": "boolean",
                "returned": "when state=present",
                "sample": "false"
              },
              "priority": {
                "description": "The priority.",
                "type": "string",
                "returned": "when state=present",
                "sample": "\"default\""
              },
              "rule_arn": {
                "description": "The Amazon Resource Name (ARN) of the rule.",
                "type": "string",
                "returned": "when state=present",
                "sample": "\"\""
              }
            }
          },
          "ssl_policy": {
            "description": "The security policy that defines which ciphers and protocols are supported.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"ELBSecurityPolicy-2016-08\""
          }
        }
      },
      "load_balancer_arn": {
        "description": "The Amazon Resource Name (ARN) of the load balancer.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"arn:aws:elasticloadbalancing:ap-southeast-2:123456789012:loadbalancer/app/my-alb/001122334455\""
      },
      "load_balancer_name": {
        "description": "The name of the load balancer.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"my-alb\""
      },
      "load_balancing_cross_zone_enabled": {
        "description": "Indicates whether cross-zone load balancing is enabled.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"true\""
      },
      "routing_http2_enabled": {
        "description": "Indicates whether HTTP/2 is enabled.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"true\""
      },
      "routing_http_desync_mitigation_mode": {
        "description": "Determines how the load balancer handles requests that might pose a security risk to an application.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"defensive\""
      },
      "routing_http_drop_invalid_header_fields_enabled": {
        "description": "Indicates whether HTTP headers with invalid header fields are removed by the load balancer (true) or routed to targets (false).",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"false\""
      },
      "routing_http_preserve_host_header_enabled": {
        "description": "Indicates whether the Application Load Balancer should preserve the Host header in the HTTP request and send it to the target without any change.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"false\""
      },
      "routing_http_x_amzn_tls_version_and_cipher_suite_enabled": {
        "description": "Indicates whether the two headers are added to the client request before sending it to the target.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"false\""
      },
      "routing_http_xff_client_port_enabled": {
        "description": "Indicates whether the X-Forwarded-For header should preserve the source port that the client used to connect to the load balancer.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"false\""
      },
      "routing_http_xff_header_processing_mode": {
        "description": "Enables you to modify, preserve, or remove the X-Forwarded-For header in the HTTP request before the Application Load Balancer sends the request to the target.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"append\""
      },
      "scheme": {
        "description": "Internet-facing or internal load balancer.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"internal\""
      },
      "security_groups": {
        "description": "The IDs of the security groups for the load balancer.",
        "type": "list",
        "returned": "when state=present",
        "elements": "elements=string",
        "sample": "[\"sg-0011223344\"]"
      },
      "state": {
        "description": "The state of the load balancer.",
        "type": "dictionary",
        "returned": "when state=present",
        "sample": "{\"code\": \"active\"}",
        "suboptions": {
          "code": {
            "description": "The state code.",
            "type": "string",
            "returned": "success"
          },
          "reason": {
            "description": "A description of the state.",
            "type": "string",
            "returned": "when available"
          }
        }
      },
      "tags": {
        "description": "The tags attached to the load balancer.",
        "type": "dictionary",
        "returned": "when state=present",
        "sample": "{\"Tag\": \"Example\"}"
      },
      "type": {
        "description": "The type of load balancer.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"application\""
      },
      "vpc_id": {
        "description": "The ID of the VPC for the load balancer.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"vpc-0011223344\""
      },
      "waf_fail_open_enabled": {
        "description": "Indicates whether to allow a AWS WAF-enabled load balancer to route requests to targets if it is unable to forward the request to AWS WAF.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"false\""
      }
    }
  },
  "elb_application_lb_info": {
    "description": "Gather information about Application Load Balancers in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/elb_application_lb_info_module.html#ansible-collections-amazon-aws-elb-application-lb-info-module",
    "return_values": {
      "load_balancers": {
        "description": "A list of load balancers.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "access_logs_s3_bucket": {
            "description": "The name of the S3 bucket for the access logs.",
            "type": "string",
            "returned": "when include_attributes=true",
            "sample": "\"mys3bucket\""
          },
          "access_logs_s3_enabled": {
            "description": "Indicates whether access logs stored in Amazon S3 are enabled.",
            "type": "string",
            "returned": "when include_attributes=true",
            "sample": "\"true\""
          },
          "access_logs_s3_prefix": {
            "description": "The prefix for the location in the S3 bucket.",
            "type": "string",
            "returned": "when include_attributes=true",
            "sample": "\"my/logs\""
          },
          "availability_zones": {
            "description": "The Availability Zones for the load balancer.",
            "type": "list",
            "returned": "success",
            "elements": "elements=dictionary",
            "sample": "[{\"load_balancer_addresses\": [], \"subnet_id\": \"subnet-aabbccddff\", \"zone_name\": \"ap-southeast-2a\"}]",
            "suboptions": {
              "load_balancer_addresses": {
                "description": "Information about static IP addresses for a load balancer.",
                "type": "list",
                "returned": "success",
                "elements": "elements=dictionary",
                "suboptions": {
                  "allocation_id": {
                    "description": "The allocation ID of the Elastic IP address for an internal-facing load balancer.",
                    "type": "string",
                    "returned": "success"
                  },
                  "ip_address": {
                    "description": "The static IP address.",
                    "type": "string",
                    "returned": "success"
                  },
                  "ipv6_address": {
                    "description": "The IPv6 address.",
                    "type": "string",
                    "returned": "success"
                  },
                  "private_ipv4_address": {
                    "description": "The private IPv4 address for an internal load balancer.",
                    "type": "string",
                    "returned": "success"
                  }
                }
              },
              "subnet_id": {
                "description": "The ID of the subnet.",
                "type": "string",
                "returned": "success"
              },
              "zone_name": {
                "description": "The name of the Availability Zone.",
                "type": "string",
                "returned": "success"
              }
            }
          },
          "canonical_hosted_zone_id": {
            "description": "The ID of the Amazon Route 53 hosted zone associated with the load balancer.",
            "type": "string",
            "returned": "success",
            "sample": "\"ABCDEF12345678\""
          },
          "created_time": {
            "description": "The date and time the load balancer was created.",
            "type": "string",
            "returned": "success",
            "sample": "\"2015-02-12T02:14:02+00:00\""
          },
          "deletion_protection_enabled": {
            "description": "Indicates whether deletion protection is enabled.",
            "type": "boolean",
            "returned": "when include_attributes=true",
            "sample": "true"
          },
          "dns_name": {
            "description": "The public DNS name of the load balancer.",
            "type": "string",
            "returned": "success",
            "sample": "\"internal-my-alb-123456789.ap-southeast-2.elb.amazonaws.com\""
          },
          "idle_timeout_timeout_seconds": {
            "description": "The idle timeout value, in seconds.",
            "type": "integer",
            "returned": "when include_attributes=true",
            "sample": "60"
          },
          "ip_address_type": {
            "description": "The type of IP addresses used by the subnets for the load balancer.",
            "type": "string",
            "returned": "success",
            "sample": "\"ipv4\""
          },
          "listeners": {
            "description": "Information about the listeners.",
            "type": "complex",
            "returned": "when include_listeners=true or include_listener_rules=true",
            "suboptions": {
              "certificates": {
                "description": "The SSL server certificate.",
                "type": "list",
                "returned": "success",
                "elements": "elements=dictionary",
                "suboptions": {
                  "certificate_arn": {
                    "description": "The Amazon Resource Name (ARN) of the certificate.",
                    "type": "string",
                    "returned": "success",
                    "sample": "\"arn:aws:acm:us-east-1:123456789012:certificate/28d2f3d9-cb2f-4033-a9aa-e75e704125a2\""
                  }
                }
              },
              "default_actions": {
                "description": "The default actions for the listener.",
                "type": "string",
                "returned": "success",
                "sample": "\"[{'forward_config': {'target_group_stickiness_config': {'enabled': False}, 'target_groups': [{'target_group_arn': 'arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/alb-test/bf43c68602c51c02', 'weight': 1}]}, 'target_group_arn': 'arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/alb-test/bf43c68602c51c02', 'type': 'forward'}]\"",
                "suboptions": {
                  "forward_config": {
                    "description": "Information for creating an action that distributes requests among one or more target groups.",
                    "type": "dictionary",
                    "returned": "success",
                    "suboptions": {
                      "target_group_stickiness_config": {
                        "description": "The target group stickiness for the rule.",
                        "type": "dictionary",
                        "returned": "success",
                        "suboptions": {
                          "enabled": {
                            "description": "Indicates whether target group stickiness is enabled.",
                            "type": "boolean",
                            "returned": "success"
                          }
                        }
                      },
                      "target_groups": {
                        "description": "The target groups.",
                        "type": "dictionary",
                        "returned": "success",
                        "suboptions": {
                          "target_groups": {
                            "description": "The Amazon Resource Name (ARN) of the target group.",
                            "type": "string",
                            "returned": "success"
                          },
                          "weight": {
                            "description": "The weight.",
                            "type": "integer",
                            "returned": "success"
                          }
                        }
                      }
                    }
                  },
                  "target_group_arn": {
                    "description": "The Amazon Resource Name (ARN) of the target group.",
                    "type": "string",
                    "returned": "success"
                  },
                  "type": {
                    "description": "The type of action.",
                    "type": "string",
                    "returned": "success"
                  }
                }
              },
              "listener_arn": {
                "description": "The Amazon Resource Name (ARN) of the listener.",
                "type": "string",
                "returned": "success",
                "sample": "\"\""
              },
              "load_balancer_arn": {
                "description": "The Amazon Resource Name (ARN) of the load balancer.",
                "type": "string",
                "returned": "success",
                "sample": "\"\""
              },
              "port": {
                "description": "The port on which the load balancer is listening.",
                "type": "integer",
                "returned": "success",
                "sample": "80"
              },
              "protocol": {
                "description": "The protocol for connections from clients to the load balancer.",
                "type": "string",
                "returned": "success",
                "sample": "\"HTTPS\""
              },
              "rules": {
                "description": "List of listener rules.",
                "type": "list",
                "returned": "when include_listener_rules=true",
                "elements": "elements=dictionary",
                "suboptions": {
                  "actions": {
                    "description": "The actions.",
                    "type": "list",
                    "returned": "success",
                    "elements": "elements=dictionary",
                    "sample": "[{\"forward_config\": {\"target_group_stickiness_config\": {\"enabled\": false}, \"target_groups\": [{\"target_group_arn\": \"arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/alb-test/09ba111f8079fb83\", \"weight\": 1}]}, \"target_group_arn\": \"arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/alb-test/09ba111f8079fb83\", \"type\": \"forward\"}]",
                    "suboptions": {
                      "forward_config": {
                        "description": "Information for creating an action that distributes requests among one or more target groups.",
                        "type": "dictionary",
                        "returned": "success",
                        "suboptions": {
                          "target_group_stickiness_config": {
                            "description": "The target group stickiness for the rule.",
                            "type": "dictionary",
                            "returned": "success",
                            "suboptions": {
                              "enabled": {
                                "description": "Indicates whether target group stickiness is enabled.",
                                "type": "boolean",
                                "returned": "success"
                              }
                            }
                          },
                          "target_groups": {
                            "description": "The target groups.",
                            "type": "dictionary",
                            "returned": "success",
                            "suboptions": {
                              "target_group_arn": {
                                "description": "The Amazon Resource Name (ARN) of the target group.",
                                "type": "string",
                                "returned": "success"
                              },
                              "weight": {
                                "description": "The weight.",
                                "type": "integer",
                                "returned": "success"
                              }
                            }
                          }
                        }
                      },
                      "target_group_arn": {
                        "description": "The Amazon Resource Name (ARN) of the target group.",
                        "type": "string",
                        "returned": "success"
                      },
                      "type": {
                        "description": "The type of action.",
                        "type": "string",
                        "returned": "success"
                      }
                    }
                  },
                  "conditions": {
                    "description": "The conditions.",
                    "type": "list",
                    "returned": "success",
                    "elements": "elements=string",
                    "sample": "[]"
                  },
                  "is_default": {
                    "description": "Indicates whether this is the default rule.",
                    "type": "boolean",
                    "returned": "success",
                    "sample": "false"
                  },
                  "priority": {
                    "description": "The priority.",
                    "type": "string",
                    "returned": "success",
                    "sample": "\"default\""
                  },
                  "rule_arn": {
                    "description": "The Amazon Resource Name (ARN) of the rule.",
                    "type": "string",
                    "returned": "success",
                    "sample": "\"\""
                  }
                }
              },
              "ssl_policy": {
                "description": "The security policy that defines which ciphers and protocols are supported.",
                "type": "string",
                "returned": "success",
                "sample": "\"ELBSecurityPolicy-2016-08\""
              }
            }
          },
          "load_balancer_arn": {
            "description": "The Amazon Resource Name (ARN) of the load balancer.",
            "type": "string",
            "returned": "success",
            "sample": "\"arn:aws:elasticloadbalancing:ap-southeast-2:123456789012:loadbalancer/app/my-alb/001122334455\""
          },
          "load_balancer_name": {
            "description": "The name of the load balancer.",
            "type": "string",
            "returned": "success",
            "sample": "\"my-alb\""
          },
          "load_balancing_cross_zone_enabled": {
            "description": "Indicates whether or not cross-zone load balancing is enabled.",
            "type": "string",
            "returned": "when include_attributes=true",
            "sample": "\"true\""
          },
          "routing_http2_enabled": {
            "description": "Indicates whether HTTP/2 is enabled.",
            "type": "string",
            "returned": "when include_attributes=true",
            "sample": "\"true\""
          },
          "routing_http_desync_mitigation_mode": {
            "description": "Determines how the load balancer handles requests that might pose a security risk to an application.",
            "type": "string",
            "returned": "when include_attributes=true",
            "sample": "\"defensive\""
          },
          "routing_http_drop_invalid_header_fields_enabled": {
            "description": "Indicates whether HTTP headers with invalid header fields are removed by the load balancer (true) or routed to targets (false).",
            "type": "string",
            "returned": "when include_attributes=true",
            "sample": "\"false\""
          },
          "routing_http_x_amzn_tls_version_and_cipher_suite_enabled": {
            "description": "Indicates whether the two headers are added to the client request before sending it to the target.",
            "type": "string",
            "returned": "when include_attributes=true",
            "sample": "\"false\""
          },
          "routing_http_xff_client_port_enabled": {
            "description": "Indicates whether the X-Forwarded-For header should preserve the source port that the client used to connect to the load balancer.",
            "type": "string",
            "returned": "when include_attributes=true",
            "sample": "\"false\""
          },
          "scheme": {
            "description": "Internet-facing or internal load balancer.",
            "type": "string",
            "returned": "success",
            "sample": "\"internal\""
          },
          "security_groups": {
            "description": "The IDs of the security groups for the load balancer.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[\"sg-0011223344\"]"
          },
          "state": {
            "description": "The state of the load balancer.",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"code\": \"active\"}",
            "suboptions": {
              "code": {
                "description": "The state code.",
                "type": "string",
                "returned": "success"
              },
              "reason": {
                "description": "A description of the state.",
                "type": "string",
                "returned": "when available"
              }
            }
          },
          "tags": {
            "description": "The tags attached to the load balancer.",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"Tag\": \"Example\"}"
          },
          "type": {
            "description": "The type of load balancer.",
            "type": "string",
            "returned": "success",
            "sample": "\"application\""
          },
          "vpc_id": {
            "description": "The ID of the VPC for the load balancer.",
            "type": "string",
            "returned": "success",
            "sample": "\"vpc-0011223344\""
          },
          "waf_fail_open_enabled": {
            "description": "Indicates whether to allow a AWS WAF-enabled load balancer to route requests to targets if it is unable to forward the request to AWS WAF.",
            "type": "string",
            "returned": "when include_attributes=true",
            "sample": "\"false\""
          }
        }
      }
    }
  },
  "elb_classic_lb": {
    "description": "Creates, updates or destroys an Amazon ELB",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/elb_classic_lb_module.html#ansible-collections-amazon-aws-elb-classic-lb-module",
    "return_values": {
      "elb": {
        "description": "Original boto-style Load Balancer attributes.",
        "type": "dictionary",
        "returned": "always",
        "suboptions": {
          "app_cookie_policy": {
            "description": "The name of the policy used to control if the ELB is using a application cookie stickiness policy.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"ec2-elb-lb-AppCookieStickinessPolicyType\""
          },
          "backends": {
            "description": "A description of the backend policy applied to the ELB (instance-port:policy-name).",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"8181:ProxyProtocol-policy\""
          },
          "connection_draining_timeout": {
            "description": "The maximum time, in seconds, to keep the existing connections open before deregistering the instances.",
            "type": "integer",
            "returned": "when state=present",
            "sample": "25"
          },
          "cross_az_load_balancing": {
            "description": "Either \"yes\" if cross-AZ load balancing is enabled, or \"no\" if cross-AZ load balancing is disabled.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"yes\""
          },
          "dns_name": {
            "description": "The DNS name of the ELB.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"internal-ansible-test-935c585850ac-1516306744.us-east-1.elb.amazonaws.com\""
          },
          "health_check": {
            "description": "A dictionary describing the health check used for the ELB.",
            "type": "dictionary",
            "returned": "when state=present",
            "suboptions": {
              "healthy_threshold": {
                "description": "The number of consecutive successful health checks before marking an instance as healthy.",
                "type": "integer",
                "returned": "success",
                "sample": "2"
              },
              "interval": {
                "description": "The time, in seconds, between each health check.",
                "type": "integer",
                "returned": "success",
                "sample": "10"
              },
              "target": {
                "description": "The Protocol, Port, and for HTTP(S) health checks the path tested by the health check.",
                "type": "string",
                "returned": "success",
                "sample": "\"TCP:22\""
              },
              "timeout": {
                "description": "The time, in seconds, after which an in progress health check is considered failed due to a timeout.",
                "type": "integer",
                "returned": "success",
                "sample": "5"
              },
              "unhealthy_threshold": {
                "description": "The number of consecutive failed health checks before marking an instance as unhealthy.",
                "type": "integer",
                "returned": "success",
                "sample": "2"
              }
            }
          },
          "hosted_zone_id": {
            "description": "The ID of the Amazon Route 53 hosted zone for the load balancer.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"Z35SXDOTRQ7X7K\""
          },
          "hosted_zone_name": {
            "description": "The DNS name of the load balancer when using a custom hostname.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"ansible-module.example\""
          },
          "idle_timeout": {
            "description": "The length of of time before an idle connection is dropped by the ELB.",
            "type": "integer",
            "returned": "when state=present",
            "sample": "50"
          },
          "in_service_count": {
            "description": "The number of instances attached to the ELB in an in-service state.",
            "type": "integer",
            "returned": "when state=present",
            "sample": "1"
          },
          "instance_health": {
            "description": "A list of dictionaries describing the health of each instance attached to the ELB.",
            "type": "list",
            "returned": "when state=present",
            "elements": "elements=dictionary",
            "suboptions": {
              "description": {
                "description": "A human readable description of why the instance is not in service.",
                "type": "string",
                "returned": "when state=present",
                "sample": "\"N/A\""
              },
              "instance_id": {
                "description": "The ID of the instance.",
                "type": "string",
                "returned": "when state=present",
                "sample": "\"i-03dcc8953a03d6435\""
              },
              "reason_code": {
                "description": "A code describing why the instance is not in service.",
                "type": "string",
                "returned": "when state=present",
                "sample": "\"N/A\""
              },
              "state": {
                "description": "The current service state of the instance.",
                "type": "string",
                "returned": "when state=present",
                "sample": "\"InService\""
              }
            }
          },
          "instances": {
            "description": "A list of the IDs of instances attached to the ELB.",
            "type": "list",
            "returned": "when state=present",
            "elements": "elements=string",
            "sample": "[\"i-03dcc8953a03d6435\"]"
          },
          "lb_cookie_policy": {
            "description": "The name of the policy used to control if the ELB is using a cookie stickiness policy.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"ec2-elb-lb-LBCookieStickinessPolicyType\""
          },
          "listeners": {
            "description": "A list of lists describing the listeners attached to the ELB. The nested list contains the listener port, the instance port, the listener protoco, the instance port, and where appropriate the ID of the SSL certificate for the port.",
            "type": "list",
            "returned": "when state=present",
            "elements": "elements=list",
            "sample": "[[22, 22, \"TCP\", \"TCP\"], [80, 8181, \"HTTP\", \"HTTP\"]]"
          },
          "name": {
            "description": "The name of the ELB. This name is unique per-region, per-account.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"ansible-test-935c585850ac\""
          },
          "out_of_service_count": {
            "description": "The number of instances attached to the ELB in an out-of-service state.",
            "type": "integer",
            "returned": "when state=present",
            "sample": "0"
          },
          "proxy_policy": {
            "description": "The name of the policy used to control if the ELB operates using the Proxy protocol.",
            "type": "string",
            "returned": "when the proxy protocol policy exists.",
            "sample": "\"ProxyProtocol-policy\""
          },
          "region": {
            "description": "The AWS region in which the ELB is running.",
            "type": "string",
            "returned": "always",
            "sample": "\"us-east-1\""
          },
          "scheme": {
            "description": "Whether the ELB is an 'internal' or a 'internet-facing' load balancer.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"internal\""
          },
          "security_group_ids": {
            "description": "A list of the IDs of the Security Groups attached to the ELB.",
            "type": "list",
            "returned": "when state=present",
            "elements": "elements=string",
            "sample": "[\"sg-0c12ebd82f2fb97dc\", \"sg-01ec7378d0c7342e6\"]"
          },
          "status": {
            "description": "A minimal description of the current state of the ELB. Valid values are 'exists', 'gone', 'deleted', 'created'.",
            "type": "string",
            "returned": "always",
            "sample": "\"exists\""
          },
          "subnets": {
            "description": "A list of the subnet IDs attached to the ELB.",
            "type": "list",
            "returned": "when state=present",
            "elements": "elements=string",
            "sample": "[\"subnet-00d9d0f70c7e5f63c\", \"subnet-03fa5253586b2d2d5\"]"
          },
          "tags": {
            "description": "A dictionary describing the tags attached to the ELB.",
            "type": "dictionary",
            "returned": "when state=present",
            "sample": "{\"ExampleTag\": \"Example Value\", \"Name\": \"ansible-test-935c585850ac\"}"
          },
          "unknown_instance_state_count": {
            "description": "The number of instances attached to the ELB in an unknown state.",
            "type": "integer",
            "returned": "when state=present",
            "sample": "0"
          },
          "zones": {
            "description": "A list of the AWS regions in which the ELB is running.",
            "type": "list",
            "returned": "when state=present",
            "elements": "elements=string",
            "sample": "[\"us-east-1b\", \"us-east-1a\"]"
          }
        }
      },
      "load_balancer": {
        "description": "Boto3-style Load Balancer attributes.",
        "type": "dictionary",
        "returned": "always",
        "suboptions": {
          "availability_zone": {
            "description": "A list of the AWS regions in which the ELB is running.",
            "type": "list",
            "returned": "when state=present",
            "elements": "elements=string",
            "sample": "[\"us-east-1b\", \"us-east-1a\"]"
          },
          "backend_server_descriptions": {
            "description": "Information about your EC2 instances.",
            "type": "list",
            "returned": "when state=present",
            "elements": "elements=dictionary",
            "sample": "[]",
            "suboptions": {
              "instance_port": {
                "description": "The port on which the EC2 instance is listening.",
                "type": "integer",
                "returned": "when state=present"
              },
              "policy_names": {
                "description": "The names of the policies enabled for the EC2 instance.",
                "type": "list",
                "returned": "when state=present",
                "elements": "elements=string"
              }
            }
          },
          "canonical_hosted_zone_id": {
            "description": "The ID of the Amazon Route 53 hosted zone for the load balancer.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"Z35SXDOTRQ7X7K\""
          },
          "created_time": {
            "description": "The date and time the load balancer was created.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"2024-06-27T10:18:48.390000+00:00\""
          },
          "dns_name": {
            "description": "The DNS name of the ELB.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"internal-ansible-test-935c585850ac-1516306744.us-east-1.elb.amazonaws.com\""
          },
          "health_check": {
            "description": "Information about the health checks conducted on the load balancer.",
            "type": "dictionary",
            "returned": "when state=present",
            "suboptions": {
              "healthy_threshold": {
                "description": "The number of consecutive successful health checks before marking an instance as healthy.",
                "type": "integer",
                "returned": "success",
                "sample": "2"
              },
              "interval": {
                "description": "The time, in seconds, between each health check.",
                "type": "integer",
                "returned": "success",
                "sample": "10"
              },
              "target": {
                "description": "The Protocol, Port, and for HTTP(S) health checks the path tested by the health check.",
                "type": "string",
                "returned": "success",
                "sample": "\"TCP:22\""
              },
              "timeout": {
                "description": "The time, in seconds, after which an in progress health check is considered failed due to a timeout.",
                "type": "integer",
                "returned": "success",
                "sample": "5"
              },
              "unhealthy_threshold": {
                "description": "The number of consecutive failed health checks before marking an instance as unhealthy.",
                "type": "integer",
                "returned": "success",
                "sample": "2"
              }
            }
          },
          "instances": {
            "description": "The IDs of the instances for the load balancer.",
            "type": "list",
            "returned": "when state=present",
            "elements": "elements=dictionary",
            "sample": "[]",
            "suboptions": {
              "instance_id": {
                "description": "The instance ID.",
                "type": "string",
                "returned": "success"
              }
            }
          },
          "listener_descriptions": {
            "description": "The listeners for the load balancer.",
            "type": "list",
            "returned": "when state=present",
            "elements": "elements=dictionary",
            "sample": "[{\"listener\": {\"instance_port\": 8080, \"instance_protocol\": \"HTTP\", \"load_balancer_port\": 8080, \"protocol\": \"HTTP\"}, \"policy_names\": []}]",
            "suboptions": {
              "listener": {
                "description": "The listener.",
                "type": "dictionary",
                "returned": "when state=present",
                "suboptions": {
                  "instance_port": {
                    "description": "The port on which the instance is listening.",
                    "type": "integer",
                    "returned": "when state=present"
                  },
                  "instance_protocol": {
                    "description": "The protocol to use for routing traffic to instances.",
                    "type": "string",
                    "returned": "when state=present"
                  },
                  "load_balancer_port": {
                    "description": "The port on which the load balancer is listening.",
                    "type": "integer",
                    "returned": "when state=present"
                  },
                  "protocol": {
                    "description": "The load balancer transport protocol to use for routing: HTTP, HTTPS, TCP, or SSL.",
                    "type": "string",
                    "returned": "when state=present"
                  }
                }
              },
              "policy_names": {
                "description": "The policies. If there are no policies enabled, the list is empty.",
                "type": "list",
                "returned": "when state=present",
                "elements": "elements=string"
              }
            }
          },
          "load_balancer_attributes": {
            "description": "The listeners for the load balancer.",
            "type": "list",
            "returned": "when state=present",
            "elements": "elements=dictionary",
            "suboptions": {
              "access_log": {
                "description": "If enabled, the load balancer captures detailed information of all requests and delivers the information to the Amazon S3 bucket that you specify.",
                "type": "dictionary",
                "returned": "when state=present",
                "suboptions": {
                  "emit_interval": {
                    "description": "The interval for publishing the access logs.",
                    "type": "integer",
                    "returned": "success",
                    "sample": "60"
                  },
                  "enabled": {
                    "description": "Specifies whether access logs are enabled for the load balancer.",
                    "type": "boolean",
                    "returned": "success",
                    "sample": "false"
                  },
                  "s3_bucket_name": {
                    "description": "The name of the Amazon S3 bucket where the access logs are stored.",
                    "type": "string",
                    "returned": "success",
                    "sample": "\"\""
                  },
                  "s3_bucket_prefix": {
                    "description": "The logical hierarchy you created for your Amazon S3 bucket.",
                    "type": "string",
                    "returned": "success",
                    "sample": "\"\""
                  }
                }
              },
              "addtional_attributes": {
                "description": "Any additional attributes.",
                "type": "list",
                "returned": "when state=present",
                "elements": "elements=dictionary",
                "sample": "[{\"key\": \"elb.http.desyncmitigationmode\", \"value\": \"defensive\"}]"
              },
              "connection_draining": {
                "description": "If enabled, the load balancer allows existing requests to complete before the load balancer shifts traffic away from a deregistered or unhealthy instance.",
                "type": "dictionary",
                "returned": "when state=present",
                "sample": "{\"enabled\": false, \"timeout\": 300}",
                "suboptions": {
                  "enabled": {
                    "description": "Specifies whether connection draining is enabled for the load balancer.",
                    "type": "boolean",
                    "returned": "success"
                  },
                  "timeout": {
                    "description": "The maximum time, in seconds, to keep the existing connections open before deregistering the instances.",
                    "type": "integer",
                    "returned": "success"
                  }
                }
              },
              "connection_settings": {
                "description": "If enabled, the load balancer allows the connections to remain idle (no data is sent over the connection) for the specified duration",
                "type": "dictionary",
                "returned": "when state=present",
                "sample": "{\"idle_timeout\": 60}",
                "suboptions": {
                  "idle_timeout": {
                    "description": "The time, in seconds, that the connection is allowed to be idle (no data has been sent over the connection) before it is closed by the load balancer.",
                    "type": "integer",
                    "returned": "success"
                  }
                }
              },
              "cross_zone_load_balancing": {
                "description": "If enabled, the load balancer routes the request traffic evenly across all instances regardless of the Availability Zones.",
                "type": "dictionary",
                "returned": "when state=present",
                "sample": "{\"enabled\": false}",
                "suboptions": {
                  "enabled": {
                    "description": "Specifies whether cross-zone load balancing is enabled for the load balancer.",
                    "type": "boolean",
                    "returned": "when state=present"
                  }
                }
              }
            }
          },
          "load_balancer_name": {
            "description": "The name of the ELB.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"ansible-test-935c585850ac\""
          },
          "load_balancer_policies": {
            "description": "Information about the policies.",
            "type": "list",
            "returned": "when state=present",
            "elements": "elements=dictionary",
            "sample": "[]",
            "suboptions": {
              "policy_attributes_description": {
                "description": "Information about a policy attribute.",
                "type": "dictionary",
                "returned": "when state=present",
                "suboptions": {
                  "attribute_name": {
                    "description": "The name of the attribute.",
                    "type": "string",
                    "returned": "when state=present"
                  },
                  "attribute_value": {
                    "description": "The value of the attribute.",
                    "type": "string",
                    "returned": "when state=present"
                  }
                }
              },
              "policy_name": {
                "description": "The name of the policy.",
                "type": "string",
                "returned": "when state=present"
              },
              "policy_type_name": {
                "description": "The name of the policy type.",
                "type": "string",
                "returned": "when state=present"
              }
            }
          },
          "policies": {
            "description": "The policies defined for the load balancer.",
            "type": "dictionary",
            "returned": "when state=present",
            "suboptions": {
              "app_cookie_stickiness_policies": {
                "description": "The stickiness policies created using CreateAppCookieStickinessPolicy.",
                "type": "list",
                "returned": "when state=present",
                "elements": "elements=dictionary",
                "suboptions": {
                  "cookie_name": {
                    "description": "The name of the application cookie used for stickiness.",
                    "type": "string",
                    "returned": "when state=present",
                    "sample": "\"\""
                  },
                  "policy_name": {
                    "description": "The mnemonic name for the policy being created.",
                    "type": "string",
                    "returned": "when state=present",
                    "sample": "\"\""
                  }
                }
              },
              "lb_cookie_stickiness_policies": {
                "description": "The stickiness policies created using CreateLBCookieStickinessPolicy.",
                "type": "list",
                "returned": "when state=present",
                "elements": "elements=dictionary",
                "suboptions": {
                  "cookie_expiration_period": {
                    "description": "The time period, in seconds, after which the cookie should be considered stale.",
                    "type": "string",
                    "returned": "when state=present",
                    "sample": "\"\""
                  },
                  "policy_name": {
                    "description": "The mnemonic name for the policy being created.",
                    "type": "string",
                    "returned": "when state=present",
                    "sample": "\"\""
                  }
                }
              },
              "other_policies": {
                "description": "The policies other than the stickiness policies.",
                "type": "list",
                "returned": "when state=present",
                "elements": "elements=string",
                "sample": "[]"
              }
            }
          },
          "scheme": {
            "description": "The type of load balancer.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"internal\""
          },
          "security_groups": {
            "description": "The security groups for the load balancer.",
            "type": "list",
            "returned": "when state=present",
            "elements": "elements=string",
            "sample": "[\"sg-0c12ebd82f2fb97dc\", \"sg-01ec7378d0c7342e6\"]"
          },
          "source_security_groups": {
            "description": "The security group for the load balancer, which you can use as part of your inbound rules for your registered instances.",
            "type": "dictionary",
            "returned": "when state=present",
            "sample": "{\"group_name\": \"default\", \"owner_alias\": \"721066863947\"}",
            "suboptions": {
              "group_name": {
                "description": "The name of the security group..",
                "type": "string",
                "returned": "success"
              },
              "owner_alias": {
                "description": "The owner of the security group.",
                "type": "string",
                "returned": "success"
              }
            }
          },
          "subnets": {
            "description": "A list of the subnet IDs attached to the ELB.",
            "type": "list",
            "returned": "when state=present",
            "elements": "elements=string",
            "sample": "[\"subnet-00d9d0f70c7e5f63c\", \"subnet-03fa5253586b2d2d5\"]"
          },
          "tags": {
            "description": "A dictionary describing the tags attached to the ELB.",
            "type": "dictionary",
            "returned": "when state=present",
            "sample": "{\"ExampleTag\": \"Example Value\", \"Name\": \"ansible-test-935c585850ac\"}"
          },
          "vpc_id": {
            "description": "The ID of the VPC for the load balancer.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"vpc-0c112c24b41d89c34\""
          }
        }
      }
    }
  },
  "elb_classic_lb_info": {
    "description": "Gather information about EC2 Classic Elastic Load Balancers in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/elb_classic_lb_info_module.html#ansible-collections-amazon-aws-elb-classic-lb-info-module",
    "return_values": {
      "elbs": {
        "description": "A list of load balancers.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "attributes": {
            "description": "Information about the load balancer attributes.",
            "type": "dictionary",
            "returned": "always",
            "suboptions": {
              "access_log": {
                "description": "Information on whether access logs are enabled or not.",
                "type": "dictionary",
                "returned": "success",
                "sample": "{\"enabled\": false}"
              },
              "additional_attributes": {
                "description": "Information about additional load balancer attributes.",
                "type": "list",
                "returned": "success",
                "elements": "elements=dictionary",
                "sample": "[{\"key\": \"elb.http.desyncmitigationmode\", \"value\": \"defensive\"}]"
              },
              "connection_draining": {
                "description": "Information on connection draining configuration of elastic load balancer.",
                "type": "dictionary",
                "returned": "success",
                "sample": "{\"enabled\": true, \"timeout\": 300}",
                "suboptions": {
                  "enabled": {
                    "description": "Whether connection draining is enabled.",
                    "type": "boolean",
                    "returned": "always"
                  },
                  "timeout": {
                    "description": "The maximum time, in seconds, to keep the existing connections open before deregistering the instances.",
                    "type": "integer",
                    "returned": "always"
                  }
                }
              },
              "connection_settings": {
                "description": "Information on connection settings.",
                "type": "dictionary",
                "returned": "success",
                "sample": "{\"idle_timeout\": 60}"
              },
              "cross_zone_load_balancing": {
                "description": "Information on whether cross zone load balancing is enabled or not.",
                "type": "dictionary",
                "returned": "success",
                "sample": "{\"enabled\": true}"
              }
            }
          },
          "availability_zones": {
            "description": "The Availability Zones for the load balancer.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[\"us-west-2a\"]"
          },
          "backend_server_descriptions": {
            "description": "Information about your EC2 instances.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "sample": "[{\"instance_port\": 8085, \"policy_names\": [\"MyPolicy1\"]}]"
          },
          "canonical_hosted_zone_name": {
            "description": "The DNS name of the load balancer.",
            "type": "string",
            "returned": "always",
            "sample": "\"test-123456789.us-west-2.elb.amazonaws.com\""
          },
          "canonical_hosted_zone_name_id": {
            "description": "The ID of the Amazon Route 53 hosted zone for the load balancer.",
            "type": "string",
            "returned": "always",
            "sample": "\"Z1Z1ZZ5HABSF5\""
          },
          "created_time": {
            "description": "The date and time the load balancer was created.",
            "type": "string",
            "returned": "always",
            "sample": "\"2024-09-04T17:52:22.270000+00:00\""
          },
          "dns_name": {
            "description": "The DNS name of the load balancer.",
            "type": "string",
            "returned": "always",
            "sample": "\"test-123456789.us-west-2.elb.amazonaws.com\""
          },
          "health_check": {
            "description": "Information about the health checks conducted on the load balancer.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"healthy_threshold\": 10, \"interval\": 5, \"target\": \"HTTP:80/index.html\", \"timeout\": 2, \"unhealthy_threshold\": 2}",
            "suboptions": {
              "healthy_threshold": {
                "description": "The number of consecutive health checks successes required before moving the instance to the Healthy state.",
                "type": "integer",
                "returned": "always"
              },
              "interval": {
                "description": "The approximate interval, in seconds, between health checks of an individual instance.",
                "type": "integer",
                "returned": "always"
              },
              "target": {
                "description": "The instance being checked. The protocol is either TCP, HTTP, HTTPS, or SSL. The range of valid ports is one (1) through 65535.",
                "type": "string",
                "returned": "always"
              },
              "timeout": {
                "description": "The amount of time, in seconds, during which no response means a failed health check.",
                "type": "integer",
                "returned": "always"
              },
              "unhealthy_threshold": {
                "description": "The number of consecutive health checks successes required before moving the instance to the Unhealthy state.",
                "type": "integer",
                "returned": "always"
              }
            }
          },
          "instances": {
            "description": "The IDs of the instances for the load balancer.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "sample": "[{\"instance_id\": \"i-11d1f111ea111111b\"}]"
          },
          "instances_inservice": {
            "description": "Information about instances for load balancer in state \u201cInService\u201d.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[\"i-11d1f111ea111111b\"]"
          },
          "instances_inservice_count": {
            "description": "Total number of instances for load balancer with state \u201cInService\u201d.",
            "type": "integer",
            "returned": "always",
            "sample": "1"
          },
          "instances_outofservice": {
            "description": "Information about instances for load balancer in state \u201cOutOfService\u201d.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[\"i-11d1f111ea111111b\"]"
          },
          "instances_outofservice_count": {
            "description": "Total number of instances for load balancer with state \u201cOutOfService\u201d.",
            "type": "integer",
            "returned": "always",
            "sample": "0"
          },
          "instances_unknownservice": {
            "description": "Information about instances for load balancer in state \u201cUnknown\u201d.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[\"i-11d1f111ea111111b\"]"
          },
          "instances_unknownservice_count": {
            "description": "Total number of instances for load balancer with state \u201cUnknown\u201d.",
            "type": "integer",
            "returned": "always",
            "sample": "1"
          },
          "listener_descriptions": {
            "description": "Information about the listeners for the load balancer.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "sample": "[{\"listener\": {\"instance_port\": 80, \"instance_protocol\": \"HTTP\", \"load_balancer_port\": 80, \"protocol\": \"HTTP\"}, \"policy_names\": []}]"
          },
          "load_balancer_name": {
            "description": "The name of the elastic load balancer.",
            "type": "string",
            "returned": "always",
            "sample": "\"MyLoadBalancer\""
          },
          "policies": {
            "description": "Information about the policies defined for the load balancer.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"app_cookie_stickiness_policies\": [], \"lb_cookie_stickiness_policies\": [], \"other_policies\": []}",
            "suboptions": {
              "app_cookie_stickiness_policies": {
                "description": "The stickiness policies created using CreateAppCookieStickinessPolicy.",
                "type": "list",
                "returned": "always",
                "elements": "elements=string"
              },
              "lb_cookie_stickiness_policies": {
                "description": "The stickiness policies created using CreateLBCookieStickinessPolicy.",
                "type": "list",
                "returned": "always",
                "elements": "elements=string"
              },
              "other_policies": {
                "description": "The policies other than the stickiness policies.",
                "type": "list",
                "returned": "always",
                "elements": "elements=string"
              }
            }
          },
          "scheme": {
            "description": "The type of load balancer.",
            "type": "string",
            "returned": "always",
            "sample": "\"internet-facing\""
          },
          "security_groups": {
            "description": "The security groups for the load balancer.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[\"sg-111111af1111cb111\"]"
          },
          "source_security_group": {
            "description": "The security group for the load balancer, which are used as part of inbound rules for registered instances.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"group_name\": \"default\", \"owner_alias\": \"721111111111\"}",
            "suboptions": {
              "group_name": {
                "description": "The name of the security group.",
                "type": "string",
                "returned": "always"
              },
              "owner_alias": {
                "description": "The owner of the security group.",
                "type": "string",
                "returned": "always"
              }
            }
          },
          "subnets": {
            "description": "The IDs of the subnets for the load balancer.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[\"subnet-111111af1111cb111\"]"
          },
          "tags": {
            "description": "The tags associated with a load balancer.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"Env\": \"Dev\", \"Owner\": \"Dev001\"}"
          },
          "vpc_id": {
            "description": "The ID of the VPC for the load balancer.",
            "type": "string",
            "returned": "always",
            "sample": "\"vpc-0cc28c9e20d111111\""
          }
        }
      }
    }
  },
  "iam_access_key": {
    "description": "Manage AWS IAM User access keys",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/iam_access_key_module.html#ansible-collections-amazon-aws-iam-access-key-module",
    "return_values": {
      "access_key": {
        "description": "A dictionary containing all the access key information.",
        "type": "complex",
        "returned": "When the key exists.",
        "suboptions": {
          "access_key_id": {
            "description": "The ID for the access key.",
            "type": "string",
            "returned": "success",
            "sample": "\"AKIA1EXAMPLE1EXAMPLE\""
          },
          "create_date": {
            "description": "The date and time, in ISO 8601 date-time format, when the access key was created.",
            "type": "string",
            "returned": "success",
            "sample": "\"2021-10-09T13:25:42+00:00\""
          },
          "status": {
            "description": "The status of the key. Active means it can be used. Inactive means it can not be used.",
            "type": "string",
            "returned": "success",
            "sample": "\"Inactive\""
          },
          "user_name": {
            "description": "The name of the IAM user to which the key is attached.",
            "type": "string",
            "returned": "success",
            "sample": "\"example_user\""
          }
        }
      },
      "deleted_access_key_id": {
        "description": "The access key deleted during rotation.",
        "type": "string",
        "returned": "When a key was deleted during the rotation of access keys",
        "sample": "\"AKIA1EXAMPLE1EXAMPLE\""
      },
      "secret_access_key": {
        "description": "The secret access key. A secret access key is the equivalent of a password which can not be changed and as such should be considered sensitive data. Secret access keys can only be accessed at creation time.",
        "type": "string",
        "returned": "When a new key is created.",
        "sample": "\"example/Example+EXAMPLE+example/Example\""
      }
    }
  },
  "iam_access_key_info": {
    "description": "fetch information about AWS IAM User access keys",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/iam_access_key_info_module.html#ansible-collections-amazon-aws-iam-access-key-info-module",
    "return_values": {
      "access_key": {
        "description": "A dictionary containing all the access key information.",
        "type": "list",
        "returned": "When the key exists.",
        "elements": "elements=dictionary",
        "suboptions": {
          "access_key_id": {
            "description": "The ID for the access key.",
            "type": "string",
            "returned": "success",
            "sample": "\"AKIA1EXAMPLE1EXAMPLE\""
          },
          "create_date": {
            "description": "The date and time, in ISO 8601 date-time format, when the access key was created.",
            "type": "string",
            "returned": "success",
            "sample": "\"2021-10-09T13:25:42+00:00\""
          },
          "status": {
            "description": "The status of the key. Active means it can be used. Inactive means it can not be used.",
            "type": "string",
            "returned": "success",
            "sample": "\"Inactive\""
          },
          "user_name": {
            "description": "The name of the IAM user to which the key is attached.",
            "type": "string",
            "returned": "success",
            "sample": "\"example_user\""
          }
        }
      }
    }
  },
  "iam_group": {
    "description": "Manage AWS IAM groups",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/iam_group_module.html#ansible-collections-amazon-aws-iam-group-module",
    "return_values": {
      "iam_group": {
        "description": "Dictionary containing all the group information including group membership.",
        "type": "complex",
        "returned": "success",
        "suboptions": {
          "attached_policies": {
            "description": "List containing basic information about managed policies attached to the group.",
            "type": "complex",
            "returned": "success",
            "suboptions": {
              "policy_arn": {
                "description": "The Amazon Resource Name (ARN) specifying the managed policy.",
                "type": "string",
                "returned": "success",
                "sample": "\"arn:aws:iam::123456789012:policy/test_policy\""
              },
              "policy_name": {
                "description": "The friendly name that identifies the policy.",
                "type": "string",
                "returned": "success",
                "sample": "\"test_policy\""
              }
            }
          },
          "group": {
            "description": "Dictionary containing all the group information.",
            "type": "complex",
            "returned": "success",
            "suboptions": {
              "arn": {
                "description": "The Amazon Resource Name (ARN) specifying the group.",
                "type": "string",
                "returned": "success",
                "sample": "\"arn:aws:iam::1234567890:group/testgroup1\""
              },
              "create_date": {
                "description": "The date and time, in ISO 8601 date-time format, when the group was created.",
                "type": "string",
                "returned": "success",
                "sample": "\"2017-02-08T04:36:28+00:00\""
              },
              "group_id": {
                "description": "The stable and unique string identifying the group.",
                "type": "string",
                "returned": "success",
                "sample": "\"AGPA12345EXAMPLE54321\""
              },
              "group_name": {
                "description": "The friendly name that identifies the group.",
                "type": "string",
                "returned": "success",
                "sample": "\"testgroup1\""
              },
              "path": {
                "description": "The path to the group.",
                "type": "string",
                "returned": "success",
                "sample": "\"/\""
              }
            }
          },
          "users": {
            "description": "List containing all the group members.",
            "type": "complex",
            "returned": "success",
            "suboptions": {
              "arn": {
                "description": "The Amazon Resource Name (ARN) specifying the user.",
                "type": "string",
                "returned": "success",
                "sample": "\"arn:aws:iam::1234567890:user/test_user1\""
              },
              "create_date": {
                "description": "The date and time, in ISO 8601 date-time format, when the user was created.",
                "type": "string",
                "returned": "success",
                "sample": "\"2017-02-08T04:36:28+00:00\""
              },
              "path": {
                "description": "The path to the user.",
                "type": "string",
                "returned": "success",
                "sample": "\"/\""
              },
              "user_id": {
                "description": "The stable and unique string identifying the user.",
                "type": "string",
                "returned": "success",
                "sample": "\"AIDA12345EXAMPLE54321\""
              },
              "user_name": {
                "description": "The friendly name that identifies the user.",
                "type": "string",
                "returned": "success",
                "sample": "\"testgroup1\""
              }
            }
          }
        }
      }
    }
  },
  "iam_instance_profile": {
    "description": "manage IAM instance profiles",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/iam_instance_profile_module.html#ansible-collections-amazon-aws-iam-instance-profile-module",
    "return_values": {
      "iam_instance_profile": {
        "description": "List of IAM instance profiles.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "arn": {
            "description": "Amazon Resource Name for the instance profile.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:iam::123456789012:instance-profile/AnsibleTestProfile\""
          },
          "create_date": {
            "description": "Date instance profile was created.",
            "type": "string",
            "returned": "always",
            "sample": "\"2023-01-12T11:18:29+00:00\""
          },
          "instance_profile_id": {
            "description": "Amazon Identifier for the instance profile.",
            "type": "string",
            "returned": "always",
            "sample": "\"AROA12345EXAMPLE54321\""
          },
          "instance_profile_name": {
            "description": "Name of instance profile.",
            "type": "string",
            "returned": "always",
            "sample": "\"AnsibleTestEC2Policy\""
          },
          "path": {
            "description": "Path of instance profile.",
            "type": "string",
            "returned": "always",
            "sample": "\"/\""
          },
          "roles": {
            "description": "List of roles associated with this instance profile.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[]"
          },
          "tags": {
            "description": "Instance profile tags.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"Env\": \"Prod\"}"
          }
        }
      }
    }
  },
  "iam_instance_profile_info": {
    "description": "gather information on IAM instance profiles",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/iam_instance_profile_info_module.html#ansible-collections-amazon-aws-iam-instance-profile-info-module",
    "return_values": {
      "iam_instance_profiles": {
        "description": "List of IAM instance profiles.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "arn": {
            "description": "Amazon Resource Name for the instance profile.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:iam::123456789012:instance-profile/AnsibleTestProfile\""
          },
          "create_date": {
            "description": "Date instance profile was created.",
            "type": "string",
            "returned": "always",
            "sample": "\"2023-01-12T11:18:29+00:00\""
          },
          "instance_profile_id": {
            "description": "Amazon Identifier for the instance profile.",
            "type": "string",
            "returned": "always",
            "sample": "\"AROA12345EXAMPLE54321\""
          },
          "instance_profile_name": {
            "description": "Name of instance profile.",
            "type": "string",
            "returned": "always",
            "sample": "\"AnsibleTestEC2Policy\""
          },
          "path": {
            "description": "Path of instance profile.",
            "type": "string",
            "returned": "always",
            "sample": "\"/\""
          },
          "roles": {
            "description": "List of roles associated with this instance profile.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[{\"arn\": \"arn:aws:iam::721234567890:role/Example-Role-1\", \"assume_role_policy_document\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"create_date\": \"2023-05-08T17:45:27+00:00\", \"path\": \"/\", \"role_id\": \"AAAA0AAAAAAA0AAA0AAAA\", \"role_name\": \"Example-Role-1\", \"tags\": {}}]"
          },
          "tags": {
            "description": "A list of tags that are attached to the instance profile.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"Env\": \"Prod\"}"
          }
        }
      }
    }
  },
  "iam_managed_policy": {
    "description": "Manage User Managed IAM policies",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/iam_managed_policy_module.html#ansible-collections-amazon-aws-iam-managed-policy-module",
    "return_values": {
      "policy": {
        "description": "Returns the basic policy information, when state=absent this will return the value of the removed policy.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "arn": {
            "description": "The Amazon Resource Name (ARN) of the policy.",
            "type": "string",
            "returned": "success",
            "sample": "\"arn:aws:iam::123456789012:policy/ansible-test-12345/ansible-test-12345-policy\""
          },
          "attachment_count": {
            "description": "The number of entities (users, groups, and roles) that the policy is attached to.",
            "type": "integer",
            "returned": "success",
            "sample": "5"
          },
          "create_date": {
            "description": "The date and time, in ISO 8601 date-time format, when the policy was created.",
            "type": "string",
            "returned": "success",
            "sample": "\"2017-02-08T04:36:28+00:00\""
          },
          "default_version_id": {
            "description": "The default policy version to use.",
            "type": "string",
            "returned": "success",
            "sample": "\"/ansible-test-12345/\""
          },
          "description": {
            "description": "A friendly description of the policy.",
            "type": "string",
            "returned": "success",
            "sample": "\"My Example Policy\""
          },
          "is_attachable": {
            "description": "Specifies whether the policy can be attached to an IAM entities.",
            "type": "boolean",
            "returned": "success",
            "sample": "false"
          },
          "path": {
            "description": "The path to the policy.",
            "type": "string",
            "returned": "success",
            "sample": "\"/ansible-test-12345/\""
          },
          "permissions_boundary_usage_count": {
            "description": "The number of IAM entities (users, groups, and roles) using the policy as a permissions boundary.",
            "type": "integer",
            "returned": "success",
            "sample": "5"
          },
          "policy_id": {
            "description": "The stable and globally unique string identifying the policy.",
            "type": "string",
            "returned": "success",
            "sample": "\"ANPA12345EXAMPLE12345\""
          },
          "policy_name": {
            "description": "The friendly name identifying the policy.",
            "type": "string",
            "returned": "success",
            "sample": "\"ansible-test-12345-policy\""
          },
          "tags": {
            "description": "A dictionary representing the tags attached to the managed policy.",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"Env\": \"Prod\"}"
          },
          "update_date": {
            "description": "The date and time, in ISO 8601 date-time format, when the policy was last updated.",
            "type": "string",
            "returned": "success",
            "sample": "\"2017-02-08T05:12:13+00:00\""
          }
        }
      }
    }
  },
  "iam_mfa_device_info": {
    "description": "List the MFA (Multi-Factor Authentication) devices registered for a user",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/iam_mfa_device_info_module.html#ansible-collections-amazon-aws-iam-mfa-device-info-module",
    "return_values": {
      "mfa_devices": {
        "description": "The MFA devices registered for the given user.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "sample": "[{\"enable_date\": \"2016-03-11T23:25:36+00:00\", \"serial_number\": \"arn:aws:iam::123456789012:mfa/example\", \"user_name\": \"example\"}, {\"enable_date\": \"2016-03-11T23:25:37+00:00\", \"serial_number\": \"arn:aws:iam::123456789012:mfa/example\", \"user_name\": \"example\"}]"
      }
    }
  },
  "iam_password_policy": {
    "description": "Update an IAM Password Policy",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/iam_password_policy_module.html#ansible-collections-amazon-aws-iam-password-policy-module",
    "return_values": {}
  },
  "iam_policy": {
    "description": "Manage inline IAM policies for users, groups, and roles",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/iam_policy_module.html#ansible-collections-amazon-aws-iam-policy-module",
    "return_values": {
      "diff": {
        "description": "A dict representing difference between policies applied on IAM resource (user, group, or role).",
        "type": "dictionary",
        "returned": "always",
        "suboptions": {
          "after": {
            "description": "The current policy on IAM resource after new policy is applied.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"READ-ONLY\": {\"Statement\": [{\"Action\": \"ec2:DescribeAccountAttributes\", \"Effect\": \"Allow\", \"Resource\": \"*\", \"Sid\": \"VisualEditor0\"}], \"Version\": \"2012-10-17\"}}"
          },
          "before": {
            "description": "The policy that exists on IAM resource before new policy is applied.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"READ-ONLY\": {\"Statement\": [{\"Action\": \"ec2:DescribeAccountAttributes\", \"Effect\": \"Deny\", \"Resource\": \"*\", \"Sid\": \"VisualEditor0\"}], \"Version\": \"2012-10-17\"}}"
          }
        }
      },
      "group_name": {
        "description": "Name of IAM group.",
        "type": "string",
        "returned": "When iam_type=group",
        "sample": "\"ExampleGroup001\""
      },
      "policy_names": {
        "description": "A list of names of the inline policies embedded in the specified IAM resource (user, group, or role).",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "sample": "[\"READ-ONLY\"]"
      },
      "role_name": {
        "description": "Name of IAM role.",
        "type": "string",
        "returned": "When iam_type=role",
        "sample": "\"ExampleRole001\""
      },
      "user_name": {
        "description": "Name of IAM user.",
        "type": "string",
        "returned": "When iam_type=user",
        "sample": "\"ExampleUser001\""
      }
    }
  },
  "iam_policy_info": {
    "description": "Retrieve inline IAM policies for users, groups, and roles",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/iam_policy_info_module.html#ansible-collections-amazon-aws-iam-policy-info-module",
    "return_values": {
      "all_policy_names": {
        "description": "A list of names of all of the IAM inline policies on the queried object.",
        "type": "list",
        "returned": "success",
        "elements": "elements=string",
        "sample": "[\"example-ec2-policy-1\", \"example-ec2-policy-2\"]"
      },
      "policies": {
        "description": "A list containing the matching IAM inline policy names and their data.",
        "type": "list",
        "returned": "success",
        "elements": "elements=dictionary",
        "suboptions": {
          "policy_document": {
            "description": "The JSON document representing the inline IAM policy.",
            "type": "string",
            "returned": "success",
            "sample": "\"{'Statement': [{'Action': 'ec2:DescribeAccountAttributes', 'Effect': 'Allow', 'Resource': '*', 'Sid': 'VisualEditor0'}], 'Version': '2012-10-17'}\""
          },
          "policy_name": {
            "description": "The Name of the inline policy.",
            "type": "string",
            "returned": "success",
            "sample": "\"test-ec2-list-policy\""
          }
        }
      },
      "policy_names": {
        "description": "A list of matching names of the IAM inline policies on the queried object.",
        "type": "list",
        "returned": "success",
        "elements": "elements=string",
        "sample": "[\"example-ec2-policy-1\", \"example-ec2-policy-2\"]"
      }
    }
  },
  "iam_role": {
    "description": "Manage AWS IAM roles",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/iam_role_module.html#ansible-collections-amazon-aws-iam-role-module",
    "return_values": {
      "iam_role": {
        "description": "Dictionary containing the IAM Role data.",
        "type": "complex",
        "returned": "success",
        "suboptions": {
          "arn": {
            "description": "The Amazon Resource Name (ARN) specifying the role.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:iam::1234567890:role/mynewrole\""
          },
          "assume_role_policy_document": {
            "description": "The policy that grants an entity permission to assume the role. Note: the case of keys in this dictionary are no longer converted from CamelCase to\nsnake_case. This behaviour changed in release 8.0.0.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"statement\": [{\"action\": \"sts:AssumeRole\", \"effect\": \"Allow\", \"principal\": {\"service\": \"ec2.amazonaws.com\"}, \"sid\": \"\"}], \"version\": \"2012-10-17\"}"
          },
          "assume_role_policy_document_raw": {
            "description": "Note: this return value has been deprecated and will be removed in a release after\n2026-05-01. iam_role.assume_role_policy_document and iam_role.assume_role_policy_document_raw\nnow use the same format.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"statement\": [{\"action\": \"sts:AssumeRole\", \"effect\": \"Allow\", \"principal\": {\"service\": \"ec2.amazonaws.com\"}, \"sid\": \"\"}], \"version\": \"2012-10-17\"}"
          },
          "attached_policies": {
            "description": "A list of dicts containing the name and ARN of the managed IAM policies attached to the role.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "sample": "[{\"policy_arn\": \"arn:aws:iam::aws:policy/PowerUserAccess\", \"policy_name\": \"PowerUserAccess\"}]",
            "suboptions": {
              "policy_arn": {
                "description": "The Amazon Resource Name (ARN) specifying the managed policy.",
                "type": "string",
                "returned": "success",
                "sample": "\"arn:aws:iam::123456789012:policy/test_policy\""
              },
              "policy_name": {
                "description": "The friendly name that identifies the policy.",
                "type": "string",
                "returned": "success",
                "sample": "\"test_policy\""
              }
            }
          },
          "create_date": {
            "description": "The date and time, in ISO 8601 date-time format, when the role was created.",
            "type": "string",
            "returned": "always",
            "sample": "\"2016-08-14T04:36:28+00:00\""
          },
          "description": {
            "description": "A description of the role.",
            "type": "string",
            "returned": "always",
            "sample": "\"This is My New Role\""
          },
          "max_session_duration": {
            "description": "The maximum duration (in seconds) of a session when assuming the role.",
            "type": "integer",
            "returned": "always",
            "sample": "3600"
          },
          "path": {
            "description": "The path to the role.",
            "type": "string",
            "returned": "always",
            "sample": "\"/\""
          },
          "role_id": {
            "description": "The stable and unique string identifying the role.",
            "type": "string",
            "returned": "always",
            "sample": "\"ABCDEFF4EZ4ABCDEFV4ZC\""
          },
          "role_last_used": {
            "description": "Contains information about the last time that an IAM role was used.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"last_used_date\": \"2023-11-22T21:54:29+00:00\", \"region\": \"us-east-2\"}",
            "suboptions": {
              "last_used_date": {
                "description": "The date and time, in ISO 8601 date-time format that the role was last used.",
                "type": "string",
                "returned": "always"
              },
              "region": {
                "description": "The name of the Amazon Web Services Region in which the role was last used.",
                "type": "string",
                "returned": "always"
              }
            }
          },
          "role_name": {
            "description": "The friendly name that identifies the role.",
            "type": "string",
            "returned": "always",
            "sample": "\"myrole\""
          },
          "tags": {
            "description": "role tags",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"Env\": \"Prod\"}"
          }
        }
      }
    }
  },
  "iam_role_info": {
    "description": "Gather information on IAM roles",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/iam_role_info_module.html#ansible-collections-amazon-aws-iam-role-info-module",
    "return_values": {
      "iam_roles": {
        "description": "List of IAM roles.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "arn": {
            "description": "Amazon Resource Name for IAM role.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:iam::123456789012:role/AnsibleTestRole\""
          },
          "assume_role_policy_document": {
            "description": "The policy that grants an entity permission to assume the role. Note: the case of keys in this dictionary are no longer converted from CamelCase to\nsnake_case. This behaviour changed in release 8.0.0.",
            "type": "dictionary",
            "returned": "always"
          },
          "assume_role_policy_document_raw": {
            "description": "Note: this return value has been deprecated and will be removed in a release after\n2026-05-01. iam_roles.assume_role_policy_document and iam_roles.assume_role_policy_document_raw\nnow use the same format.",
            "type": "dictionary",
            "returned": "always"
          },
          "create_date": {
            "description": "Date IAM role was created.",
            "type": "string",
            "returned": "always",
            "sample": "\"2017-10-23T00:05:08+00:00\""
          },
          "inline_policies": {
            "description": "List of names of inline policies.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[]"
          },
          "instance_profiles": {
            "description": "List of attached instance profiles.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "arn": {
                "description": "Amazon Resource Name for the instance profile.",
                "type": "string",
                "returned": "always",
                "sample": "\"arn:aws:iam::123456789012:instance-profile/AnsibleTestEC2Policy\""
              },
              "create_date": {
                "description": "Date instance profile was created.",
                "type": "string",
                "returned": "always",
                "sample": "\"2017-10-23T00:05:08+00:00\""
              },
              "instance_profile_id": {
                "description": "Amazon Identifier for the instance profile.",
                "type": "string",
                "returned": "always",
                "sample": "\"AROAII7ABCD123456EFGH\""
              },
              "instance_profile_name": {
                "description": "Name of instance profile.",
                "type": "string",
                "returned": "always",
                "sample": "\"AnsibleTestEC2Policy\""
              },
              "path": {
                "description": "Path of instance profile.",
                "type": "string",
                "returned": "always",
                "sample": "\"/\""
              },
              "roles": {
                "description": "List of roles associated with this instance profile.",
                "type": "list",
                "returned": "always",
                "elements": "elements=string",
                "sample": "[]"
              }
            }
          },
          "managed_policies": {
            "description": "List of attached managed policies.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "policy_arn": {
                "description": "Amazon Resource Name for the policy.",
                "type": "string",
                "returned": "always",
                "sample": "\"arn:aws:iam::123456789012:policy/AnsibleTestEC2Policy\""
              },
              "policy_name": {
                "description": "Name of managed policy.",
                "type": "string",
                "returned": "always",
                "sample": "\"AnsibleTestEC2Policy\""
              }
            }
          },
          "path": {
            "description": "Path of role.",
            "type": "string",
            "returned": "always",
            "sample": "\"/\""
          },
          "role_id": {
            "description": "Amazon Identifier for the role.",
            "type": "string",
            "returned": "always",
            "sample": "\"AROAII7ABCD123456EFGH\""
          },
          "role_name": {
            "description": "Name of the role.",
            "type": "string",
            "returned": "always",
            "sample": "\"AnsibleTestRole\""
          },
          "tags": {
            "description": "Role tags.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"Env\": \"Prod\"}"
          }
        }
      }
    }
  },
  "iam_user": {
    "description": "Manage AWS IAM users",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/iam_user_module.html#ansible-collections-amazon-aws-iam-user-module",
    "return_values": {
      "user": {
        "description": "Dictionary containing all the user information.",
        "type": "complex",
        "returned": "success",
        "suboptions": {
          "arn": {
            "description": "The Amazon Resource Name (ARN) specifying the user.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:iam::123456789012:user/testuser1\""
          },
          "attached_policies": {
            "description": "List containing basic information about managed policies attached to the group.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "sample": "[{\"policy_arn\": \"arn:aws:iam::123456789012:policy/test_policy\", \"policy_name\": \"test_policy\"}]",
            "suboptions": {
              "policy_arn": {
                "description": "The Amazon Resource Name (ARN) specifying the managed policy.",
                "type": "string",
                "returned": "success",
                "sample": "\"arn:aws:iam::123456789012:policy/test_policy\""
              },
              "policy_name": {
                "description": "The friendly name that identifies the policy.",
                "type": "string",
                "returned": "success",
                "sample": "\"test_policy\""
              }
            }
          },
          "create_date": {
            "description": "The date and time, in ISO 8601 date-time format, when the user was created.",
            "type": "string",
            "returned": "always",
            "sample": "\"2017-02-08T04:36:28+00:00\""
          },
          "path": {
            "description": "The path to the user.",
            "type": "string",
            "returned": "always",
            "sample": "\"/\""
          },
          "tags": {
            "description": "User tags.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"Env\": \"Prod\"}"
          },
          "user_id": {
            "description": "The stable and unique string identifying the user.",
            "type": "string",
            "returned": "always",
            "sample": "\"AGPA12345EXAMPLE54321\""
          },
          "user_name": {
            "description": "The friendly name that identifies the user.",
            "type": "string",
            "returned": "always",
            "sample": "\"testuser1\""
          }
        }
      }
    }
  },
  "iam_user_info": {
    "description": "Gather IAM user(s) facts in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/iam_user_info_module.html#ansible-collections-amazon-aws-iam-user-info-module",
    "return_values": {
      "iam_users": {
        "description": "List of maching iam users.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "arn": {
            "description": "The ARN of the user.",
            "type": "string",
            "returned": "when user exists.",
            "sample": "\"arn:aws:iam::123456789012:user/dev/test_user\""
          },
          "create_date": {
            "description": "The datetime user was created.",
            "type": "string",
            "returned": "when user exists.",
            "sample": "\"2016-05-24T12:24:59+00:00\""
          },
          "login_profile": {
            "description": "Detailed login profile information if the user has access to log in from AWS default console. Returns an empty object {} if no access.",
            "type": "dictionary",
            "returned": "when user exists.",
            "sample": "{\"create_date\": \"2024-03-20T12:50:56+00:00\", \"password_reset_required\": false, \"user_name\": \"i_am_a_user\"}",
            "suboptions": {
              "create_date": {
                "description": "The date and time, in ISO 8601 date-time format, when the user was created.",
                "type": "string",
                "returned": "always"
              },
              "password_reset_required": {
                "description": "Specifies whether the user is required to set a new password on next sign-in.",
                "type": "boolean",
                "returned": "always"
              },
              "user_name": {
                "description": "The name of the IAM user",
                "type": "string",
                "returned": "always"
              }
            }
          },
          "password_last_used": {
            "description": "The last datetime the password was used by user.",
            "type": "string",
            "returned": "if password was used at least once",
            "sample": "\"2016-05-25T13:39:11+00:00\""
          },
          "path": {
            "description": "The path to user.",
            "type": "string",
            "returned": "when user exists.",
            "sample": "\"/dev/\""
          },
          "tags": {
            "description": "User tags.",
            "type": "dictionary",
            "returned": "when user exists.",
            "sample": "{\"Env\": \"Prod\"}"
          },
          "user_id": {
            "description": "The unique user id.",
            "type": "string",
            "returned": "when user exists.",
            "sample": "\"AIDUIOOCQKTUGI6QJLGH2\""
          },
          "user_name": {
            "description": "The user name.",
            "type": "string",
            "returned": "when user exists.",
            "sample": "\"test_user\""
          }
        }
      }
    }
  },
  "kms_key": {
    "description": "Perform various KMS key management tasks",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/kms_key_module.html#ansible-collections-amazon-aws-kms-key-module",
    "return_values": {
      "aliases": {
        "description": "List of aliases associated with the key.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "sample": "[\"aws/acm\", \"aws/ebs\"]"
      },
      "aws_account_id": {
        "description": "The AWS Account ID that the key belongs to.",
        "type": "string",
        "returned": "always",
        "sample": "\"1234567890123\""
      },
      "changes_needed": {
        "description": "Grant types that would be changed/were changed.",
        "type": "dictionary",
        "returned": "always",
        "sample": "{\"role\": \"add\", \"role grant\": \"add\"}"
      },
      "creation_date": {
        "description": "Date and time of creation of the key.",
        "type": "string",
        "returned": "always",
        "sample": "\"2017-04-18T15:12:08.551000+10:00\""
      },
      "customer_master_key_spec": {
        "description": "Specifies the type of KMS key to create.",
        "type": "string",
        "returned": "always",
        "sample": "\"SYMMETRIC_DEFAULT\""
      },
      "deletion_date": {
        "description": "Date and time after which KMS deletes this KMS key.",
        "type": "string",
        "returned": "when key_state is PendingDeletion",
        "sample": "\"2017-04-18T15:12:08.551000+10:00\""
      },
      "description": {
        "description": "Description of the key.",
        "type": "string",
        "returned": "always",
        "sample": "\"My Key for Protecting important stuff\""
      },
      "enable_key_rotation": {
        "description": "Whether the automatic annual key rotation is enabled. Returns None if key rotation status can\u2019t be determined.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "enabled": {
        "description": "Whether the key is enabled. True if key_state is Enabled.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "encryption_algorithms": {
        "description": "The encryption algorithms that the KMS key supports.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "sample": "[\"SYMMETRIC_DEFAULT\"]"
      },
      "grants": {
        "description": "List of grants associated with a key.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "constraints": {
            "description": "Constraints on the encryption context that the grant allows. See https://docs.aws.amazon.com/kms/latest/APIReference/API_GrantConstraints.html for further details",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"encryption_context_equals\": {\"aws:lambda:_function_arn\": \"arn:aws:lambda:ap-southeast-2:123456789012:function:xyz\"}}"
          },
          "creation_date": {
            "description": "Date of creation of the grant.",
            "type": "string",
            "returned": "always",
            "sample": "\"2017-04-18T15:12:08+10:00\""
          },
          "grant_id": {
            "description": "The unique ID for the grant.",
            "type": "string",
            "returned": "always",
            "sample": "\"abcd1234abcd1234abcd1234abcd1234abcd1234abcd1234abcd1234abcd1234\""
          },
          "grantee_principal": {
            "description": "The principal that receives the grant\u2019s permissions.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:sts::123456789012:assumed-role/lambda_xyz/xyz\""
          },
          "issuing_account": {
            "description": "The AWS account under which the grant was issued.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:iam::123456789012:root\""
          },
          "key_id": {
            "description": "The key ARN to which the grant applies.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:kms:ap-southeast-2:123456789012:key/abcd1234-abcd-1234-5678-ef1234567890\""
          },
          "name": {
            "description": "The friendly name that identifies the grant.",
            "type": "string",
            "returned": "always",
            "sample": "\"xyz\""
          },
          "operations": {
            "description": "The list of operations permitted by the grant.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[\"Decrypt\", \"RetireGrant\"]"
          },
          "retiring_principal": {
            "description": "The principal that can retire the grant.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:sts::123456789012:assumed-role/lambda_xyz/xyz\""
          }
        }
      },
      "had_invalid_entries": {
        "description": "Whether there are invalid (non-ARN) entries in the KMS entry. These don\u2019t count as a change, but will be removed if any changes are being made.",
        "type": "boolean",
        "returned": "always"
      },
      "key_arn": {
        "description": "ARN of key.",
        "type": "string",
        "returned": "always",
        "sample": "\"arn:aws:kms:ap-southeast-2:123456789012:key/abcd1234-abcd-1234-5678-ef1234567890\""
      },
      "key_id": {
        "description": "ID of key.",
        "type": "string",
        "returned": "always",
        "sample": "\"abcd1234-abcd-1234-5678-ef1234567890\""
      },
      "key_manager": {
        "description": "The manager of the KMS key.",
        "type": "string",
        "returned": "always",
        "sample": "\"AWS\""
      },
      "key_policies": {
        "description": "List of policy documents for the key. Empty when access is denied even if there are policies.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "sample": "{\"Id\": \"auto-ebs-2\", \"Statement\": [{\"Action\": [\"kms:Encrypt\", \"kms:Decrypt\", \"kms:ReEncrypt*\", \"kms:GenerateDataKey*\", \"kms:CreateGrant\", \"kms:DescribeKey\"], \"Condition\": {\"StringEquals\": {\"kms:CallerAccount\": \"123456789012\", \"kms:ViaService\": \"ec2.ap-southeast-2.amazonaws.com\"}}, \"Effect\": \"Allow\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": \"*\", \"Sid\": \"Allow access through EBS for all principals in the account that are authorized to use EBS\"}, {\"Action\": [\"kms:Describe*\", \"kms:Get*\", \"kms:List*\", \"kms:RevokeGrant\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": \"arn:aws:iam::123456789012:root\"}, \"Resource\": \"*\", \"Sid\": \"Allow direct access to key metadata to the account\"}], \"Version\": \"2012-10-17\"}"
      },
      "key_spec": {
        "description": "Specifies the type of KMS key to create.",
        "type": "string",
        "returned": "always",
        "sample": "\"SYMMETRIC_DEFAULT\""
      },
      "key_state": {
        "description": "The state of the key. Will be one of 'Creating', 'Enabled', 'Disabled', 'PendingDeletion', 'PendingImport', 'PendingReplicaDeletion', 'Unavailable', or 'Updating'.",
        "type": "string",
        "returned": "always",
        "sample": "\"PendingDeletion\""
      },
      "key_usage": {
        "description": "The cryptographic operations for which you can use the key.",
        "type": "string",
        "returned": "always",
        "sample": "\"ENCRYPT_DECRYPT\""
      },
      "multi_region": {
        "description": "Indicates whether the CMK is a multi-Region True or regional False key. This value is True for multi-Region primary and replica CMKs and False for regional CMKs.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "origin": {
        "description": "The source of the key\u2019s key material. When this value is AWS_KMS, AWS KMS created the key material. When this value is EXTERNAL, the key material was imported or the CMK lacks key material.",
        "type": "string",
        "returned": "always",
        "sample": "\"AWS_KMS\""
      },
      "tags": {
        "description": "Dictionary of tags applied to the key. Empty when access is denied even if there are tags.",
        "type": "dictionary",
        "returned": "always",
        "sample": "{\"Name\": \"myKey\", \"Purpose\": \"protecting_stuff\"}"
      }
    }
  },
  "kms_key_info": {
    "description": "Gather information about AWS KMS keys",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/kms_key_info_module.html#ansible-collections-amazon-aws-kms-key-info-module",
    "return_values": {
      "kms_keys": {
        "description": "List of keys.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "aliases": {
            "description": "List of aliases associated with the key.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[\"aws/acm\", \"aws/ebs\"]"
          },
          "aws_account_id": {
            "description": "The AWS Account ID that the key belongs to.",
            "type": "string",
            "returned": "always",
            "sample": "\"123456789012\""
          },
          "creation_date": {
            "description": "Date and time of creation of the key.",
            "type": "string",
            "returned": "always",
            "sample": "\"2017-04-18T15:12:08.551000+10:00\""
          },
          "customer_master_key_spec": {
            "description": "Describes the type of key material in the KMS key.",
            "type": "string",
            "returned": "always",
            "sample": "\"SYMMETRIC_DEFAULT\""
          },
          "deletion_date": {
            "description": "Date and time after which KMS deletes this KMS key.",
            "type": "string",
            "returned": "when kms_keys.key_state is PendingDeletion",
            "sample": "\"2017-04-18T15:12:08.551000+10:00\""
          },
          "description": {
            "description": "Description of the key.",
            "type": "string",
            "returned": "always",
            "sample": "\"My Key for Protecting important stuff\""
          },
          "enable_key_rotation": {
            "description": "Whether the automatic annual key rotation is enabled. Returns None if key rotation status can\u2019t be determined.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "enabled": {
            "description": "Whether the key is enabled. True if kms_keys.key_state is Enabled.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "encryption_algorithms": {
            "description": "The encryption algorithms that the KMS key supports.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[\"SYMMETRIC_DEFAULT\"]"
          },
          "grants": {
            "description": "List of grants associated with a key.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "constraints": {
                "description": "Constraints on the encryption context that the grant allows. See https://docs.aws.amazon.com/kms/latest/APIReference/API_GrantConstraints.html for further details",
                "type": "dictionary",
                "returned": "always",
                "sample": "{\"encryption_context_equals\": {\"aws:lambda:_function_arn\": \"arn:aws:lambda:ap-southeast-2:123456789012:function:xyz\"}}"
              },
              "creation_date": {
                "description": "Date of creation of the grant.",
                "type": "string",
                "returned": "always",
                "sample": "\"2017-04-18T15:12:08+10:00\""
              },
              "grant_id": {
                "description": "The unique ID for the grant.",
                "type": "string",
                "returned": "always",
                "sample": "\"abcd1234abcd1234abcd1234abcd1234abcd1234abcd1234abcd1234abcd1234\""
              },
              "grantee_principal": {
                "description": "The principal that receives the grant\u2019s permissions.",
                "type": "string",
                "returned": "always",
                "sample": "\"arn:aws:sts::123456789012:assumed-role/lambda_xyz/xyz\""
              },
              "issuing_account": {
                "description": "The AWS account under which the grant was issued.",
                "type": "string",
                "returned": "always",
                "sample": "\"arn:aws:iam::123456789012:root\""
              },
              "key_id": {
                "description": "The key ARN to which the grant applies.",
                "type": "string",
                "returned": "always",
                "sample": "\"arn:aws:kms:ap-southeast-2:123456789012:key/abcd1234-abcd-1234-5678-ef1234567890\""
              },
              "name": {
                "description": "The friendly name that identifies the grant.",
                "type": "string",
                "returned": "always",
                "sample": "\"xyz\""
              },
              "operations": {
                "description": "The list of operations permitted by the grant.",
                "type": "list",
                "returned": "always",
                "elements": "elements=string",
                "sample": "[\"Decrypt\", \"GenerateDataKey\"]"
              },
              "retiring_principal": {
                "description": "The principal that can retire the grant.",
                "type": "string",
                "returned": "always",
                "sample": "\"arn:aws:sts::123456789012:assumed-role/lambda_xyz/xyz\""
              }
            }
          },
          "key_arn": {
            "description": "ARN of key.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:kms:ap-southeast-2:123456789012:key/abcd1234-abcd-1234-5678-ef1234567890\""
          },
          "key_id": {
            "description": "ID of key.",
            "type": "string",
            "returned": "always",
            "sample": "\"abcd1234-abcd-1234-5678-ef1234567890\""
          },
          "key_manager": {
            "description": "The manager of the KMS key.",
            "type": "string",
            "returned": "always",
            "sample": "\"AWS\""
          },
          "key_policies": {
            "description": "List of policy documents for the key. Empty when access is denied even if there are policies.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "sample": "{\"Id\": \"auto-ebs-2\", \"Statement\": [{\"Action\": [\"kms:Encrypt\", \"kms:Decrypt\", \"kms:ReEncrypt*\", \"kms:GenerateDataKey*\", \"kms:CreateGrant\", \"kms:DescribeKey\"], \"Condition\": {\"StringEquals\": {\"kms:CallerAccount\": \"123456789012\", \"kms:ViaService\": \"ec2.ap-southeast-2.amazonaws.com\"}}, \"Effect\": \"Allow\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": \"*\", \"Sid\": \"Allow access through EBS for all principals in the account that are authorized to use EBS\"}, {\"Action\": [\"kms:Describe*\", \"kms:Get*\", \"kms:List*\", \"kms:RevokeGrant\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": \"arn:aws:iam::123456789012:root\"}, \"Resource\": \"*\", \"Sid\": \"Allow direct access to key metadata to the account\"}], \"Version\": \"2012-10-17\"}"
          },
          "key_spec": {
            "description": "Specifies the type of KMS key to create.",
            "type": "string",
            "returned": "always",
            "sample": "\"SYMMETRIC_DEFAULT\""
          },
          "key_state": {
            "description": "The state of the key. Will be one of 'Creating', 'Enabled', 'Disabled', 'PendingDeletion', 'PendingImport', 'PendingReplicaDeletion', 'Unavailable', or 'Updating'.",
            "type": "string",
            "returned": "always",
            "sample": "\"PendingDeletion\""
          },
          "key_usage": {
            "description": "The cryptographic operations for which you can use the key.",
            "type": "string",
            "returned": "always",
            "sample": "\"ENCRYPT_DECRYPT\""
          },
          "multi_region": {
            "description": "Indicates whether the KMS key is a multi-Region (True) or regional (False) key.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "origin": {
            "description": "The source of the key\u2019s key material. When this value is AWS_KMS, AWS KMS created the key material. When this value is EXTERNAL, the key material was imported or the CMK lacks key material.",
            "type": "string",
            "returned": "always",
            "sample": "\"AWS_KMS\""
          },
          "tags": {
            "description": "Dictionary of tags applied to the key. Empty when access is denied even if there are tags.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"Name\": \"myKey\", \"Purpose\": \"protecting_stuff\"}"
          }
        }
      }
    }
  },
  "lambda": {
    "description": "Manage AWS Lambda functions",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/lambda_module.html#ansible-collections-amazon-aws-lambda-module",
    "return_values": {
      "code": {
        "description": "The lambda function\u2019s code returned by get_function in boto3.",
        "type": "dictionary",
        "returned": "success",
        "suboptions": {
          "location": {
            "description": "The presigned URL you can use to download the function\u2019s .zip file that you previously uploaded. The URL is valid for up to 10 minutes.",
            "type": "string",
            "returned": "success",
            "sample": "\"https://prod-04-2014-tasks.s3.us-east-1.amazonaws.com/snapshots/sample\""
          },
          "repository_type": {
            "description": "The repository from which you can download the function.",
            "type": "string",
            "returned": "success",
            "sample": "\"S3\""
          }
        }
      },
      "configuration": {
        "description": "The Lambda function\u2019s configuration metadata returned by get_function in boto3.",
        "type": "dictionary",
        "returned": "success",
        "suboptions": {
          "architectures": {
            "description": "The architectures supported by the function.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[\"arm64\"]"
          },
          "code_sha256": {
            "description": "The SHA256 hash of the function\u2019s deployment package.",
            "type": "string",
            "returned": "success",
            "sample": "\"zOAGfF5JLFuzZoSNirUtOrQp+S341IOA3BcoXXoaIaU=\""
          },
          "code_size": {
            "description": "The size of the function\u2019s deployment package in bytes.",
            "type": "integer",
            "returned": "success",
            "sample": "123"
          },
          "dead_letter_config": {
            "description": "The function\u2019s dead letter queue.",
            "type": "dictionary",
            "returned": "when the function has a dead letter queue configured",
            "sample": "{\"target_arn\": \"arn:aws:lambda:us-east-1:123456789012:function:myFunction:1\"}",
            "suboptions": {
              "target_arn": {
                "description": "The ARN of an SQS queue or SNS topic.",
                "type": "string",
                "returned": "when the function has a dead letter queue configured",
                "sample": "\"arn:aws:lambda:us-east-1:123456789012:function:myFunction:1\""
              }
            }
          },
          "description": {
            "description": "The function\u2019s description.",
            "type": "string",
            "returned": "success",
            "sample": "\"My function\""
          },
          "environment": {
            "description": "The function\u2019s environment variables.",
            "type": "dictionary",
            "returned": "when environment variables exist",
            "suboptions": {
              "error": {
                "description": "Error message for environment variables that could not be applied.",
                "type": "dictionary",
                "returned": "when there is an error applying environment variables",
                "suboptions": {
                  "error_code": {
                    "description": "The error code.",
                    "type": "string",
                    "returned": "when there is an error applying environment variables"
                  },
                  "message": {
                    "description": "The error message.",
                    "type": "string",
                    "returned": "when there is an error applying environment variables"
                  }
                }
              },
              "variables": {
                "description": "Environment variable key-value pairs.",
                "type": "dictionary",
                "returned": "when environment variables exist",
                "sample": "{\"key\": \"value\"}"
              }
            }
          },
          "function_arn": {
            "description": "The function\u2019s Amazon Resource Name (ARN).",
            "type": "string",
            "returned": "on success",
            "sample": "\"arn:aws:lambda:us-east-1:123456789012:function:myFunction:1\""
          },
          "function_name": {
            "description": "The function\u2019s name.",
            "type": "string",
            "returned": "on success",
            "sample": "\"myFunction\""
          },
          "handler": {
            "description": "The function Lambda calls to begin executing your function.",
            "type": "string",
            "returned": "on success",
            "sample": "\"index.handler\""
          },
          "last_modified": {
            "description": "The date and time that the function was last updated, in ISO-8601 format (YYYY-MM-DDThh:mm:ssTZD).",
            "type": "string",
            "returned": "on success",
            "sample": "\"2017-08-01T00:00:00.000+0000\""
          },
          "layers": {
            "description": "The function\u2019s layers.",
            "type": "complex",
            "returned": "on success",
            "suboptions": {
              "arn": {
                "description": "The Amazon Resource Name (ARN) of the function layer.",
                "type": "string",
                "returned": "always",
                "sample": "\"active\""
              },
              "code_size": {
                "description": "The size of the layer archive in bytes.",
                "type": "string",
                "returned": "always"
              },
              "signing_job_arn": {
                "description": "The Amazon Resource Name (ARN) of a signing job.",
                "type": "string",
                "returned": "always"
              },
              "signing_profile_version_arn": {
                "description": "The Amazon Resource Name (ARN) for a signing profile version.",
                "type": "string",
                "returned": "always"
              }
            }
          },
          "memory_size": {
            "description": "The memory allocated to the function.",
            "type": "integer",
            "returned": "on success",
            "sample": "128"
          },
          "revision_id": {
            "description": "The latest updated revision of the function or alias.",
            "type": "string",
            "returned": "on success",
            "sample": "\"a2x9886d-d48a-4a0c-ab64-82abc005x80c\""
          },
          "role": {
            "description": "The function\u2019s execution role.",
            "type": "string",
            "returned": "on success",
            "sample": "\"arn:aws:iam::123456789012:role/lambda_basic_execution\""
          },
          "runtime": {
            "description": "The funtime environment for the Lambda function.",
            "type": "string",
            "returned": "on success",
            "sample": "\"nodejs6.10\""
          },
          "timeout": {
            "description": "The amount of time that Lambda allows a function to run before terminating it.",
            "type": "integer",
            "returned": "on success",
            "sample": "3"
          },
          "tracing_config": {
            "description": "The function\u2019s AWS X-Ray tracing configuration.",
            "type": "dictionary",
            "returned": "on success",
            "sample": "{\"mode\": \"Active\"}",
            "suboptions": {
              "mode": {
                "description": "The tracing mode.",
                "type": "string",
                "returned": "on success",
                "sample": "\"Active\""
              }
            }
          },
          "version": {
            "description": "The version of the Lambda function.",
            "type": "string",
            "returned": "on success",
            "sample": "\"1\""
          },
          "vpc_config": {
            "description": "The function\u2019s networking configuration.",
            "type": "dictionary",
            "returned": "on success",
            "sample": "{\"security_group_ids\": [], \"subnet_ids\": [], \"vpc_id\": \"123\"}"
          }
        }
      }
    }
  },
  "lambda_alias": {
    "description": "Creates, updates or deletes AWS Lambda function aliases",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/lambda_alias_module.html#ansible-collections-amazon-aws-lambda-alias-module",
    "return_values": {
      "alias_arn": {
        "description": "Full ARN of the function, including the alias.",
        "type": "string",
        "returned": "success",
        "sample": "\"arn:aws:lambda:us-west-2:123456789012:function:myFunction:dev\""
      },
      "description": {
        "description": "A short description of the alias.",
        "type": "string",
        "returned": "success",
        "sample": "\"The development stage for my hot new app.\""
      },
      "function_version": {
        "description": "The qualifier that the alias refers to.",
        "type": "string",
        "returned": "success",
        "sample": "\"$LATEST\""
      },
      "name": {
        "description": "The name of the alias assigned.",
        "type": "string",
        "returned": "success",
        "sample": "\"dev\""
      },
      "revision_id": {
        "description": "A unique identifier that changes when you update the alias.",
        "type": "string",
        "returned": "success",
        "sample": "\"12345678-1234-1234-1234-123456789abc\""
      }
    }
  },
  "lambda_event": {
    "description": "Creates, updates or deletes AWS Lambda function event mappings",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/lambda_event_module.html#ansible-collections-amazon-aws-lambda-event-module",
    "return_values": {
      "events": {
        "description": "Dictionary returned by the API describing stream event mappings",
        "type": "dictionary",
        "returned": "success",
        "suboptions": {
          "batch_size": {
            "description": "The maximum number of records in each batch that Lambda pulls.",
            "type": "integer",
            "returned": "always"
          },
          "bisect_batch_on_function_error": {
            "description": "If the function returns an error, split the batch in two and retry.",
            "type": "boolean",
            "returned": "for Kinesis and DynamoDB Streams only",
            "sample": "false"
          },
          "destination_config": {
            "description": "Configuration object that specifies the destination of an event after Lambda processes it.",
            "type": "dictionary",
            "returned": "For Kinesis, DynamoDB Streams, Amazon MSK, and self-managed Kafka only",
            "suboptions": {
              "on_failure": {
                "description": "The destination configuration for failed invocations.",
                "type": "dictionary",
                "returned": "success",
                "suboptions": {
                  "destination": {
                    "description": "Destination resource ARN.",
                    "type": "string",
                    "returned": "success"
                  }
                }
              },
              "on_success": {
                "description": "The destination configuration for failed invocations.",
                "type": "dictionary",
                "returned": "success",
                "suboptions": {
                  "destination": {
                    "description": "Destination resource ARN.",
                    "type": "string",
                    "returned": "success"
                  }
                }
              }
            }
          },
          "event_source_arn": {
            "description": "The Amazon Resource Name (ARN) of the event source.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:dynamodb:us-west-2:123456789012:table/yyyy/stream/2024-06-06T07:03:58.956\""
          },
          "function_arn": {
            "description": "The ARN of the Lambda function.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:lambda:us-west-2:123456789012:function:test-lambda-3a0a29d0dbb5:1\""
          },
          "function_response_types": {
            "description": "A list of current response type enums applied to the event source mapping.",
            "type": "list",
            "returned": "For Kinesis, DynamoDB Streams, and Amazon SQS",
            "elements": "elements=string",
            "sample": "[\"ReportBatchItemFailures\"]"
          },
          "last_modified": {
            "description": "The date that the event source mapping was last updated or that its state changed.",
            "type": "string",
            "returned": "always",
            "sample": "\"2024-06-06T12:34:21.990000+05:30\""
          },
          "last_processing_result": {
            "description": "The result of the last Lambda invocation of your function.",
            "type": "string",
            "returned": "always",
            "sample": "\"No records processed\""
          },
          "maximum_batching_window_in_seconds": {
            "description": "The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function.",
            "type": "integer",
            "returned": "always",
            "sample": "1"
          },
          "maximum_record_age_in_seconds": {
            "description": "Discard records older than the specified age. The default value is infinite (-1).",
            "type": "integer",
            "returned": "For Kinesis and DynamoDB Streams only",
            "sample": "-1"
          },
          "maximum_retry_attempts": {
            "description": "Discard records after the specified number of retries.",
            "type": "integer",
            "returned": "For Kinesis and DynamoDB Streams only",
            "sample": "-1"
          },
          "parallelization_factor": {
            "description": "The number of batches to process concurrently from each shard.",
            "type": "integer",
            "returned": "For Kinesis and DynamoDB Streams only",
            "sample": "1"
          },
          "starting_position": {
            "description": "The position in a stream from which to start reading.",
            "type": "string",
            "returned": "For Kinesis and DynamoDB Streams only",
            "sample": "\"LATEST\""
          },
          "state": {
            "description": "The state of the event source mapping.",
            "type": "string",
            "returned": "always",
            "sample": "\"deleting\""
          },
          "state_transition_reason": {
            "description": "Indicates whether a user or Lambda made the last change to the event source mapping.",
            "type": "string",
            "returned": "always",
            "sample": "\"USER_INITIATED\""
          },
          "tumbling_window_in_seconds": {
            "description": "The duration in seconds of a processing window for DynamoDB and Kinesis Streams event sources.",
            "type": "integer",
            "returned": "For Kinesis and DynamoDB Streams only",
            "sample": "1"
          },
          "uuid": {
            "description": "The identifier of the event source mapping.",
            "type": "string",
            "returned": "always",
            "sample": "\"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\""
          }
        }
      }
    }
  },
  "lambda_execute": {
    "description": "Execute an AWS Lambda function",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/lambda_execute_module.html#ansible-collections-amazon-aws-lambda-execute-module",
    "return_values": {
      "result": {
        "description": "Resulting data structure from a successful task execution.",
        "type": "dictionary",
        "returned": "success",
        "suboptions": {
          "logs": {
            "description": "The last 4KB of the function logs. Only provided if tail_log=true.",
            "type": "string",
            "returned": "if tail_log=true"
          },
          "output": {
            "description": "Function output if wait=true and the function returns a value.",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"output\": \"something\"}"
          },
          "status": {
            "description": "StatusCode of API call exit (200 for synchronous invokes, 202 for async).",
            "type": "integer",
            "returned": "always",
            "sample": "200"
          }
        }
      }
    }
  },
  "lambda_info": {
    "description": "Gathers AWS Lambda function details",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/lambda_info_module.html#ansible-collections-amazon-aws-lambda-info-module",
    "return_values": {
      "function": {
        "description": "Lambda function list. function has been deprecated in will be removed in the next major release after 2025-01-01.",
        "type": "dictionary",
        "returned": "success"
      },
      "function.TheName": {
        "description": "Lambda function information, including event, mapping, and version information. function has been deprecated in will be removed in the next major release after 2025-01-01.",
        "type": "dictionary",
        "returned": "success"
      },
      "functions": {
        "description": "List of information for each lambda function matching the query.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "aliases": {
            "description": "The aliases associated with the function.",
            "type": "list",
            "returned": "when query=aliases or query=all",
            "elements": "elements=string"
          },
          "architectures": {
            "description": "The architectures supported by the function.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[\"arm64\"]"
          },
          "code_sha256": {
            "description": "The SHA256 hash of the function\u2019s deployment package.",
            "type": "string",
            "returned": "success",
            "sample": "\"zOAGfF5JLFuzZoSNirUtOrQp+S341IOA3BcoXXoaIaU=\""
          },
          "code_size": {
            "description": "The size of the function\u2019s deployment package in bytes.",
            "type": "integer",
            "returned": "success",
            "sample": "123"
          },
          "dead_letter_config": {
            "description": "The function\u2019s dead letter queue.",
            "type": "dictionary",
            "returned": "when the function has a dead letter queue configured",
            "sample": "{\"target_arn\": \"arn:aws:lambda:us-east-1:123456789012:function:myFunction:1\"}",
            "suboptions": {
              "target_arn": {
                "description": "The ARN of an SQS queue or SNS topic.",
                "type": "string",
                "returned": "when the function has a dead letter queue configured",
                "sample": "\"arn:aws:lambda:us-east-1:123456789012:function:myFunction:1\""
              }
            }
          },
          "description": {
            "description": "The function\u2019s description.",
            "type": "string",
            "returned": "success",
            "sample": "\"My function\""
          },
          "environment": {
            "description": "The function\u2019s environment variables.",
            "type": "dictionary",
            "returned": "when environment variables exist",
            "suboptions": {
              "error": {
                "description": "Error message for environment variables that could not be applied.",
                "type": "dictionary",
                "returned": "when there is an error applying environment variables",
                "suboptions": {
                  "error_code": {
                    "description": "The error code.",
                    "type": "string",
                    "returned": "when there is an error applying environment variables"
                  },
                  "message": {
                    "description": "The error message.",
                    "type": "string",
                    "returned": "when there is an error applying environment variables"
                  }
                }
              },
              "variables": {
                "description": "Environment variable key-value pairs.",
                "type": "dictionary",
                "returned": "when environment variables exist",
                "sample": "{\"key\": \"value\"}"
              }
            }
          },
          "ephermal_storage": {
            "description": "The size of the function /tmp directory in MB.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "size": {
                "description": "The size of the function /tmp directory.",
                "type": "integer",
                "returned": "always",
                "sample": "512"
              }
            }
          },
          "function_arn": {
            "description": "The function\u2019s Amazon Resource Name (ARN).",
            "type": "string",
            "returned": "on success",
            "sample": "\"arn:aws:lambda:us-east-1:123456789012:function:myFunction:1\""
          },
          "function_name": {
            "description": "The function\u2019s name.",
            "type": "string",
            "returned": "on success",
            "sample": "\"myFunction\""
          },
          "handler": {
            "description": "The function Lambda calls to begin executing your function.",
            "type": "string",
            "returned": "on success",
            "sample": "\"index.handler\""
          },
          "last_modified": {
            "description": "The date and time that the function was last updated, in ISO-8601 format (YYYY-MM-DDThh:mm:ssTZD).",
            "type": "string",
            "returned": "on success",
            "sample": "\"2017-08-01T00:00:00.000+0000\""
          },
          "mappings": {
            "description": "List of configuration information for each event source mapping.",
            "type": "list",
            "returned": "when query=all or query=mappings",
            "elements": "elements=dictionary",
            "suboptions": {
              "batch_size": {
                "description": "The largest number of records that AWS Lambda will retrieve from the event source at the time of invoking the function.",
                "type": "integer",
                "returned": "on success"
              },
              "event_source_arn": {
                "description": "The ARN of the Amazon Kinesis or DyanmoDB stream that is the source of events.",
                "type": "string",
                "returned": "on success"
              },
              "function_arn": {
                "description": "The Lambda function to invoke when AWS Lambda detects an event on the poll-based source.",
                "type": "string",
                "returned": "on success"
              },
              "last_modified": {
                "description": "The UTC time string indicating the last time the event mapping was updated.",
                "type": "string",
                "returned": "on success"
              },
              "last_processing_result": {
                "description": "The result of the last AWS Lambda invocation of your Lambda function.",
                "type": "string",
                "returned": "on success"
              },
              "state": {
                "description": "The state of the event source mapping.",
                "type": "string",
                "returned": "on success"
              },
              "state_transition_reason": {
                "description": "The reason the event source mapping is in its current state.",
                "type": "string",
                "returned": "on success"
              },
              "uuid": {
                "description": "The AWS Lambda assigned opaque identifier for the mapping.",
                "type": "string",
                "returned": "on success"
              }
            }
          },
          "memory_size": {
            "description": "The memory allocated to the function.",
            "type": "integer",
            "returned": "on success",
            "sample": "128"
          },
          "package_type": {
            "description": "The type of deployment package.",
            "type": "string",
            "returned": "always",
            "sample": "\"Zip\""
          },
          "policy": {
            "description": "The policy associated with the function.",
            "type": "dictionary",
            "returned": "when query=all or query=policy"
          },
          "revision_id": {
            "description": "The latest updated revision of the function or alias.",
            "type": "string",
            "returned": "on success",
            "sample": "\"a2x9886d-d48a-4a0c-ab64-82abc005x80c\""
          },
          "role": {
            "description": "The function\u2019s execution role.",
            "type": "string",
            "returned": "on success",
            "sample": "\"arn:aws:iam::123456789012:role/lambda_basic_execution\""
          },
          "runtime": {
            "description": "The funtime environment for the Lambda function.",
            "type": "string",
            "returned": "on success",
            "sample": "\"nodejs6.10\""
          },
          "runtime_version_config": {
            "description": "The ARN of the runtime and any errors that occured.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "runtime_version_arn": {
                "description": "The ARN of the runtime version you want the function to use.",
                "type": "string",
                "returned": "always",
                "sample": "\"arn:aws:lambda:us-west-2::runtime:123456789012\""
              }
            }
          },
          "snap_start": {
            "description": "Snapshot of the initialized execution environment when you publish a function version.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "apply_on": {
                "description": "When set to PublishedVersions, Lambda creates a snapshot of the execution environment when you publish a function version.",
                "type": "string",
                "returned": "always",
                "sample": "\"None\""
              },
              "optimization_status": {
                "description": "This element indicates whether SnapStart is activated for the specified function version.",
                "type": "string",
                "returned": "always",
                "sample": "\"Off\""
              }
            }
          },
          "timeout": {
            "description": "The amount of time that Lambda allows a function to run before terminating it.",
            "type": "integer",
            "returned": "on success",
            "sample": "3"
          },
          "tracing_config": {
            "description": "The function\u2019s AWS X-Ray tracing configuration.",
            "type": "dictionary",
            "returned": "on success",
            "sample": "{\"mode\": \"Active\"}",
            "suboptions": {
              "mode": {
                "description": "The tracing mode.",
                "type": "string",
                "returned": "on success",
                "sample": "\"Active\""
              }
            }
          },
          "version": {
            "description": "The version of the Lambda function.",
            "type": "string",
            "returned": "on success",
            "sample": "\"1\""
          },
          "versions": {
            "description": "List of Lambda function versions.",
            "type": "list",
            "returned": "when query=all or query=versions",
            "elements": "elements=dictionary"
          },
          "vpc_config": {
            "description": "The function\u2019s networking configuration.",
            "type": "dictionary",
            "returned": "on success",
            "sample": "{\"security_group_ids\": [], \"subnet_ids\": [], \"vpc_id\": \"123\"}"
          }
        }
      }
    }
  },
  "lambda_layer": {
    "description": "Creates an AWS Lambda layer or deletes an AWS Lambda layer version",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/lambda_layer_module.html#ansible-collections-amazon-aws-lambda-layer-module",
    "return_values": {
      "layer_version": {
        "description": "Info about the layer version that was created or deleted.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "compatible_architectures": {
            "description": "A list of compatible instruction set architectures.",
            "type": "list",
            "returned": "if it was defined for the layer version.",
            "elements": "elements=string"
          },
          "compatible_runtimes": {
            "description": "A list of compatible runtimes.",
            "type": "list",
            "returned": "if it was defined for the layer version.",
            "elements": "elements=string",
            "sample": "[\"python3.7\"]"
          },
          "content": {
            "description": "Details about the layer version.",
            "type": "complex",
            "returned": "state=present",
            "suboptions": {
              "code_sha256": {
                "description": "The SHA-256 hash of the layer archive.",
                "type": "string",
                "returned": "state=present",
                "sample": "\"VLluleJZ3HTwDrdYolSMrS+8iPwEkcoXXaegjXf+dmc=\""
              },
              "code_size": {
                "description": "The size of the layer archive in bytes.",
                "type": "integer",
                "returned": "state=present",
                "sample": "9473675"
              },
              "location": {
                "description": "A link to the layer archive in Amazon S3 that is valid for 10 minutes.",
                "type": "string",
                "returned": "state=present",
                "sample": "\"https://awslambda-us-east-1-layers.s3.us-east-1.amazonaws.com/snapshots/123456789012/pylayer-9da91deffd3b4941b8baeeae5daeffe4\""
              },
              "signing_job_arn": {
                "description": "The Amazon Resource Name (ARN) of a signing job.",
                "type": "string",
                "returned": "When a signing profile is defined"
              },
              "signing_profile_version_arn": {
                "description": "The Amazon Resource Name (ARN) for a signing profile version.",
                "type": "string",
                "returned": "When a signing profile is defined"
              }
            }
          },
          "created_date": {
            "description": "The date that the layer version was created, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).",
            "type": "string",
            "returned": "if the layer version exists or has been created",
            "sample": "\"2022-09-28T14:27:35.866+0000\""
          },
          "description": {
            "description": "The description of the version.",
            "type": "string",
            "returned": "state=present"
          },
          "layer_arn": {
            "description": "The ARN of the layer.",
            "type": "string",
            "returned": "if the layer version exists or has been created",
            "sample": "\"arn:aws:lambda:eu-west-2:123456789012:layer:pylayer\""
          },
          "layer_version_arn": {
            "description": "The ARN of the layer version.",
            "type": "string",
            "returned": "if the layer version exists or has been created",
            "sample": "\"arn:aws:lambda:eu-west-2:123456789012:layer:pylayer:2\""
          },
          "license_info": {
            "description": "The layer\u2019s software license.",
            "type": "string",
            "returned": "if it was defined for the layer version.",
            "sample": "\"GPL-3.0-only\""
          },
          "version": {
            "description": "The version number.",
            "type": "integer",
            "returned": "if the layer version exists or has been created",
            "sample": "1"
          }
        }
      }
    }
  },
  "lambda_layer_info": {
    "description": "List lambda layer or lambda layer versions",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/lambda_layer_info_module.html#ansible-collections-amazon-aws-lambda-layer-info-module",
    "return_values": {
      "layers_versions": {
        "description": "The layers versions that exists.",
        "type": "list",
        "returned": "success",
        "elements": "elements=dictionary",
        "suboptions": {
          "compatible_architectures": {
            "description": "A list of compatible instruction set architectures.",
            "type": "list",
            "returned": "if it was defined for the layer version.",
            "elements": "elements=string"
          },
          "compatible_runtimes": {
            "description": "A list of compatible runtimes.",
            "type": "list",
            "returned": "if it was defined for the layer version.",
            "elements": "elements=string",
            "sample": "[\"python3.7\"]"
          },
          "content": {
            "description": "Details about the layer version.",
            "type": "complex",
            "returned": "if version_number was provided",
            "suboptions": {
              "code_sha256": {
                "description": "The SHA-256 hash of the layer archive.",
                "type": "string",
                "returned": "success",
                "sample": "\"tv9jJO+rPbXUUXuRKi7CwHzKtLDkDRJLB3cC3Z/ouXo=\""
              },
              "code_size": {
                "description": "The size of the layer archive in bytes.",
                "type": "integer",
                "returned": "success",
                "sample": "169"
              },
              "location": {
                "description": "A link to the layer archive in Amazon S3 that is valid for 10 minutes.",
                "type": "string",
                "returned": "success",
                "sample": "\"https://awslambda-us-east-2-layers.s3.us-east-2.amazonaws.com/snapshots/123456789012/mylayer-4aaa2fbb-96a?versionId=27iWyA73c...\""
              },
              "signing_job_arn": {
                "description": "The Amazon Resource Name (ARN) of a signing job.",
                "type": "string",
                "returned": "success"
              },
              "signing_profile_version_arn": {
                "description": "The Amazon Resource Name (ARN) for a signing profile version.",
                "type": "string",
                "returned": "success"
              }
            }
          },
          "created_date": {
            "description": "The date that the layer version was created, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).",
            "type": "string",
            "returned": "if the layer version exists or has been created",
            "sample": "\"2022-09-28T14:27:35.866+0000\""
          },
          "description": {
            "description": "The description of the version.",
            "type": "string",
            "returned": "always"
          },
          "layer_arn": {
            "description": "The ARN of the layer.",
            "type": "string",
            "returned": "when name is provided",
            "sample": "\"arn:aws:lambda:eu-west-2:123456789012:layer:pylayer\""
          },
          "layer_version_arn": {
            "description": "The ARN of the layer version.",
            "type": "string",
            "returned": "if the layer version exists or has been created",
            "sample": "\"arn:aws:lambda:eu-west-2:123456789012:layer:pylayer:2\""
          },
          "license_info": {
            "description": "The layer\u2019s software license.",
            "type": "string",
            "returned": "if it was defined for the layer version.",
            "sample": "\"GPL-3.0-only\""
          },
          "version": {
            "description": "The version number.",
            "type": "integer",
            "returned": "if the layer version exists or has been created",
            "sample": "1"
          }
        }
      }
    }
  },
  "lambda_policy": {
    "description": "Creates, updates or deletes AWS Lambda policy statements.",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/lambda_policy_module.html#ansible-collections-amazon-aws-lambda-policy-module",
    "return_values": {
      "lambda_policy_action": {
        "description": "Describes what action was taken.",
        "type": "string",
        "returned": "success",
        "sample": "\"added\""
      }
    }
  },
  "rds_cluster": {
    "description": "rds_cluster module",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/rds_cluster_module.html#ansible-collections-amazon-aws-rds-cluster-module",
    "return_values": {
      "activity_stream_status": {
        "description": "The status of the database activity stream.",
        "type": "string",
        "returned": "always",
        "sample": "\"stopped\""
      },
      "allocated_storage": {
        "description": "The allocated storage size in gigabytes. Since aurora storage size is not fixed this is always 1 for aurora database engines.",
        "type": "integer",
        "returned": "always",
        "sample": "1"
      },
      "associated_roles": {
        "description": "A list of dictionaries of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. Each dictionary contains the role_arn and the status of the role.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "sample": "[]"
      },
      "auto_minor_version_upgrade": {
        "description": "Specifies whether minor engine upgrades are applied automatically to the DB cluster during the maintenance window.",
        "type": "boolean",
        "returned": "always",
        "sample": "true"
      },
      "availability_zones": {
        "description": "The list of availability zones that instances in the DB cluster can be created in.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "sample": "[\"us-east-1c\", \"us-east-1a\", \"us-east-1e\"]"
      },
      "backup_retention_period": {
        "description": "The number of days for which automatic DB snapshots are retained.",
        "type": "integer",
        "returned": "always",
        "sample": "1"
      },
      "changed": {
        "description": "If the RDS cluster has changed.",
        "type": "boolean",
        "returned": "always",
        "sample": "true"
      },
      "cluster_create_time": {
        "description": "The time in UTC when the DB cluster was created.",
        "type": "string",
        "returned": "always",
        "sample": "\"2018-06-29T14:08:58.491000+00:00\""
      },
      "copy_tags_to_snapshot": {
        "description": "Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "cross_account_clone": {
        "description": "Specifies whether the DB cluster is a clone of a DB cluster owned by a different Amazon Web Services account.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "db_cluster_arn": {
        "description": "The Amazon Resource Name (ARN) for the DB cluster.",
        "type": "string",
        "returned": "always",
        "sample": "\"arn:aws:rds:us-east-1:123456789012:cluster:rds-cluster-demo\""
      },
      "db_cluster_identifier": {
        "description": "The lowercase user-supplied DB cluster identifier.",
        "type": "string",
        "returned": "always",
        "sample": "\"rds-cluster-demo\""
      },
      "db_cluster_members": {
        "description": "A list of dictionaries containing information about the instances in the cluster. Each dictionary contains the db_instance_identifier, is_cluster_writer (bool), db_cluster_parameter_group_status, and promotion_tier (int).",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "sample": "[]"
      },
      "db_cluster_parameter_group": {
        "description": "The parameter group associated with the DB cluster.",
        "type": "string",
        "returned": "always",
        "sample": "\"default.aurora5.6\""
      },
      "db_cluster_resource_id": {
        "description": "The AWS Region-unique, immutable identifier for the DB cluster.",
        "type": "string",
        "returned": "always",
        "sample": "\"cluster-D2MEQDN3BQNXDF74K6DQJTHASU\""
      },
      "db_subnet_group": {
        "description": "The name of the subnet group associated with the DB Cluster.",
        "type": "string",
        "returned": "always",
        "sample": "\"default\""
      },
      "deletion_protection": {
        "description": "Indicates if the DB cluster has deletion protection enabled. The database can\u2019t be deleted when deletion protection is enabled.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "domain_memberships": {
        "description": "The Active Directory Domain membership records associated with the DB cluster.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "sample": "[]"
      },
      "earliest_restorable_time": {
        "description": "The earliest time to which a database can be restored with point-in-time restore.",
        "type": "string",
        "returned": "always",
        "sample": "\"2018-06-29T14:09:34.797000+00:00\""
      },
      "endpoint": {
        "description": "The connection endpoint for the primary instance of the DB cluster.",
        "type": "string",
        "returned": "always",
        "sample": "\"rds-cluster-demo.cluster-cvlrtwiennww.us-east-1.rds.amazonaws.com\""
      },
      "engine": {
        "description": "The database engine of the DB cluster.",
        "type": "string",
        "returned": "always",
        "sample": "\"aurora\""
      },
      "engine_mode": {
        "description": "The DB engine mode of the DB cluster.",
        "type": "string",
        "returned": "always",
        "sample": "\"provisioned\""
      },
      "engine_version": {
        "description": "The database engine version.",
        "type": "string",
        "returned": "always",
        "sample": "\"5.6.10a\""
      },
      "hosted_zone_id": {
        "description": "The ID that Amazon Route 53 assigns when you create a hosted zone.",
        "type": "string",
        "returned": "always",
        "sample": "\"Z2R2ITUGPM61AM\""
      },
      "http_endpoint_enabled": {
        "description": "A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is enabled.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "iam_database_authentication_enabled": {
        "description": "Whether IAM accounts may be mapped to database accounts.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "latest_restorable_time": {
        "description": "The latest time to which a database can be restored with point-in-time restore.",
        "type": "string",
        "returned": "always",
        "sample": "\"2018-06-29T14:09:34.797000+00:00\""
      },
      "master_username": {
        "description": "The master username for the DB cluster.",
        "type": "string",
        "returned": "always",
        "sample": "\"username\""
      },
      "multi_az": {
        "description": "Whether the DB cluster has instances in multiple availability zones.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "port": {
        "description": "The port that the database engine is listening on.",
        "type": "integer",
        "returned": "always",
        "sample": "3306"
      },
      "preferred_backup_window": {
        "description": "The UTC weekly time range during which system maintenance can occur.",
        "type": "string",
        "returned": "always",
        "sample": "\"10:18-10:48\""
      },
      "preferred_maintenance_window": {
        "description": "The UTC weekly time range during which system maintenance can occur.",
        "type": "string",
        "returned": "always",
        "sample": "\"tue:03:23-tue:03:53\""
      },
      "read_replica_identifiers": {
        "description": "A list of read replica ID strings associated with the DB cluster.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "sample": "[]"
      },
      "reader_endpoint": {
        "description": "The reader endpoint for the DB cluster.",
        "type": "string",
        "returned": "always",
        "sample": "\"rds-cluster-demo.cluster-ro-cvlrtwiennww.us-east-1.rds.amazonaws.com\""
      },
      "serverless_v2_scaling_configuration": {
        "description": "The scaling configuration for an Aurora Serverless v2 DB cluster.",
        "type": "dictionary",
        "returned": "when configured",
        "sample": "{\"max_capacity\": 4.5, \"min_capacity\": 2.5}"
      },
      "status": {
        "description": "The status of the DB cluster.",
        "type": "string",
        "returned": "always",
        "sample": "\"available\""
      },
      "storage_encrypted": {
        "description": "Whether the DB cluster is storage encrypted.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "tag_list": {
        "description": "A list of tags consisting of key-value pairs.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "sample": "[{\"key\": \"Created_By\", \"value\": \"Ansible_rds_cluster_integration_test\"}]"
      },
      "tags": {
        "description": "A dictionary of key value pairs.",
        "type": "dictionary",
        "returned": "always",
        "sample": "{\"Name\": \"rds-cluster-demo\"}"
      },
      "vpc_security_groups": {
        "description": "A list of the DB cluster\u2019s security groups and their status.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "status": {
            "description": "Status of the security group.",
            "type": "string",
            "returned": "always",
            "sample": "\"active\""
          },
          "vpc_security_group_id": {
            "description": "Security group of the cluster.",
            "type": "string",
            "returned": "always",
            "sample": "\"sg-12345678\""
          }
        }
      }
    }
  },
  "rds_cluster_info": {
    "description": "Obtain information about one or more RDS clusters",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/rds_cluster_info_module.html#ansible-collections-amazon-aws-rds-cluster-info-module",
    "return_values": {
      "clusters": {
        "description": "List of RDS clusters.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "suboptions": {
          "activity_stream_status": {
            "description": "The status of the database activity stream.",
            "type": "string",
            "returned": "success",
            "sample": "\"stopped\""
          },
          "allocated_storage": {
            "description": "The allocated storage size in gigabytes. Since aurora storage size is not fixed this is always 1 for aurora database engines.",
            "type": "integer",
            "returned": "success",
            "sample": "1"
          },
          "associated_roles": {
            "description": "A list of dictionaries of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. Each dictionary contains the role_arn and the status of the role.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[]"
          },
          "auto_minor_version_upgrade": {
            "description": "Specifies whether minor engine upgrades are applied automatically to the DB cluster during the maintenance window.",
            "type": "boolean",
            "returned": "always",
            "sample": "true"
          },
          "availability_zones": {
            "description": "The list of availability zones that instances in the DB cluster can be created in.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[\"us-east-1c\", \"us-east-1a\", \"us-east-1e\"]"
          },
          "backup_retention_period": {
            "description": "The number of days for which automatic DB snapshots are retained.",
            "type": "integer",
            "returned": "success",
            "sample": "1"
          },
          "cluster_create_time": {
            "description": "The time in UTC when the DB cluster was created.",
            "type": "string",
            "returned": "success",
            "sample": "\"2018-06-29T14:08:58.491000+00:00\""
          },
          "copy_tags_to_snapshot": {
            "description": "Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.",
            "type": "boolean",
            "returned": "success",
            "sample": "false"
          },
          "cross_account_clone": {
            "description": "Specifies whether the DB cluster is a clone of a DB cluster owned by a different Amazon Web Services account.",
            "type": "boolean",
            "returned": "success",
            "sample": "false"
          },
          "db_cluster_arn": {
            "description": "The Amazon Resource Name (ARN) for the DB cluster.",
            "type": "string",
            "returned": "success",
            "sample": "\"arn:aws:rds:us-east-1:123456789012:cluster:rds-cluster-demo\""
          },
          "db_cluster_identifier": {
            "description": "The lowercase user-supplied DB cluster identifier.",
            "type": "string",
            "returned": "success",
            "sample": "\"rds-cluster-demo\""
          },
          "db_cluster_members": {
            "description": "A list of dictionaries containing information about the instances in the cluster. Each dictionary contains the db_instance_identifier, is_cluster_writer (bool), db_cluster_parameter_group_status, and promotion_tier (int).",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[]"
          },
          "db_cluster_parameter_group": {
            "description": "The parameter group associated with the DB cluster.",
            "type": "string",
            "returned": "success",
            "sample": "\"default.aurora5.6\""
          },
          "db_cluster_resource_id": {
            "description": "The AWS Region-unique, immutable identifier for the DB cluster.",
            "type": "string",
            "returned": "success",
            "sample": "\"cluster-D2MEQDN3BQNXDF74K6DQJTHASU\""
          },
          "db_subnet_group": {
            "description": "The name of the subnet group associated with the DB Cluster.",
            "type": "string",
            "returned": "success",
            "sample": "\"default\""
          },
          "deletion_protection": {
            "description": "Indicates if the DB cluster has deletion protection enabled. The database can\u2019t be deleted when deletion protection is enabled.",
            "type": "boolean",
            "returned": "success",
            "sample": "false"
          },
          "domain_memberships": {
            "description": "The Active Directory Domain membership records associated with the DB cluster.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[]"
          },
          "earliest_restorable_time": {
            "description": "The earliest time to which a database can be restored with point-in-time restore.",
            "type": "string",
            "returned": "success",
            "sample": "\"2018-06-29T14:09:34.797000+00:00\""
          },
          "endpoint": {
            "description": "The connection endpoint for the primary instance of the DB cluster.",
            "type": "string",
            "returned": "success",
            "sample": "\"rds-cluster-demo.cluster-cvlrtwiennww.us-east-1.rds.amazonaws.com\""
          },
          "engine": {
            "description": "The database engine of the DB cluster.",
            "type": "string",
            "returned": "success",
            "sample": "\"aurora\""
          },
          "engine_mode": {
            "description": "The DB engine mode of the DB cluster.",
            "type": "string",
            "returned": "success",
            "sample": "\"provisioned\""
          },
          "engine_version": {
            "description": "The database engine version.",
            "type": "string",
            "returned": "success",
            "sample": "\"5.6.10a\""
          },
          "hosted_zone_id": {
            "description": "The ID that Amazon Route 53 assigns when you create a hosted zone.",
            "type": "string",
            "returned": "success",
            "sample": "\"Z2R2ITUGPM61AM\""
          },
          "http_endpoint_enabled": {
            "description": "A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is enabled.",
            "type": "boolean",
            "returned": "success",
            "sample": "false"
          },
          "iam_database_authentication_enabled": {
            "description": "Whether IAM accounts may be mapped to database accounts.",
            "type": "boolean",
            "returned": "success",
            "sample": "false"
          },
          "latest_restorable_time": {
            "description": "The latest time to which a database can be restored with point-in-time restore.",
            "type": "string",
            "returned": "success",
            "sample": "\"2018-06-29T14:09:34.797000+00:00\""
          },
          "master_username": {
            "description": "The master username for the DB cluster.",
            "type": "string",
            "returned": "success",
            "sample": "\"username\""
          },
          "multi_az": {
            "description": "Whether the DB cluster has instances in multiple availability zones.",
            "type": "boolean",
            "returned": "success",
            "sample": "false"
          },
          "port": {
            "description": "The port that the database engine is listening on.",
            "type": "integer",
            "returned": "success",
            "sample": "3306"
          },
          "preferred_backup_window": {
            "description": "The UTC weekly time range during which system maintenance can occur.",
            "type": "string",
            "returned": "success",
            "sample": "\"10:18-10:48\""
          },
          "preferred_maintenance_window": {
            "description": "The UTC weekly time range during which system maintenance can occur.",
            "type": "string",
            "returned": "success",
            "sample": "\"tue:03:23-tue:03:53\""
          },
          "read_replica_identifiers": {
            "description": "A list of read replica ID strings associated with the DB cluster.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[]"
          },
          "reader_endpoint": {
            "description": "The reader endpoint for the DB cluster.",
            "type": "string",
            "returned": "success",
            "sample": "\"rds-cluster-demo.cluster-ro-cvlrtwiennww.us-east-1.rds.amazonaws.com\""
          },
          "status": {
            "description": "The status of the DB cluster.",
            "type": "string",
            "returned": "success",
            "sample": "\"available\""
          },
          "storage_encrypted": {
            "description": "Whether the DB cluster is storage encrypted.",
            "type": "boolean",
            "returned": "success",
            "sample": "false"
          },
          "tag_list": {
            "description": "A list of tags consisting of key-value pairs.",
            "type": "list",
            "returned": "success",
            "elements": "elements=dictionary",
            "sample": "[{\"key\": \"Created_By\", \"value\": \"Ansible_rds_cluster_integration_test\"}]"
          },
          "tags": {
            "description": "A dictionary of key value pairs.",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"Name\": \"rds-cluster-demo\"}"
          },
          "vpc_security_groups": {
            "description": "A list of the DB cluster\u2019s security groups and their status.",
            "type": "complex",
            "returned": "success",
            "suboptions": {
              "status": {
                "description": "Status of the security group.",
                "type": "string",
                "returned": "success",
                "sample": "\"active\""
              },
              "vpc_security_group_id": {
                "description": "Security group of the cluster.",
                "type": "string",
                "returned": "success",
                "sample": "\"sg-12345678\""
              }
            }
          }
        }
      }
    }
  },
  "rds_cluster_param_group": {
    "description": "Manage RDS cluster parameter groups",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/rds_cluster_param_group_module.html#ansible-collections-amazon-aws-rds-cluster-param-group-module",
    "return_values": {
      "db_cluster_parameter_group": {
        "description": "dictionary containing all the RDS cluster parameter group information.",
        "type": "complex",
        "returned": "success",
        "suboptions": {
          "db_cluster_parameter_group_arn": {
            "description": "The Amazon Resource Name (ARN) for the RDS cluster parameter group.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"arn:aws:rds:us-west-2:123456789012:cluster-pg:ansible-test-123456789012-redhat-cluster-param-group\""
          },
          "db_cluster_parameter_group_name": {
            "description": "The name of the RDS cluster parameter group.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"ansible-test-123456789012-redhat-cluster-param-group\""
          },
          "db_parameter_group_family": {
            "description": "The name of the RDS parameter group family that this RDS cluster parameter group is compatible with.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"postgres16\""
          },
          "description": {
            "description": "Provides the customer-specified description for this RDS cluster parameter group.",
            "type": "string",
            "returned": "when state=present",
            "sample": "\"RDS cluster param group\""
          },
          "tags": {
            "description": "A dictionary of tags.",
            "type": "dictionary",
            "returned": "when state=present",
            "sample": "{\"another\": \"tag\", \"resource_prefix\": \"ansible-test-53268383-redhat\", \"some\": \"tag\"}"
          }
        }
      }
    }
  },
  "rds_cluster_param_group_info": {
    "description": "Describes the properties of specific RDS cluster parameter group",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/rds_cluster_param_group_info_module.html#ansible-collections-amazon-aws-rds-cluster-param-group-info-module",
    "return_values": {
      "db_cluster_parameter_groups": {
        "description": "List of RDS cluster parameter groups.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "suboptions": {
          "db_cluster_parameter_group_arn": {
            "description": "The Amazon Resource Name (ARN) for the RDS cluster parameter group.",
            "type": "string",
            "returned": "success"
          },
          "db_cluster_parameter_group_name": {
            "description": "The name of the RDS cluster parameter group.",
            "type": "string",
            "returned": "success"
          },
          "db_parameter_group_family": {
            "description": "The name of the RDS parameter group family that this RDS cluster parameter group is compatible with.",
            "type": "string",
            "returned": "success"
          },
          "db_parameters": {
            "description": "Provides a list of parameters for the RDS cluster parameter group.",
            "type": "list",
            "returned": "When include_parameters is set",
            "elements": "elements=dictionary",
            "sample": "[{\"allowed_values\": \"1-600\", \"apply_method\": \"pending-reboot\", \"apply_type\": \"dynamic\", \"data_type\": \"integer\", \"description\": \"(s) Sets the maximum allowed time to complete client authentication.\", \"is_modifiable\": true, \"parameter_name\": \"authentication_timeout\", \"parameter_value\": \"100\", \"source\": \"user\", \"supported_engine_modes\": [\"provisioned\"]}]"
          },
          "description": {
            "description": "Provides the customer-specified description for this RDS cluster parameter group.",
            "type": "string",
            "returned": "success"
          },
          "tags": {
            "description": "A dictionary of key value pairs.",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"Name\": \"rds-cluster-demo\"}"
          }
        }
      }
    }
  },
  "rds_cluster_snapshot": {
    "description": "Manage Amazon RDS snapshots of DB clusters",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/rds_cluster_snapshot_module.html#ansible-collections-amazon-aws-rds-cluster-snapshot-module",
    "return_values": {
      "allocated_storage": {
        "description": "The allocated storage size of the DB cluster snapshot in gibibytes (GiB).",
        "type": "integer",
        "returned": "always",
        "sample": "0"
      },
      "availability_zone": {
        "description": "Availability zone of the database from which the snapshot was created.",
        "type": "string",
        "returned": "always",
        "sample": "\"us-west-2a\""
      },
      "cluster_create_time": {
        "description": "The time when the DB cluster was created, in Universal Coordinated Time (UTC).",
        "type": "string",
        "returned": "always",
        "sample": "\"2024-07-01T05:27:53.478000+00:00\""
      },
      "db_cluster_identifier": {
        "description": "Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was created from.",
        "type": "string",
        "returned": "always",
        "sample": "\"ansible-test-16638696\""
      },
      "db_cluster_snapshot_arn": {
        "description": "Amazon Resource Name for the snapshot.",
        "type": "string",
        "returned": "always",
        "sample": "\"arn:aws:rds:us-west-2:123456789012:snapshot:ansible-test-16638696-test-snapshot\""
      },
      "db_cluster_snapshot_identifier": {
        "description": "Specifies the identifier for the DB cluster snapshot.",
        "type": "string",
        "returned": "always",
        "sample": "\"ansible-test-16638696-test-snapshot\""
      },
      "engine": {
        "description": "Specifies the name of the database engine for this DB cluster snapshot.",
        "type": "string",
        "returned": "always",
        "sample": "\"aurora\""
      },
      "engine_mode": {
        "description": "Provides the engine mode of the database engine for this DB cluster snapshot.",
        "type": "string",
        "returned": "always",
        "sample": "\"5.6.mysql_aurora.1.22.5\""
      },
      "engine_version": {
        "description": "Version of the cluster from which the snapshot was created.",
        "type": "string",
        "returned": "always",
        "sample": "\"5.6.mysql_aurora.1.22.5\""
      },
      "iam_database_authentication_enabled": {
        "description": "Whether IAM database authentication is enabled.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "kms_key_id": {
        "description": "The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.",
        "type": "string",
        "returned": "always"
      },
      "license_model": {
        "description": "Provides the license model information for this DB cluster snapshot.",
        "type": "string",
        "returned": "always",
        "sample": "\"general-public-license\""
      },
      "master_username": {
        "description": "Provides the master username for this DB cluster snapshot.",
        "type": "string",
        "returned": "always",
        "sample": "\"test\""
      },
      "percent_progress": {
        "description": "Specifies the percentage of the estimated data that has been transferred.",
        "type": "integer",
        "returned": "always",
        "sample": "100"
      },
      "port": {
        "description": "Port on which the database is listening.",
        "type": "integer",
        "returned": "always",
        "sample": "3306"
      },
      "snapshot_create_time": {
        "description": "Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).",
        "type": "string",
        "returned": "always",
        "sample": "\"2019-06-15T10:46:23.776000+00:00\""
      },
      "snapshot_type": {
        "description": "How the snapshot was created (always manual for this module!).",
        "type": "string",
        "returned": "always",
        "sample": "\"manual\""
      },
      "source_db_cluster_snapshot_arn": {
        "description": "If the DB cluster snapshot was copied from a source DB cluster snapshot, the ARN for the source DB cluster snapshot, otherwise, null.",
        "type": "string",
        "returned": "always"
      },
      "status": {
        "description": "Specifies the status of this DB cluster snapshot.",
        "type": "string",
        "returned": "always",
        "sample": "\"available\""
      },
      "storage_encrypted": {
        "description": "Specifies whether the DB cluster snapshot is encrypted.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "tag_list": {
        "description": "A list of tags.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "sample": "[{\"key\": \"tag_one\", \"value\": \"ansible-test-123456789012-rds-cluster-snapshot-b One\"}]"
      },
      "tags": {
        "description": "Tags applied to the snapshot.",
        "type": "dictionary",
        "returned": "always",
        "sample": "{\"Tag Two\": \"two ansible-test-123456789012-rds-cluster-snapshot-b\"}"
      },
      "vpc_id": {
        "description": "ID of the VPC in which the DB lives.",
        "type": "string",
        "returned": "always",
        "sample": "\"vpc-09ff232e222710ae0\""
      }
    }
  },
  "rds_engine_versions_info": {
    "description": "Describes the properties of specific versions of DB engines",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/rds_engine_versions_info_module.html#ansible-collections-amazon-aws-rds-engine-versions-info-module",
    "return_values": {
      "db_engine_versions": {
        "description": "List of RDS engine versions.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "suboptions": {
          "create_time": {
            "description": "The creation time of the DB engine version.",
            "type": "string",
            "returned": "success"
          },
          "custom_db_engine_version_manifest": {
            "description": "JSON string that lists the installation files and parameters that RDS Custom uses to create a custom engine version (CEV).",
            "type": "string",
            "returned": "success"
          },
          "database_installation_files_s3_bucket_name": {
            "description": "The name of the Amazon S3 bucket that contains your database installation files.",
            "type": "string",
            "returned": "success"
          },
          "database_installation_files_s3_prefix": {
            "description": "The Amazon S3 directory that contains the database installation files.",
            "type": "string",
            "returned": "success"
          },
          "db_engine_description": {
            "description": "The description of the database engine.",
            "type": "string",
            "returned": "success"
          },
          "db_engine_media_type": {
            "description": "A value that indicates the source media provider of the AMI based on the usage operation.",
            "type": "string",
            "returned": "success"
          },
          "db_engine_version_arn": {
            "description": "The ARN of the custom engine version.",
            "type": "string",
            "returned": "success"
          },
          "db_engine_version_description": {
            "description": "The description of the database engine version.",
            "type": "string",
            "returned": "success"
          },
          "db_parameter_group_family": {
            "description": "The name of the DB parameter group family for the database engine.",
            "type": "string",
            "returned": "success"
          },
          "default_character_set": {
            "description": "The default character set for new instances of this engine version.",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"character_set_description\": \"Unicode 5.0 UTF-8 Universal character set\", \"character_set_name\": \"AL32UTF8\"}"
          },
          "engine": {
            "description": "The name of the database engine.",
            "type": "string",
            "returned": "success"
          },
          "engine_version": {
            "description": "The version number of the database engine.",
            "type": "string",
            "returned": "success"
          },
          "exportable_log_types": {
            "description": "The types of logs that the database engine has available for export to CloudWatch Logs.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string"
          },
          "image": {
            "description": "The EC2 image",
            "type": "complex",
            "returned": "success",
            "suboptions": {
              "image_id": {
                "description": "A value that indicates the ID of the AMI.",
                "type": "string",
                "returned": "success"
              },
              "status": {
                "description": "A value that indicates the status of a custom engine version (CEV).",
                "type": "string",
                "returned": "success"
              }
            }
          },
          "kms_key_id": {
            "description": "The Amazon Web Services KMS key identifier for an encrypted CEV.",
            "type": "string",
            "returned": "success"
          },
          "major_engine_version": {
            "description": "The major engine version of the CEV.",
            "type": "string",
            "returned": "success"
          },
          "status": {
            "description": "The status of the DB engine version, either available or deprecated.",
            "type": "string",
            "returned": "success"
          },
          "supported_ca_certificate_identifiers": {
            "description": "A list of the supported CA certificate identifiers.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[\"rds-ca-2019\", \"rds-ca-ecc384-g1\", \"rds-ca-rsa4096-g1\", \"rds-ca-rsa2048-g1\"]"
          },
          "supported_character_sets": {
            "description": "A list of the character sets supported by this engine for the CharacterSetName parameter of the CreateDBInstance operation.",
            "type": "list",
            "returned": "success",
            "elements": "elements=dictionary",
            "suboptions": {
              "character_set_description": {
                "description": "The description of the character set.",
                "type": "string",
                "returned": "success"
              },
              "character_set_name": {
                "description": "The name of the character set.",
                "type": "string",
                "returned": "success"
              }
            }
          },
          "supported_engine_modes": {
            "description": "A list of the supported DB engine modes.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string"
          },
          "supported_feature_names": {
            "description": "A list of features supported by the DB engine.",
            "type": "list",
            "returned": "success",
            "elements": "elements=string",
            "sample": "[\"Comprehend\", \"Lambda\", \"s3Export\", \"s3Import\", \"SageMaker\"]"
          },
          "supported_nchar_character_sets": {
            "description": "A list of the character sets supported by the Oracle DB engine.",
            "type": "list",
            "returned": "success",
            "elements": "elements=dictionary",
            "suboptions": {
              "character_set_description": {
                "description": "The description of the character set.",
                "type": "string",
                "returned": "success"
              },
              "character_set_name": {
                "description": "The name of the character set.",
                "type": "string",
                "returned": "success"
              }
            }
          },
          "supported_timezones": {
            "description": "A list of the time zones supported by this engine for the Timezone parameter of the CreateDBInstance action.",
            "type": "list",
            "returned": "success",
            "elements": "elements=dictionary",
            "sample": "[{\"TimezoneName\": \"xxx\"}]"
          },
          "supports_babelfish": {
            "description": "Indicates whether the engine version supports Babelfish for Aurora PostgreSQL.",
            "type": "boolean",
            "returned": "success"
          },
          "supports_certificate_rotation_without_restart": {
            "description": "Indicates whether the engine version supports rotating the server certificate without rebooting the DB instance.",
            "type": "boolean",
            "returned": "success"
          },
          "supports_global_databases": {
            "description": "Indicates whether you can use Aurora global databases with a specific DB engine version.",
            "type": "boolean",
            "returned": "success"
          },
          "supports_integrations": {
            "description": "Indicates whether the DB engine version supports zero-ETL integrations with Amazon Redshift.",
            "type": "boolean",
            "returned": "success"
          },
          "supports_local_write_forwarding": {
            "description": "Indicates whether the DB engine version supports forwarding write operations from reader DB instances to the writer DB instance in the DB cluster.",
            "type": "boolean",
            "returned": "success"
          },
          "supports_log_exports_to_cloudwatchLogs": {
            "description": "Indicates whether the engine version supports exporting the log types specified by ExportableLogTypes to CloudWatch Logs.",
            "type": "boolean",
            "returned": "success"
          },
          "supports_parallel_query": {
            "description": "Indicates whether you can use Aurora parallel query with a specific DB engine version.",
            "type": "boolean",
            "returned": "success"
          },
          "supports_read_replica": {
            "description": "Indicates whether the database engine version supports read replicas.",
            "type": "boolean",
            "returned": "success"
          },
          "tags": {
            "description": "A dictionary of key value pairs.",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"some\": \"tag\"}"
          },
          "valid_upgrade_target": {
            "description": "A list of engine versions that this database engine version can be upgraded to.",
            "type": "list",
            "returned": "success",
            "elements": "elements=dictionary",
            "sample": "[{\"auto_upgrade\": false, \"description\": \"Aurora PostgreSQL (Compatible with PostgreSQL 15.5)\", \"engine\": \"aurora-postgresql\", \"engine_version\": \"15.5\", \"is_major_version_upgrade\": false, \"supported_engine_modes\": [\"provisioned\"], \"supports_babelfish\": true, \"supports_global_databases\": true, \"supports_integrations\": false, \"supports_local_write_forwarding\": true, \"supports_parallel_query\": false}]"
          }
        }
      }
    }
  },
  "rds_global_cluster_info": {
    "description": "Obtain information about Aurora global database clusters",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/rds_global_cluster_info_module.html#ansible-collections-amazon-aws-rds-global-cluster-info-module",
    "return_values": {
      "global_clusters": {
        "description": "List of global clusters.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "deletion_protection": {
            "description": "Indicates if the DB cluster has deletion protection enabled. The database can\u2019t be deleted when deletion protection is enabled.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "engine": {
            "description": "The database engine of the DB cluster.",
            "type": "string",
            "returned": "always",
            "sample": "\"aurora-postgresql\""
          },
          "engine_version": {
            "description": "The database engine version.",
            "type": "string",
            "returned": "always",
            "sample": "\"14.8\""
          },
          "failover_state": {
            "description": "A data object containing all properties for the current state of an in-process or pending switchover or failover process for this global cluster (Aurora global database). This object is empty unless the SwitchoverGlobalCluster or FailoverGlobalCluster operation was called on this global cluster.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "from_db_cluster_arn": {
                "description": "The Amazon Resource Name (ARN) of the Aurora DB cluster that is currently being demoted, and which is associated with this state.",
                "type": "string",
                "returned": "always",
                "sample": "\"arn:aws:rds:us-east-1:123456789012:cluster:ansible-test-primary\""
              },
              "is_data_loss_allowed": {
                "description": "Indicates whether the operation is a global switchover or a global failover. If data loss is allowed, then the operation is a global failover. Otherwise, it is a switchover.",
                "type": "boolean",
                "returned": "always",
                "sample": "false"
              },
              "status": {
                "description": "The current status of the global cluster.",
                "type": "string",
                "returned": "always",
                "sample": "\"pending\""
              },
              "to_db_cluster_arn": {
                "description": "The Amazon Resource Name (ARN) of the Aurora DB cluster that is currently being promoted, and which is associated with this state.",
                "type": "string",
                "returned": "always",
                "sample": "\"arn:aws:rds:us-east-2:123456789012:cluster:ansible-test-secondary\""
              }
            }
          },
          "gloabl_cluster_members": {
            "description": "The list of primary and secondary clusters within the global database cluster.",
            "type": "list",
            "returned": "success",
            "elements": "elements=dictionary",
            "suboptions": {
              "db_cluster_arn": {
                "description": "The Amazon Resource Name (ARN) for each Aurora DB cluster in the global cluster.",
                "type": "string",
                "returned": "always",
                "sample": "\"arn:aws:rds:us-east-1:123456789012:cluster:ansible-test-primary\""
              },
              "global_write_forwarding_status": {
                "description": "The status of write forwarding for a secondary cluster in the global cluster.",
                "type": "string",
                "returned": "always",
                "sample": "\"disabled\""
              },
              "is_writer": {
                "description": "Indicates whether the Aurora DB cluster is the primary cluster for the global cluster with which it is associated.",
                "type": "boolean",
                "returned": "always",
                "sample": "false"
              },
              "readers": {
                "description": "The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the global cluster.",
                "type": "list",
                "returned": "always",
                "elements": "elements=string",
                "sample": "[\"arn:aws:rds:us-east-2:123456789012:cluster:ansible-test-secondary\"]"
              }
            }
          },
          "global_cluster_arn": {
            "description": "The Amazon Resource Name (ARN) for the global database cluster.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:rds::123456789012:global-cluster:ansible-test-global-cluster\""
          },
          "global_cluster_identifier": {
            "description": "User-supplied global database cluster identifier.",
            "type": "string",
            "returned": "success",
            "sample": "\"ansible-test-global-cluster\""
          },
          "global_cluster_resource_id": {
            "description": "The Amazon Web Services Region-unique, immutable identifier for the global database cluster.",
            "type": "string",
            "returned": "always",
            "sample": "\"cluster-123456789012\""
          },
          "status": {
            "description": "The status of the DB cluster.",
            "type": "string",
            "returned": "always",
            "sample": "\"available\""
          },
          "storage_encrypted": {
            "description": "Whether the DB cluster is storage encrypted.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          }
        }
      }
    }
  },
  "rds_instance": {
    "description": "Manage RDS instances",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/rds_instance_module.html#ansible-collections-amazon-aws-rds-instance-module",
    "return_values": {
      "allocated_storage": {
        "description": "The allocated storage size in gigabytes. This is always 1 for aurora database engines.",
        "type": "integer",
        "returned": "always",
        "sample": "20"
      },
      "associated_roles": {
        "description": "The list of currently associated roles.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "sample": "[]"
      },
      "auto_minor_version_upgrade": {
        "description": "Whether minor engine upgrades are applied automatically to the DB instance during the maintenance window.",
        "type": "boolean",
        "returned": "always",
        "sample": "true"
      },
      "availability_zone": {
        "description": "The availability zone for the DB instance.",
        "type": "string",
        "returned": "always",
        "sample": "\"us-east-1f\""
      },
      "backup_retention_period": {
        "description": "The number of days for which automated backups are retained.",
        "type": "integer",
        "returned": "always",
        "sample": "1"
      },
      "ca_certificate_identifier": {
        "description": "The identifier of the CA certificate for the DB instance.",
        "type": "string",
        "returned": "always",
        "sample": "\"rds-ca-2015\""
      },
      "copy_tags_to_snapshot": {
        "description": "Whether tags are copied from the DB instance to snapshots of the DB instance.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "db_instance_arn": {
        "description": "The Amazon Resource Name (ARN) for the DB instance.",
        "type": "string",
        "returned": "always",
        "sample": "\"arn:aws:rds:us-east-1:123456789012:db:ansible-test\""
      },
      "db_instance_class": {
        "description": "The name of the compute and memory capacity class of the DB instance.",
        "type": "string",
        "returned": "always",
        "sample": "\"db.m5.large\""
      },
      "db_instance_identifier": {
        "description": "The identifier of the DB instance.",
        "type": "string",
        "returned": "always",
        "sample": "\"ansible-test\""
      },
      "db_instance_port": {
        "description": "The port that the DB instance listens on.",
        "type": "integer",
        "returned": "always",
        "sample": "0"
      },
      "db_instance_status": {
        "description": "The current state of this database.",
        "type": "string",
        "returned": "always",
        "sample": "\"stopped\""
      },
      "db_parameter_groups": {
        "description": "The list of DB parameter groups applied to this DB instance.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "db_parameter_group_name": {
            "description": "The name of the DP parameter group.",
            "type": "string",
            "returned": "always",
            "sample": "\"default.mariadb10.0\""
          },
          "parameter_apply_status": {
            "description": "The status of parameter updates.",
            "type": "string",
            "returned": "always",
            "sample": "\"in-sync\""
          }
        }
      },
      "db_security_groups": {
        "description": "A list of DB security groups associated with this DB instance.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "sample": "[]"
      },
      "db_subnet_group": {
        "description": "The subnet group associated with the DB instance.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "db_subnet_group_description": {
            "description": "The description of the DB subnet group.",
            "type": "string",
            "returned": "always",
            "sample": "\"default\""
          },
          "db_subnet_group_name": {
            "description": "The name of the DB subnet group.",
            "type": "string",
            "returned": "always",
            "sample": "\"default\""
          },
          "subnet_group_status": {
            "description": "The status of the DB subnet group.",
            "type": "string",
            "returned": "always",
            "sample": "\"Complete\""
          },
          "subnets": {
            "description": "A list of Subnet elements.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "subnet_availability_zone": {
                "description": "The availability zone of the subnet.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "name": {
                    "description": "The name of the Availability Zone.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"us-east-1c\""
                  }
                }
              },
              "subnet_identifier": {
                "description": "The ID of the subnet.",
                "type": "string",
                "returned": "always",
                "sample": "\"subnet-12345678\""
              },
              "subnet_status": {
                "description": "The status of the subnet.",
                "type": "string",
                "returned": "always",
                "sample": "\"Active\""
              }
            }
          },
          "vpc_id": {
            "description": "The VpcId of the DB subnet group.",
            "type": "string",
            "returned": "always",
            "sample": "\"vpc-12345678\""
          }
        }
      },
      "dbi_resource_id": {
        "description": "The AWS Region-unique, immutable identifier for the DB instance.",
        "type": "string",
        "returned": "always",
        "sample": "\"db-UHV3QRNWX4KB6GALCIGRML6QFA\""
      },
      "deletion_protection": {
        "description": "true if the DB instance has deletion protection enabled, False if not.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "domain_memberships": {
        "description": "The Active Directory Domain membership records associated with the DB instance.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "sample": "[]"
      },
      "endpoint": {
        "description": "The connection endpoint.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "address": {
            "description": "The DNS address of the DB instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"ansible-test.cvlrtwiennww.us-east-1.rds.amazonaws.com\""
          },
          "hosted_zone_id": {
            "description": "The ID that Amazon Route 53 assigns when you create a hosted zone.",
            "type": "string",
            "returned": "always",
            "sample": "\"ZTR2ITUGPA61AM\""
          },
          "port": {
            "description": "The port that the database engine is listening on.",
            "type": "integer",
            "returned": "always",
            "sample": "3306"
          }
        }
      },
      "engine": {
        "description": "The database engine version.",
        "type": "string",
        "returned": "always",
        "sample": "\"mariadb\""
      },
      "engine_version": {
        "description": "The database engine version.",
        "type": "string",
        "returned": "always",
        "sample": "\"10.0.35\""
      },
      "iam_database_authentication_enabled": {
        "description": "Whether mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "instance_create_time": {
        "description": "The date and time the DB instance was created.",
        "type": "string",
        "returned": "always",
        "sample": "\"2018-07-04T16:48:35.332000+00:00\""
      },
      "kms_key_id": {
        "description": "The AWS KMS key identifier for the encrypted DB instance when storage_encrypted is true.",
        "type": "string",
        "returned": "When storage_encrypted is true",
        "sample": "\"arn:aws:kms:us-east-1:123456789012:key/70c45553-ad2e-4a85-9f14-cfeb47555c33\""
      },
      "latest_restorable_time": {
        "description": "The latest time to which a database can be restored with point-in-time restore.",
        "type": "string",
        "returned": "always",
        "sample": "\"2018-07-04T16:50:50.642000+00:00\""
      },
      "license_model": {
        "description": "The License model information for this DB instance.",
        "type": "string",
        "returned": "always",
        "sample": "\"general-public-license\""
      },
      "master_username": {
        "description": "The master username for the DB instance.",
        "type": "string",
        "returned": "always",
        "sample": "\"test\""
      },
      "max_allocated_storage": {
        "description": "The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.",
        "type": "integer",
        "returned": "When max allocated storage is present.",
        "sample": "100"
      },
      "monitoring_interval": {
        "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. 0 means collecting Enhanced Monitoring metrics is disabled.",
        "type": "integer",
        "returned": "always",
        "sample": "0"
      },
      "multi_az": {
        "description": "Whether the DB instance is a Multi-AZ deployment.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "multi_tenant": {
        "description": "Specifies whether to use the multi-tenant configuration or the single-tenant configuration (default).",
        "type": "boolean",
        "returned": "for Oracle container database (CDB) engines and boto3_version == \u201c1.28.80\u201d",
        "sample": "false"
      },
      "option_group_memberships": {
        "description": "The list of option group memberships for this DB instance.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "option_group_name": {
            "description": "The name of the option group that the instance belongs to.",
            "type": "string",
            "returned": "always",
            "sample": "\"default:mariadb-10-0\""
          },
          "status": {
            "description": "The status of the DB instance\u2019s option group membership.",
            "type": "string",
            "returned": "always",
            "sample": "\"in-sync\""
          }
        }
      },
      "pending_modified_values": {
        "description": "The changes to the DB instance that are pending.",
        "type": "complex",
        "returned": "always"
      },
      "performance_insights_enabled": {
        "description": "true if Performance Insights is enabled for the DB instance, and otherwise false.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "preferred_backup_window": {
        "description": "The daily time range during which automated backups are created if automated backups are enabled.",
        "type": "string",
        "returned": "always",
        "sample": "\"07:01-07:31\""
      },
      "preferred_maintenance_window": {
        "description": "The weekly time range (in UTC) during which system maintenance can occur.",
        "type": "string",
        "returned": "always",
        "sample": "\"sun:09:31-sun:10:01\""
      },
      "publicly_accessible": {
        "description": "True for an Internet-facing instance with a publicly resolvable DNS name, False to indicate an internal instance with a DNS name that resolves to a private IP address.",
        "type": "boolean",
        "returned": "always",
        "sample": "true"
      },
      "read_replica_db_instance_identifiers": {
        "description": "Identifiers of the Read Replicas associated with this DB instance.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "sample": "[]"
      },
      "storage_encrypted": {
        "description": "Whether the DB instance is encrypted.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "storage_type": {
        "description": "The storage type to be associated with the DB instance.",
        "type": "string",
        "returned": "always",
        "sample": "\"standard\""
      },
      "tags": {
        "description": "A dictionary of tags associated with the DB instance.",
        "type": "complex",
        "returned": "always"
      },
      "vpc_security_groups": {
        "description": "A list of VPC security group elements that the DB instance belongs to.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "status": {
            "description": "The status of the VPC security group.",
            "type": "string",
            "returned": "always",
            "sample": "\"active\""
          },
          "vpc_security_group_id": {
            "description": "The name of the VPC security group.",
            "type": "string",
            "returned": "always",
            "sample": "\"sg-12345678\""
          }
        }
      }
    }
  },
  "rds_instance_info": {
    "description": "obtain information about one or more RDS instances",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/rds_instance_info_module.html#ansible-collections-amazon-aws-rds-instance-info-module",
    "return_values": {
      "instances": {
        "description": "List of RDS instances",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "allocated_storage": {
            "description": "Gigabytes of storage allocated to the database.",
            "type": "integer",
            "returned": "always",
            "sample": "10"
          },
          "auto_minor_version_upgrade": {
            "description": "Whether minor version upgrades happen automatically.",
            "type": "boolean",
            "returned": "always",
            "sample": "true"
          },
          "availability_zone": {
            "description": "Availability Zone in which the database resides.",
            "type": "string",
            "returned": "always",
            "sample": "\"us-west-2b\""
          },
          "backup_retention_period": {
            "description": "Days for which backups are retained.",
            "type": "integer",
            "returned": "always",
            "sample": "7"
          },
          "ca_certificate_identifier": {
            "description": "ID for the CA certificate.",
            "type": "string",
            "returned": "always",
            "sample": "\"rds-ca-2015\""
          },
          "copy_tags_to_snapshot": {
            "description": "Whether DB tags should be copied to the snapshot.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "db_instance_arn": {
            "description": "ARN of the database instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:rds:us-west-2:123456789012:db:helloworld-rds\""
          },
          "db_instance_class": {
            "description": "Instance class of the database instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"db.t3.small\""
          },
          "db_instance_identifier": {
            "description": "Database instance identifier.",
            "type": "string",
            "returned": "always",
            "sample": "\"helloworld-rds\""
          },
          "db_instance_port": {
            "description": "Port used by the database instance.",
            "type": "integer",
            "returned": "always",
            "sample": "0"
          },
          "db_instance_status": {
            "description": "Status of the database instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"available\""
          },
          "db_name": {
            "description": "Name of the database.",
            "type": "string",
            "returned": "always",
            "sample": "\"management\""
          },
          "db_parameter_groups": {
            "description": "List of database parameter groups.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "db_parameter_group_name": {
                "description": "Name of the database parameter group.",
                "type": "string",
                "returned": "always",
                "sample": "\"psql-pg-helloworld\""
              },
              "parameter_apply_status": {
                "description": "Whether the parameter group has been applied.",
                "type": "string",
                "returned": "always",
                "sample": "\"in-sync\""
              }
            }
          },
          "db_security_groups": {
            "description": "List of security groups used by the database instance.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[]"
          },
          "db_subnet_group": {
            "description": "List of subnet groups.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "db_subnet_group_description": {
                "description": "Description of the DB subnet group.",
                "type": "string",
                "returned": "always",
                "sample": "\"My database subnet group\""
              },
              "db_subnet_group_name": {
                "description": "Name of the database subnet group.",
                "type": "string",
                "returned": "always",
                "sample": "\"my-subnet-group\""
              },
              "subnet_group_status": {
                "description": "Subnet group status.",
                "type": "string",
                "returned": "always",
                "sample": "\"Complete\""
              },
              "subnets": {
                "description": "List of subnets in the subnet group.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "subnet_availability_zone": {
                    "description": "Availability zone of the subnet.",
                    "type": "complex",
                    "returned": "always",
                    "suboptions": {
                      "name": {
                        "description": "Name of the availability zone.",
                        "type": "string",
                        "returned": "always",
                        "sample": "\"us-west-2c\""
                      }
                    }
                  },
                  "subnet_identifier": {
                    "description": "Subnet ID.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"subnet-abcd1234\""
                  },
                  "subnet_status": {
                    "description": "Subnet status.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"Active\""
                  }
                }
              },
              "vpc_id": {
                "description": "VPC id of the subnet group.",
                "type": "string",
                "returned": "always",
                "sample": "\"vpc-abcd1234\""
              }
            }
          },
          "dbi_resource_id": {
            "description": "AWS Region-unique, immutable identifier for the DB instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"db-AAAAAAAAAAAAAAAAAAAAAAAAAA\""
          },
          "deletion_protection": {
            "description": "True if the DB instance has deletion protection enabled, False if not.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "domain_memberships": {
            "description": "List of domain memberships.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[]"
          },
          "endpoint": {
            "description": "Database endpoint",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "address": {
                "description": "Database endpoint address.",
                "type": "string",
                "returned": "always",
                "sample": "\"helloworld-rds.ctrqpe3so1sf.us-west-2.rds.amazonaws.com\""
              },
              "hosted_zone_id": {
                "description": "Route 53 hosted zone ID.",
                "type": "string",
                "returned": "always",
                "sample": "\"Z1PABCD0000000\""
              },
              "port": {
                "description": "Database endpoint port.",
                "type": "integer",
                "returned": "always",
                "sample": "5432"
              }
            }
          },
          "engine": {
            "description": "Database engine.",
            "type": "string",
            "returned": "always",
            "sample": "\"postgres\""
          },
          "engine_version": {
            "description": "Database engine version.",
            "type": "string",
            "returned": "always",
            "sample": "\"9.5.10\""
          },
          "iam_database_authentication_enabled": {
            "description": "Whether database authentication through IAM is enabled.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "instance_create_time": {
            "description": "Date and time the instance was created.",
            "type": "string",
            "returned": "always",
            "sample": "\"2017-10-10T04:00:07.434000+00:00\""
          },
          "iops": {
            "description": "The Provisioned IOPS value for the DB instance.",
            "type": "integer",
            "returned": "always",
            "sample": "1000"
          },
          "kms_key_id": {
            "description": "KMS Key ID.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:kms:us-west-2:123456789012:key/abcd1234-0000-abcd-1111-0123456789ab\""
          },
          "latest_restorable_time": {
            "description": "Latest time to which a database can be restored with point-in-time restore.",
            "type": "string",
            "returned": "always",
            "sample": "\"2018-05-17T00:03:56+00:00\""
          },
          "license_model": {
            "description": "License model.",
            "type": "string",
            "returned": "always",
            "sample": "\"postgresql-license\""
          },
          "master_username": {
            "description": "Database master username.",
            "type": "string",
            "returned": "always",
            "sample": "\"dbadmin\""
          },
          "monitoring_interval": {
            "description": "Interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.",
            "type": "integer",
            "returned": "always",
            "sample": "0"
          },
          "multi_az": {
            "description": "Whether Multi-AZ is on.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "option_group_memberships": {
            "description": "List of option groups.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "option_group_name": {
                "description": "Option group name.",
                "type": "string",
                "returned": "always",
                "sample": "\"default:postgres-9-5\""
              },
              "status": {
                "description": "Status of option group.",
                "type": "string",
                "returned": "always",
                "sample": "\"in-sync\""
              }
            }
          },
          "pending_modified_values": {
            "description": "Modified values pending application.",
            "type": "complex",
            "returned": "always"
          },
          "performance_insights_enabled": {
            "description": "Whether performance insights are enabled.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "preferred_backup_window": {
            "description": "Preferred backup window.",
            "type": "string",
            "returned": "always",
            "sample": "\"04:00-05:00\""
          },
          "preferred_maintenance_window": {
            "description": "Preferred maintenance window.",
            "type": "string",
            "returned": "always",
            "sample": "\"mon:05:00-mon:05:30\""
          },
          "publicly_accessible": {
            "description": "Whether the DB is publicly accessible.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "read_replica_db_instance_identifiers": {
            "description": "List of database instance read replicas.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[]"
          },
          "storage_encrypted": {
            "description": "Whether the storage is encrypted.",
            "type": "boolean",
            "returned": "always",
            "sample": "true"
          },
          "storage_type": {
            "description": "Storage type of the Database instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"gp2\""
          },
          "tags": {
            "description": "Tags used by the database instance.",
            "type": "complex",
            "returned": "always"
          },
          "vpc_security_groups": {
            "description": "List of VPC security groups.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "status": {
                "description": "Status of the VPC security group.",
                "type": "string",
                "returned": "always",
                "sample": "\"active\""
              },
              "vpc_security_group_id": {
                "description": "VPC Security Group ID.",
                "type": "string",
                "returned": "always",
                "sample": "\"sg-abcd1234\""
              }
            }
          }
        }
      }
    }
  },
  "rds_instance_param_group": {
    "description": "manage RDS parameter groups",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/rds_instance_param_group_module.html#ansible-collections-amazon-aws-rds-instance-param-group-module",
    "return_values": {
      "db_parameter_group_arn": {
        "description": "ARN of the DB parameter group.",
        "type": "string",
        "returned": "when state=present"
      },
      "db_parameter_group_family": {
        "description": "DB parameter group family that this DB parameter group is compatible with.",
        "type": "string",
        "returned": "when state=present"
      },
      "db_parameter_group_name": {
        "description": "Name of DB parameter group.",
        "type": "string",
        "returned": "when state=present"
      },
      "description": {
        "description": "description of the DB parameter group.",
        "type": "string",
        "returned": "when state=present"
      },
      "errors": {
        "description": "List of errors from attempting to modify parameters that are not modifiable.",
        "type": "list",
        "returned": "when state=present",
        "elements": "elements=string"
      },
      "tags": {
        "description": "A dictionary of tags.",
        "type": "dictionary",
        "returned": "when state=present"
      }
    }
  },
  "rds_instance_param_group_info": {
    "description": "Describes the RDS parameter group.",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/rds_instance_param_group_info_module.html#ansible-collections-amazon-aws-rds-instance-param-group-info-module",
    "return_values": {
      "db_instance_parameter_groups": {
        "description": "List of RDS instance parameter groups.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "suboptions": {
          "db_parameter_group_arn": {
            "description": "The Amazon Resource Name (ARN) for the RDS instance parameter group.",
            "type": "string",
            "returned": "success"
          },
          "db_parameter_group_family": {
            "description": "The name of the RDS parameter group family that this RDS instance parameter group is compatible with.",
            "type": "string",
            "returned": "success"
          },
          "db_parameter_group_name": {
            "description": "The name of the RDS instance parameter group.",
            "type": "string",
            "returned": "success"
          },
          "description": {
            "description": "Provides the customer-specified description for this RDS instance parameter group.",
            "type": "string",
            "returned": "success"
          },
          "tags": {
            "description": "Any tags associated to the parameter group.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"Env\": \"Dev001\", \"Name\": \"test-parameter-group\"}"
          }
        }
      }
    }
  },
  "rds_instance_snapshot": {
    "description": "Manage Amazon RDS instance snapshots",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/rds_instance_snapshot_module.html#ansible-collections-amazon-aws-rds-instance-snapshot-module",
    "return_values": {
      "allocated_storage": {
        "description": "How much storage is allocated in GB.",
        "type": "integer",
        "returned": "always",
        "sample": "20"
      },
      "availability_zone": {
        "description": "Availability zone of the database from which the snapshot was created.",
        "type": "string",
        "returned": "always",
        "sample": "\"us-west-2a\""
      },
      "db_instance_identifier": {
        "description": "Database from which the snapshot was created.",
        "type": "string",
        "returned": "always",
        "sample": "\"ansible-test-16638696\""
      },
      "db_snapshot_arn": {
        "description": "Amazon Resource Name for the snapshot.",
        "type": "string",
        "returned": "always",
        "sample": "\"arn:aws:rds:us-west-2:123456789012:snapshot:ansible-test-16638696-test-snapshot\""
      },
      "db_snapshot_identifier": {
        "description": "Name of the snapshot.",
        "type": "string",
        "returned": "always",
        "sample": "\"ansible-test-16638696-test-snapshot\""
      },
      "dbi_resource_id": {
        "description": "The identifier for the source DB instance, which can\u2019t be changed and which is unique to an AWS Region.",
        "type": "string",
        "returned": "always",
        "sample": "\"db-MM4P2U35RQRAMWD3QDOXWPZP4U\""
      },
      "encrypted": {
        "description": "Whether the snapshot is encrypted.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "engine": {
        "description": "Engine of the database from which the snapshot was created.",
        "type": "string",
        "returned": "always",
        "sample": "\"mariadb\""
      },
      "engine_version": {
        "description": "Version of the database from which the snapshot was created.",
        "type": "string",
        "returned": "always",
        "sample": "\"10.2.21\""
      },
      "iam_database_authentication_enabled": {
        "description": "Whether IAM database authentication is enabled.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "instance_create_time": {
        "description": "Creation time of the instance from which the snapshot was created.",
        "type": "string",
        "returned": "always",
        "sample": "\"2019-06-15T10:15:56.221000+00:00\""
      },
      "license_model": {
        "description": "License model of the database.",
        "type": "string",
        "returned": "always",
        "sample": "\"general-public-license\""
      },
      "master_username": {
        "description": "Master username of the database.",
        "type": "string",
        "returned": "always",
        "sample": "\"test\""
      },
      "option_group_name": {
        "description": "Option group of the database.",
        "type": "string",
        "returned": "always",
        "sample": "\"default:mariadb-10-2\""
      },
      "percent_progress": {
        "description": "How much progress has been made taking the snapshot. Will be 100 for an available snapshot.",
        "type": "integer",
        "returned": "always",
        "sample": "100"
      },
      "port": {
        "description": "Port on which the database is listening.",
        "type": "integer",
        "returned": "always",
        "sample": "3306"
      },
      "processor_features": {
        "description": "List of processor features of the database.",
        "type": "list",
        "returned": "always",
        "elements": "elements=string",
        "sample": "[]"
      },
      "snapshot_create_time": {
        "description": "Creation time of the snapshot.",
        "type": "string",
        "returned": "always",
        "sample": "\"2019-06-15T10:46:23.776000+00:00\""
      },
      "snapshot_type": {
        "description": "How the snapshot was created (always manual for this module!).",
        "type": "string",
        "returned": "always",
        "sample": "\"manual\""
      },
      "source_db_snapshot_identifier": {
        "description": "The DB snapshot ARN that the DB snapshot was copied from.",
        "type": "string",
        "returned": "when snapshot is a copy",
        "sample": "\"arn:aws:rds:us-west-2:123456789012:snapshot:ansible-test-16638696-test-snapshot-source\""
      },
      "status": {
        "description": "Status of the snapshot.",
        "type": "string",
        "returned": "always",
        "sample": "\"available\""
      },
      "storage_type": {
        "description": "Storage type of the database.",
        "type": "string",
        "returned": "always",
        "sample": "\"gp2\""
      },
      "tags": {
        "description": "Tags applied to the snapshot.",
        "type": "complex",
        "returned": "always"
      },
      "vpc_id": {
        "description": "ID of the VPC in which the DB lives.",
        "type": "string",
        "returned": "always",
        "sample": "\"vpc-09ff232e222710ae0\""
      }
    }
  },
  "rds_option_group": {
    "description": "Manages the creation, modification, deletion of RDS option groups",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/rds_option_group_module.html#ansible-collections-amazon-aws-rds-option-group-module",
    "return_values": {
      "allows_vpc_and_non_vpc_instance_memberships": {
        "description": "Indicates whether this option group can be applied to both VPC and non-VPC instances.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "changed": {
        "description": "If the Option Group has changed.",
        "type": "boolean",
        "returned": "always",
        "sample": "true"
      },
      "engine_name": {
        "description": "Indicates the name of the engine that this option group can be applied to.",
        "type": "string",
        "returned": "always",
        "sample": "\"mysql\""
      },
      "major_engine_version": {
        "description": "Indicates the major engine version associated with this option group.",
        "type": "string",
        "returned": "always",
        "sample": "\"5.6\""
      },
      "option_group_arn": {
        "description": "The Amazon Resource Name (ARN) for the option group.",
        "type": "string",
        "returned": "always",
        "sample": "\"arn:aws:rds:ap-southeast-2:123456789012:og:ansible-test-option-group\""
      },
      "option_group_description": {
        "description": "Provides a description of the option group.",
        "type": "string",
        "returned": "always",
        "sample": "\"test mysql option group\""
      },
      "option_group_name": {
        "description": "Specifies the name of the option group.",
        "type": "string",
        "returned": "always",
        "sample": "\"test-mysql-option-group\""
      },
      "options": {
        "description": "Indicates what options are available in the option group.",
        "type": "list",
        "returned": "always",
        "elements": "elements=dictionary",
        "suboptions": {
          "db_security_group_memberships": {
            "description": "If the option requires access to a port, then this DB security group allows access to the port.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "db_security_group_name": {
                "description": "The name of the DB security group.",
                "type": "string",
                "returned": "always",
                "sample": "\"mydbsecuritygroup\""
              },
              "status": {
                "description": "The status of the DB security group.",
                "type": "string",
                "returned": "always",
                "sample": "\"available\""
              }
            }
          },
          "option_description": {
            "description": "The description of the option.",
            "type": "string",
            "returned": "always",
            "sample": "\"Innodb Memcached for MySQL\""
          },
          "option_name": {
            "description": "The name of the option.",
            "type": "string",
            "returned": "always",
            "sample": "\"MEMCACHED\""
          },
          "option_settings": {
            "description": "The name of the option.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "suboptions": {
              "allowed_values": {
                "description": "The allowed values of the option setting.",
                "type": "string",
                "returned": "always",
                "sample": "\"1-2048\""
              },
              "apply_type": {
                "description": "The DB engine specific parameter type.",
                "type": "string",
                "returned": "always",
                "sample": "\"STATIC\""
              },
              "data_type": {
                "description": "The data type of the option setting.",
                "type": "string",
                "returned": "always",
                "sample": "\"INTEGER\""
              },
              "default_value": {
                "description": "The default value of the option setting.",
                "type": "string",
                "returned": "always",
                "sample": "\"1024\""
              },
              "description": {
                "description": "The description of the option setting.",
                "type": "string",
                "returned": "always",
                "sample": "\"Verbose level for memcached.\""
              },
              "is_collection": {
                "description": "Indicates if the option setting is part of a collection.",
                "type": "boolean",
                "returned": "always",
                "sample": "true"
              },
              "is_modifiable": {
                "description": "A Boolean value that, when true, indicates the option setting can be modified from the default.",
                "type": "boolean",
                "returned": "always",
                "sample": "true"
              },
              "name": {
                "description": "The name of the option that has settings that you can set.",
                "type": "string",
                "returned": "always",
                "sample": "\"INNODB_API_ENABLE_MDL\""
              },
              "value": {
                "description": "The current value of the option setting.",
                "type": "string",
                "returned": "always",
                "sample": "\"0\""
              }
            }
          },
          "permanent": {
            "description": "Indicate if this option is permanent.",
            "type": "boolean",
            "returned": "always",
            "sample": "true"
          },
          "persistent": {
            "description": "Indicate if this option is persistent.",
            "type": "boolean",
            "returned": "always",
            "sample": "true"
          },
          "port": {
            "description": "If required, the port configured for this option to use.",
            "type": "integer",
            "returned": "always",
            "sample": "11211"
          },
          "vpc_security_group_memberships": {
            "description": "If the option requires access to a port, then this VPC security group allows access to the port.",
            "type": "list",
            "returned": "always",
            "elements": "elements=dictionary",
            "suboptions": {
              "status": {
                "description": "The status of the VPC security group.",
                "type": "string",
                "returned": "always",
                "sample": "\"available\""
              },
              "vpc_security_group_id": {
                "description": "The name of the VPC security group.",
                "type": "string",
                "returned": "always",
                "sample": "\"sg-0cd636a23ae76e9a4\""
              }
            }
          }
        }
      },
      "tags": {
        "description": "The tags associated the RDS option group.",
        "type": "dictionary",
        "returned": "always",
        "sample": "{\"Ansible\": \"Test\"}"
      },
      "vpc_id": {
        "description": "If present, this option group can only be applied to instances that are in the VPC indicated by this field.",
        "type": "string",
        "returned": "always",
        "sample": "\"vpc-bf07e9d6\""
      }
    }
  },
  "rds_option_group_info": {
    "description": "rds_option_group_info module",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/rds_option_group_info_module.html#ansible-collections-amazon-aws-rds-option-group-info-module",
    "return_values": {
      "changed": {
        "description": "True if listing the RDS option group succeeds.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "result": {
        "description": "The available RDS option groups.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "allows_vpc_and_non_vpc_instance_memberships": {
            "description": "Indicates whether this option group can be applied to both VPC and non-VPC instances.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "engine_name": {
            "description": "Indicates the name of the engine that this option group can be applied to.",
            "type": "string",
            "returned": "always",
            "sample": "\"mysql\""
          },
          "major_engine_version": {
            "description": "Indicates the major engine version associated with this option group.",
            "type": "string",
            "returned": "always",
            "sample": "\"5.6\""
          },
          "option_group_arn": {
            "description": "The Amazon Resource Name (ARN) for the option group.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:rds:ap-southeast-2:123456789012:og:ansible-test-option-group\""
          },
          "option_group_description": {
            "description": "Provides a description of the option group.",
            "type": "string",
            "returned": "always",
            "sample": "\"test mysql option group\""
          },
          "option_group_name": {
            "description": "Specifies the name of the option group.",
            "type": "string",
            "returned": "always",
            "sample": "\"test-mysql-option-group\""
          },
          "options": {
            "description": "Indicates what options are available in the option group.",
            "type": "complex",
            "returned": "always",
            "suboptions": {
              "db_security_group_memberships": {
                "description": "If the option requires access to a port, then this DB security group allows access to the port.",
                "type": "complex",
                "returned": "always",
                "sample": "\"list\"",
                "suboptions": {
                  "db_security_group_name": {
                    "description": "The name of the DB security group.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"mydbsecuritygroup\""
                  },
                  "status": {
                    "description": "The status of the DB security group.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"available\""
                  }
                }
              },
              "option_description": {
                "description": "The description of the option.",
                "type": "string",
                "returned": "always",
                "sample": "\"Innodb Memcached for MySQL\""
              },
              "option_name": {
                "description": "The name of the option.",
                "type": "string",
                "returned": "always",
                "sample": "\"MEMCACHED\""
              },
              "option_settings": {
                "description": "The name of the option.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "allowed_values": {
                    "description": "The allowed values of the option setting.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"1-2048\""
                  },
                  "apply_type": {
                    "description": "The DB engine specific parameter type.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"STATIC\""
                  },
                  "data_type": {
                    "description": "The data type of the option setting.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"INTEGER\""
                  },
                  "default_value": {
                    "description": "The default value of the option setting.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"1024\""
                  },
                  "description": {
                    "description": "The description of the option setting.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"Verbose level for memcached.\""
                  },
                  "is_collection": {
                    "description": "Indicates if the option setting is part of a collection.",
                    "type": "boolean",
                    "returned": "always",
                    "sample": "true"
                  },
                  "is_modifiable": {
                    "description": "A Boolean value that, when true, indicates the option setting can be modified from the default.",
                    "type": "boolean",
                    "returned": "always",
                    "sample": "true"
                  },
                  "name": {
                    "description": "The name of the option that has settings that you can set.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"INNODB_API_ENABLE_MDL\""
                  },
                  "value": {
                    "description": "The current value of the option setting.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"0\""
                  }
                }
              },
              "permanent": {
                "description": "Indicate if this option is permanent.",
                "type": "boolean",
                "returned": "always",
                "sample": "true"
              },
              "persistent": {
                "description": "Indicate if this option is persistent.",
                "type": "boolean",
                "returned": "always",
                "sample": "true"
              },
              "port": {
                "description": "If required, the port configured for this option to use.",
                "type": "integer",
                "returned": "always",
                "sample": "11211"
              },
              "vpc_security_group_memberships": {
                "description": "If the option requires access to a port, then this VPC security group allows access to the port.",
                "type": "list",
                "returned": "always",
                "elements": "elements=dictionary",
                "suboptions": {
                  "status": {
                    "description": "The status of the VPC security group.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"available\""
                  },
                  "vpc_security_group_id": {
                    "description": "The name of the VPC security group.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"sg-0cd636a23ae76e9a4\""
                  }
                }
              }
            }
          },
          "tags": {
            "description": "The tags associated the RDS option group.",
            "type": "dictionary",
            "returned": "always",
            "sample": "{\"Ansible\": \"Test\"}"
          },
          "vpc_id": {
            "description": "If present, this option group can only be applied to instances that are in the VPC indicated by this field.",
            "type": "string",
            "returned": "always",
            "sample": "\"vpc-bf07e9d6\""
          }
        }
      }
    }
  },
  "rds_snapshot_info": {
    "description": "obtain information about one or more RDS snapshots",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/rds_snapshot_info_module.html#ansible-collections-amazon-aws-rds-snapshot-info-module",
    "return_values": {
      "cluster_snapshots": {
        "description": "List of cluster snapshots.",
        "type": "complex",
        "returned": "When cluster parameters are passed.",
        "suboptions": {
          "allocated_storage": {
            "description": "The allocated storage size in gibibytes (GiB).",
            "type": "integer",
            "returned": "always",
            "sample": "1"
          },
          "availability_zones": {
            "description": "The list of Availability Zones (AZs) where instances in the DB cluster snapshot can be restored.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[\"ca-central-1a\", \"ca-central-1b\"]"
          },
          "cluster_create_time": {
            "description": "The time when the DB cluster was created.",
            "type": "string",
            "returned": "always",
            "sample": "\"2018-05-17T00:13:40.223000+00:00\""
          },
          "db_cluster_identifier": {
            "description": "The DB cluster identifier of the DB cluster that this DB cluster snapshot was created from.",
            "type": "string",
            "returned": "always",
            "sample": "\"test-aurora-cluster\""
          },
          "db_cluster_resource_id": {
            "description": "The resource ID of the DB cluster that this DB cluster snapshot was created from.",
            "type": "string",
            "returned": "always",
            "sample": "\"cluster-ABCDEFGHIJKLMNOPQRSTUVWXYZ\""
          },
          "db_cluster_snapshot_arn": {
            "description": "The Amazon Resource Name (ARN) for the DB cluster snapshot.6",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:rds:ca-central-1:123456789012:cluster-snapshot:test-aurora-snapshot\""
          },
          "db_cluster_snapshot_identifier": {
            "description": "The identifier for the DB cluster snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"test-aurora-snapshot\""
          },
          "engine": {
            "description": "The name of the database engine for this DB cluster snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"aurora\""
          },
          "engine_mode": {
            "description": "The engine mode of the database engine for this DB cluster snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"provisioned\""
          },
          "engine_version": {
            "description": "The version of the database engine for this DB cluster snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"5.6.10a\""
          },
          "iam_database_authentication_enabled": {
            "description": "Whether mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts is enabled.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "kms_key_id": {
            "description": "the Amazon Web Services KMS key identifier for the encrypted DB cluster snapshot.",
            "type": "string",
            "returned": "when storage_encrypted is true",
            "sample": "\"arn:aws:kms:us-west-2:123456789012:key/abcd1234-1234-aaaa-0000-1234567890ab\""
          },
          "license_model": {
            "description": "The license model information for this DB cluster snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"aurora\""
          },
          "master_username": {
            "description": "The master username for this DB cluster snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"shertel\""
          },
          "percent_progress": {
            "description": "The percentage of the estimated data that has been transferred.",
            "type": "integer",
            "returned": "always",
            "sample": "0"
          },
          "port": {
            "description": "The port that the DB cluster was listening on at the time of the snapshot.",
            "type": "integer",
            "returned": "always",
            "sample": "0"
          },
          "snapshot_create_time": {
            "description": "The time when the snapshot was taken.",
            "type": "string",
            "returned": "always",
            "sample": "\"2018-05-17T00:23:23.731000+00:00\""
          },
          "snapshot_type": {
            "description": "The type of the DB cluster snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"manual\""
          },
          "status": {
            "description": "The status of this DB cluster snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"creating\""
          },
          "storage_encrypted": {
            "description": "Indicates whether the DB cluster snapshot is encrypted.",
            "type": "boolean",
            "returned": "always",
            "sample": "true"
          },
          "tags": {
            "description": "Tags of the snapshot.",
            "type": "complex",
            "returned": "when snapshot is not shared."
          },
          "vpc_id": {
            "description": "The VPC ID associated with the DB cluster snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"vpc-abcd1234\""
          }
        }
      },
      "snapshots": {
        "description": "List of non-clustered snapshots.",
        "type": "complex",
        "returned": "When cluster parameters are not passed.",
        "suboptions": {
          "allocated_storage": {
            "description": "The allocated storage size in gibibytes (GiB).",
            "type": "integer",
            "returned": "always",
            "sample": "10"
          },
          "availability_zone": {
            "description": "The name of the Availability Zone the DB instance was located in at the time of the DB snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"us-west-2b\""
          },
          "db_instance_identifier": {
            "description": "The DB instance identifier of the DB instance this DB snapshot was created from.",
            "type": "string",
            "returned": "always",
            "sample": "\"hello-world-rds\""
          },
          "db_snapshot_arn": {
            "description": "The Amazon Resource Name (ARN) for the DB snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"arn:aws:rds:us-west-2:123456789012:snapshot:rds:hello-world-rds-us1-2018-05-16-04-03\""
          },
          "db_snapshot_identifier": {
            "description": "The identifier for the DB snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"rds:hello-world-rds-us1-2018-05-16-04-03\""
          },
          "dbi_resource_id": {
            "description": "The identifier for the source DB instance, which can\u2019t be changed and which is unique to an Amazon Web Services Region.",
            "type": "string",
            "returned": "always",
            "sample": "\"db-ABCDEFGHIJKLMNOPQRSTUVWXYZ\""
          },
          "dedicated_log_volume": {
            "description": "Whether the DB instance has a dedicated log volume (DLV) enabled.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "encrypted": {
            "description": "Whether the DB snapshot is encrypted.",
            "type": "boolean",
            "returned": "always",
            "sample": "true"
          },
          "engine": {
            "description": "The name of the database engine.",
            "type": "string",
            "returned": "always",
            "sample": "\"postgres\""
          },
          "engine_version": {
            "description": "The version of the database engine.",
            "type": "string",
            "returned": "always",
            "sample": "\"9.5.10\""
          },
          "iam_database_authentication_enabled": {
            "description": "Whether mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts is enabled.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "instance_create_time": {
            "description": "The time when the DB instance, from which the snapshot was taken, was created.",
            "type": "string",
            "returned": "always",
            "sample": "\"2017-10-10T04:00:07.434000+00:00\""
          },
          "iops": {
            "description": "The Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.",
            "type": "integer",
            "returned": "always",
            "sample": "3000"
          },
          "kms_key_id": {
            "description": "The Amazon Web Services KMS key identifier for the encrypted DB snapshot.",
            "type": "string",
            "returned": "when encrypted is true",
            "sample": "\"arn:aws:kms:us-west-2:123456789012:key/abcd1234-1234-aaaa-0000-1234567890ab\""
          },
          "license_model": {
            "description": "License model information for the restored DB instance.",
            "type": "string",
            "returned": "always",
            "sample": "\"postgresql-license\""
          },
          "master_username": {
            "description": "The master username for the DB snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"dbadmin\""
          },
          "multi_tenant": {
            "description": "Whether the snapshot is of a DB instance using the multi-tenant configuration (TRUE) or the single-tenant configuration (FALSE).",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "option_group_name": {
            "description": "The option group name for the DB snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"default:postgres-9-5\""
          },
          "original_snapshot_create_time": {
            "description": "The time of the CreateDBSnapshot operation. Doesn\u2019t change when the snapshot is copied.",
            "type": "string",
            "returned": "always",
            "sample": "\"2017-10-10T04:00:07.434000+00:00\""
          },
          "percent_progress": {
            "description": "The percentage of the estimated data that has been transferred.",
            "type": "integer",
            "returned": "always",
            "sample": "100"
          },
          "port": {
            "description": "The port that the database engine was listening on at the time of the snapshot.",
            "type": "integer",
            "returned": "always",
            "sample": "0"
          },
          "snapshot_create_time": {
            "description": "When the snapshot was taken.",
            "type": "string",
            "returned": "always",
            "sample": "\"2018-05-16T04:03:33.871000+00:00\""
          },
          "snapshot_target": {
            "description": "Where manual snapshots are stored: Amazon Web Services Outposts or the Amazon Web Services Region.",
            "type": "string",
            "returned": "always",
            "sample": "\"region\""
          },
          "snapshot_type": {
            "description": "The type of the DB snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"automated\""
          },
          "status": {
            "description": "The status of this DB snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"available\""
          },
          "storage_throughput": {
            "description": "The storage throughput for the DB snapshot.",
            "type": "integer",
            "returned": "always",
            "sample": "500"
          },
          "storage_type": {
            "description": "The storage type associated with DB snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"gp2\""
          },
          "tags": {
            "description": "Tags of the snapshot.",
            "type": "complex",
            "returned": "when snapshot is not shared."
          },
          "vpc_id": {
            "description": "The VPC ID associated with the DB snapshot.",
            "type": "string",
            "returned": "always",
            "sample": "\"vpc-abcd1234\""
          }
        }
      }
    }
  },
  "rds_subnet_group": {
    "description": "manage RDS database subnet groups",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/rds_subnet_group_module.html#ansible-collections-amazon-aws-rds-subnet-group-module",
    "return_values": {
      "changed": {
        "description": "True if listing the RDS subnet group succeeds.",
        "type": "boolean",
        "returned": "always",
        "sample": "false"
      },
      "subnet_group": {
        "description": "Dictionary of DB subnet group values,",
        "type": "complex",
        "returned": "state=present",
        "suboptions": {
          "db_subnet_group_arn": {
            "description": "The ARN of the DB subnet group.",
            "type": "string",
            "returned": "state=present",
            "sample": "\"arn:aws:rds:eu-north-1:123456789012:subgrp:ansible-test-13950442\""
          },
          "db_subnet_group_description": {
            "description": "The description of the DB subnet group.",
            "type": "string",
            "returned": "state=present",
            "sample": "\"Simple description.\""
          },
          "db_subnet_group_name": {
            "description": "The name of the DB subnet group.",
            "type": "string",
            "returned": "state=present",
            "sample": "\"ansible-test-mbp-13950442\""
          },
          "description": {
            "description": "The description of the DB subnet group (maintained for backward compatibility).",
            "type": "string",
            "returned": "state=present",
            "sample": "\"Simple description.\""
          },
          "name": {
            "description": "The name of the DB subnet group (maintained for backward compatibility).",
            "type": "string",
            "returned": "state=present",
            "sample": "\"ansible-test-mbp-13950442\""
          },
          "status": {
            "description": "The status of the DB subnet group (maintained for backward compatibility).",
            "type": "string",
            "returned": "state=present",
            "sample": "\"Complete\""
          },
          "subnet_group_status": {
            "description": "The status of the DB subnet group.",
            "type": "string",
            "returned": "state=present",
            "sample": "\"Complete\""
          },
          "subnet_ids": {
            "description": "Contains a list of Subnet IDs.",
            "type": "list",
            "returned": "state=present",
            "elements": "elements=string",
            "sample": "[\"subnet-08c94870f4480797e\"]"
          },
          "subnets": {
            "description": "Contains a list of Subnet elements (@see https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/rds.html#RDS.Client.describe_db_subnet_groups).",
            "type": "list",
            "returned": "state=present",
            "elements": "elements=string",
            "suboptions": {
              "subnet_availability_zone": {
                "description": "Contains Availability Zone information.",
                "type": "dictionary",
                "returned": "state=present",
                "sample": "{\"name\": \"eu-north-1b\"}"
              },
              "subnet_identifier": {
                "description": "The identifier of the subnet.",
                "type": "string",
                "returned": "state=present",
                "sample": "\"subnet-08c94870f4480797e\""
              },
              "subnet_outpost": {
                "description": "This value specifies the Outpost.",
                "type": "dictionary",
                "returned": "state=present",
                "sample": "{}"
              },
              "subnet_status": {
                "description": "The status of the subnet.",
                "type": "string",
                "returned": "state=present",
                "sample": "\"Active\""
              }
            }
          },
          "tags": {
            "description": "The tags associated with the subnet group.",
            "type": "dictionary",
            "returned": "state=present",
            "sample": "{\"tag1\": \"Tag1\", \"tag2\": \"Tag2\"}"
          },
          "vpc_id": {
            "description": "The VPC Id of the DB subnet group.",
            "type": "string",
            "returned": "state=present",
            "sample": "\"vpc-0acb0ba033ff2119c\""
          }
        }
      }
    }
  },
  "route53": {
    "description": "add or delete entries in Amazons Route 53 DNS service",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/route53_module.html#ansible-collections-amazon-aws-route53-module",
    "return_values": {
      "nameservers": {
        "description": "Nameservers associated with the zone.",
        "type": "list",
        "returned": "when state is \u2018get\u2019",
        "elements": "elements=string",
        "sample": "[\"ns-1036.awsdns-00.org.\", \"ns-516.awsdns-00.net.\", \"ns-1504.awsdns-00.co.uk.\", \"ns-1.awsdns-00.com.\"]"
      },
      "resource_record_sets": {
        "description": "Info specific to the resource record.",
        "type": "complex",
        "returned": "when state is \u2018get\u2019",
        "suboptions": {
          "alias": {
            "description": "Whether this is an alias.",
            "type": "boolean",
            "returned": "always",
            "sample": "false"
          },
          "failover": {
            "description": "Whether this is the primary or secondary resource record set.",
            "type": "string",
            "returned": "always",
            "sample": "\"PRIMARY\""
          },
          "geo_location": {
            "description": "Geograpic location based on which Route53 resonds to DNS queries.",
            "type": "dictionary",
            "returned": "when configured",
            "sample": "{\"continent_code\": \"NA\", \"country_code\": \"US\", \"subdivision_code\": \"CA\"}"
          },
          "health_check": {
            "description": "Health check associated with this record.",
            "type": "string",
            "returned": "always"
          },
          "identifier": {
            "description": "An identifier that differentiates among multiple resource record sets that have the same combination of DNS name and type.",
            "type": "string",
            "returned": "always"
          },
          "name": {
            "description": "Domain name for the record set.",
            "type": "string",
            "returned": "always",
            "sample": "\"new.foo.com\""
          },
          "record": {
            "description": "Domain name for the record set.",
            "type": "string",
            "returned": "always",
            "sample": "\"new.foo.com\""
          },
          "region": {
            "description": "Which region this should be associated with for latency-based routing.",
            "type": "string",
            "returned": "always",
            "sample": "\"us-west-2\""
          },
          "resource_records": {
            "description": "Information about the resource records to act upon.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[{\"value\": \"1.1.1.1\"}]"
          },
          "ttl": {
            "description": "Resource record cache TTL.",
            "type": "string",
            "returned": "always",
            "sample": "\"3600\""
          },
          "type": {
            "description": "Resource record set type.",
            "type": "string",
            "returned": "always",
            "sample": "\"A\""
          },
          "value": {
            "description": "Record value.",
            "type": "string",
            "returned": "always",
            "sample": "\"52.43.18.27\""
          },
          "values": {
            "description": "Record Values.",
            "type": "list",
            "returned": "always",
            "elements": "elements=string",
            "sample": "[\"52.43.18.27\"]"
          },
          "weight": {
            "description": "Weight of the record.",
            "type": "string",
            "returned": "always",
            "sample": "\"3\""
          },
          "zone": {
            "description": "Zone this record set belongs to.",
            "type": "string",
            "returned": "always",
            "sample": "\"foo.bar.com\""
          }
        }
      },
      "wait_id": {
        "description": "The wait ID for the applied change. Can be used to wait for the change to propagate later on when wait=false.",
        "type": "string",
        "returned": "when changed"
      }
    }
  },
  "route53_health_check": {
    "description": "Manage health checks in Amazons Route 53 DNS service",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/route53_health_check_module.html#ansible-collections-amazon-aws-route53-health-check-module",
    "return_values": {
      "health_check": {
        "description": "Information about the health check.",
        "type": "dictionary",
        "returned": "success",
        "suboptions": {
          "action": {
            "description": "The action performed by the module.",
            "type": "string",
            "returned": "When a change is or would be made.",
            "sample": "\"updated\""
          },
          "health_check_config": {
            "description": "Detailed information about the health check. May contain additional values from Route 53 health check features not yet supported by this module.",
            "type": "dictionary",
            "returned": "When the health check exists.",
            "suboptions": {
              "disabled": {
                "description": "Whether the health check has been disabled or not.",
                "type": "boolean",
                "returned": "When the health check exists.",
                "sample": "false"
              },
              "enable_sni": {
                "description": "This allows the endpoint to respond to HTTPS health check requests with the applicable SSL/TLS certificate.",
                "type": "boolean",
                "returned": "When the health check exists.",
                "sample": "false"
              },
              "failure_threshold": {
                "description": "The number of consecutive health checks that an endpoint must pass or fail for Amazon Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa.",
                "type": "integer",
                "returned": "When the health check exists.",
                "sample": "3"
              },
              "fully_qualified_domain_name": {
                "description": "The FQDN configured for the health check to test.",
                "type": "string",
                "returned": "When the health check exists and an FQDN is configured.",
                "sample": "\"updated\""
              },
              "inverted": {
                "description": "Specify whether you want Amazon Route 53 to invert the status of a health check.",
                "type": "boolean",
                "returned": "When the health check exists.",
                "sample": "false"
              },
              "ip_address": {
                "description": "The IPv4 or IPv6 IP address of the endpoint to be queried.",
                "type": "string",
                "returned": "When the health check exists and a specific IP address is configured.",
                "sample": "\"\""
              },
              "measure_latency": {
                "description": "To enable/disable latency graphs to monitor the latency between health checkers in multiple Amazon Web Services regions and your endpoint.",
                "type": "boolean",
                "returned": "When the health check exists.",
                "sample": "false"
              },
              "port": {
                "description": "The port on the endpoint that the health check will query.",
                "type": "string",
                "returned": "When the health check exists.",
                "sample": "\"updated\""
              },
              "request_interval": {
                "description": "The number of seconds between health check queries.",
                "type": "integer",
                "returned": "When the health check exists.",
                "sample": "30"
              },
              "resource_path": {
                "description": "The URI path to query when performing an HTTP/HTTPS based health check.",
                "type": "string",
                "returned": "When the health check exists and a resource path has been configured.",
                "sample": "\"/healthz\""
              },
              "search_string": {
                "description": "A string that must be present in the response for a health check to be considered successful.",
                "type": "string",
                "returned": "When the health check exists and a search string has been configured.",
                "sample": "\"ALIVE\""
              },
              "type": {
                "description": "The type of the health check.",
                "type": "string",
                "returned": "When the health check exists.",
                "sample": "\"HTTPS_STR_MATCH\""
              }
            }
          },
          "health_check_version": {
            "description": "The version number of the health check.",
            "type": "integer",
            "returned": "When the health check exists.",
            "sample": "14"
          },
          "id": {
            "description": "The Unique ID assigned by AWS to the health check.",
            "type": "string",
            "returned": "When the health check exists.",
            "sample": "\"50ec8a13-9623-4c66-9834-dd8c5aedc9ba\""
          },
          "tags": {
            "description": "A dictionary representing the tags on the health check.",
            "type": "dictionary",
            "returned": "When the health check exists.",
            "sample": "{\"my_key\": \"my_value\"}"
          }
        }
      }
    }
  },
  "route53_info": {
    "description": "Retrieves Route 53 details using AWS methods",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/route53_info_module.html#ansible-collections-amazon-aws-route53-info-module",
    "return_values": {
      "checker_ip_ranges": {
        "description": "A list of IP ranges in CIDR format for Amazon Route 53 health checkers.",
        "type": "list",
        "returned": "when query=checker_ip_range",
        "elements": "elements=string"
      },
      "CheckerIpRanges": {
        "description": "A deprecated CamelCased list of IP ranges in CIDR format for Amazon Route 53 health checkers.\\ This list contains same elements/parameters as it\u2019s snake_cased version mentioned abobe. \\ This field is deprecated and will be removed in 6.0.0 version release.",
        "type": "list",
        "returned": "when query=checker_ip_range",
        "elements": "elements=string"
      },
      "delegation_sets": {
        "description": "A list of dicts that contains information about the reusable delegation set.",
        "type": "list",
        "returned": "when query=reusable_delegation_set",
        "elements": "elements=dictionary"
      },
      "DelegationSets": {
        "description": "A deprecated CamelCased list of dicts that contains information about the reusable delegation set. \\ This list contains same elements/parameters as it\u2019s snake_cased version mentioned above. \\ This field is deprecated and will be removed in 6.0.0 version release.",
        "type": "list",
        "returned": "when query=reusable_delegation_set",
        "elements": "elements=dictionary"
      },
      "health_check": {
        "description": "A dict of Route53 health check details returned by get_health_check in boto3.",
        "type": "dictionary",
        "returned": "when query=health_check and health_check_method=details",
        "suboptions": {
          "caller_reference": {
            "description": "A unique string that you specified when you created the health check.",
            "type": "string",
            "returned": "success",
            "sample": "\"01d0db12-x0x9-12a3-1234-0z000z00zz0z\""
          },
          "health_check_config": {
            "description": "A dict that contains detailed information about one health check.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "disabled": {
                "description": "Whether Route53 should stop performing health checks on a endpoint.",
                "type": "boolean",
                "returned": "success",
                "sample": "false"
              },
              "enable_sni": {
                "description": "Whether Route53 should send value of FullyQualifiedDomainName to endpoint in client_hello message during TLS negotiation.",
                "type": "boolean",
                "returned": "success",
                "sample": "true"
              },
              "failure_threshold": {
                "description": "The number of consecutive health checks that an endpoint must pass/fail for Route53 to change current status of endpoint.",
                "type": "integer",
                "returned": "success",
                "sample": "3"
              },
              "fully_qualified_domain_name": {
                "description": "The fully qualified DNS name of the endpoint on which Route53 performs health checks.",
                "type": "string",
                "returned": "success",
                "sample": "\"hello\""
              },
              "inverted": {
                "description": "Whether Route53 should invert the status of a health check.",
                "type": "boolean",
                "returned": "success",
                "sample": "false"
              },
              "ip_address": {
                "description": "The IPv4/IPv6 IP address of the endpoint that Route53 should perform health checks on.",
                "type": "string",
                "returned": "success",
                "sample": "\"192.0.2.44\""
              },
              "measure_latency": {
                "description": "Whether Route53 should measure latency between health checkers in multiple AWS regions and the endpoint.",
                "type": "boolean",
                "returned": "success",
                "sample": "false"
              },
              "port": {
                "description": "The port of the endpoint that Route53 should perform health checks on.",
                "type": "integer",
                "returned": "success",
                "sample": "80"
              },
              "request_interval": {
                "description": "The number of seconds between the time that Route53 gets a response from endpoint and the next health check request.",
                "type": "integer",
                "returned": "success",
                "sample": "30"
              },
              "resource_path": {
                "description": "The path that Route53 requests when performing health checks.",
                "type": "string",
                "returned": "success",
                "sample": "\"/welcome.html\""
              },
              "search_string": {
                "description": "The string that Route53 uses to search for in the response body from specified resource.",
                "type": "string",
                "returned": "success",
                "sample": "\"test-string-to-match\""
              },
              "type": {
                "description": "The type of the health check.",
                "type": "string",
                "returned": "success",
                "sample": "\"HTTPS\""
              }
            }
          },
          "health_check_version": {
            "description": "The version of the health check.",
            "type": "string",
            "returned": "success",
            "sample": "\"1\""
          },
          "id": {
            "description": "The identifier that Amazon Route 53 assigned to the health check at the time of creation.",
            "type": "string",
            "returned": "success",
            "sample": "\"12345cdc-2cc4-1234-bed2-123456abc1a2\""
          }
        }
      },
      "health_check_observations": {
        "description": "A dict of Route53 health check details returned by get_health_check_status and get_health_check_last_failure_reason in boto3.",
        "type": "list",
        "returned": "when query=health_check and health_check_method=status or health_check_method=failure_reason",
        "elements": "elements=dictionary",
        "suboptions": {
          "ip_address": {
            "description": "The IP address of the Amazon Route 53 health checker that provided the failure reason in StatusReport.",
            "type": "string",
            "returned": "success",
            "sample": "\"12.345.67.89\""
          },
          "region": {
            "description": "The region of the Amazon Route 53 health checker that provided the status in StatusReport.",
            "type": "string",
            "returned": "success",
            "sample": "\"us-west-1\""
          },
          "status_report": {
            "description": "A complex type that contains the last failure reason and the time of the failed health check.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "checked_time": {
                "description": "The date and time that the health checker performed the health check in ISO 8601 format and Coordinated Universal Time (UTC).",
                "type": "string",
                "returned": "success",
                "sample": "\"2023-03-08T23:10:08.452000+00:00\""
              },
              "status": {
                "description": "A description of the status of the health check endpoint as reported by one of the Amazon Route 53 health checkers.",
                "type": "string",
                "returned": "success",
                "sample": "\"Failure: Resolved IP: 12.345.67.89. The connection was closed by the endpoint.\""
              }
            }
          }
        }
      },
      "health_checks": {
        "description": "A list of Route 53 health checks returned by list_health_checks in boto3.",
        "type": "list",
        "returned": "when query=health_check",
        "elements": "elements=dictionary",
        "suboptions": {
          "caller_reference": {
            "description": "A unique string that you specified when you created the health check.",
            "type": "string",
            "returned": "success",
            "sample": "\"01d0db12-x0x9-12a3-1234-0z000z00zz0z\""
          },
          "health_check_config": {
            "description": "A dict that contains detailed information about one health check.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "disabled": {
                "description": "Whether Route53 should stop performing health checks on a endpoint.",
                "type": "boolean",
                "returned": "success",
                "sample": "false"
              },
              "enable_sni": {
                "description": "Whether Route53 should send value of FullyQualifiedDomainName to endpoint in client_hello message during TLS negotiation.",
                "type": "boolean",
                "returned": "success",
                "sample": "true"
              },
              "failure_threshold": {
                "description": "The number of consecutive health checks that an endpoint must pass/fail for Route 53 to change current status of endpoint.",
                "type": "integer",
                "returned": "success",
                "sample": "3"
              },
              "fully_qualified_domain_name": {
                "description": "The fully qualified DNS name of the endpoint on which Route53 performs health checks.",
                "type": "string",
                "returned": "success",
                "sample": "\"hello\""
              },
              "inverted": {
                "description": "Whether Route53 should invert the status of a health check.",
                "type": "boolean",
                "returned": "success",
                "sample": "false"
              },
              "ip_address": {
                "description": "The IPv4/IPv6 IP address of the endpoint that Route53 should perform health checks on.",
                "type": "string",
                "returned": "success",
                "sample": "\"192.0.2.44\""
              },
              "measure_latency": {
                "description": "Whether Route53 should measure latency between health checkers in multiple AWS regions and the endpoint.",
                "type": "boolean",
                "returned": "success",
                "sample": "false"
              },
              "port": {
                "description": "The port of the endpoint that Route53 should perform health checks on.",
                "type": "integer",
                "returned": "success",
                "sample": "80"
              },
              "request_interval": {
                "description": "The number of seconds between the time that Route53 gets a response from endpoint and the next health check request.",
                "type": "integer",
                "returned": "success",
                "sample": "30"
              },
              "resource_path": {
                "description": "The path that Route53 requests when performing health checks.",
                "type": "string",
                "returned": "success",
                "sample": "\"/welcome.html\""
              },
              "search_string": {
                "description": "The string that Route 53 uses to search for in the response body from specified resource.",
                "type": "string",
                "returned": "success",
                "sample": "\"test-string-to-match\""
              },
              "type": {
                "description": "The type of the health check.",
                "type": "string",
                "returned": "success",
                "sample": "\"HTTPS\""
              }
            }
          },
          "health_check_version": {
            "description": "The version of the health check.",
            "type": "string",
            "returned": "success",
            "sample": "\"1\""
          },
          "id": {
            "description": "The identifier that Amazon Route53 assigned to the health check at the time of creation.",
            "type": "string",
            "returned": "success",
            "sample": "\"12345cdc-2cc4-1234-bed2-123456abc1a2\""
          }
        }
      },
      "HealthCheck": {
        "description": "A deprecated CamelCased dict of Route53 health check details returned by get_health_check in boto3. \\ This dict contains same elements/parameters as it\u2019s snake_cased version mentioned above. \\ This field is deprecated and will be removed in 6.0.0 version release.",
        "type": "dictionary",
        "returned": "when query=health_check and health_check_method=details"
      },
      "HealthChecks": {
        "description": "A deprecated CamelCased list of Route53 health checks returned by list_health_checks in boto3. \\ This list contains same elements/parameters as it\u2019s snake_cased version mentioned above. \\ This field is deprecated and will be removed in 6.0.0 version release.",
        "type": "list",
        "returned": "when query=health_check",
        "elements": "elements=dictionary"
      },
      "hosted_zones": {
        "description": "A list of hosted zones returned by list_hosted_zones in boto3.",
        "type": "list",
        "returned": "when query=hosted_zone",
        "elements": "elements=dictionary",
        "suboptions": {
          "caller_reference": {
            "description": "The value specified for CallerReference at the time of hosted zone creation.",
            "type": "string",
            "returned": "success",
            "sample": "\"01d0db12-x0x9-12a3-1234-0z000z00zz0z\""
          },
          "config": {
            "description": "A dict that contains Comment and PrivateZone elements.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "comment": {
                "description": "Any comments that included about in the hosted zone.",
                "type": "string",
                "returned": "success",
                "sample": "\"HostedZone created by Route53 Registrar\""
              },
              "private_zone": {
                "description": "A value that indicates whether this is a private hosted zone or not.",
                "type": "boolean",
                "returned": "success",
                "sample": "false"
              }
            }
          },
          "id": {
            "description": "The ID of the hosted zone assigned by Amazon Route53 to the hosted zone at the creation time.",
            "type": "string",
            "returned": "success",
            "sample": "\"/hostedzone/Z01234567AB1234567890\""
          },
          "name": {
            "description": "The name of the domain.",
            "type": "string",
            "returned": "success",
            "sample": "\"example.io\""
          },
          "resource_record_set_count": {
            "description": "The number of resource record sets in the hosted zone.",
            "type": "integer",
            "returned": "success",
            "sample": "3"
          }
        }
      },
      "HostedZones": {
        "description": "A deprecated CamelCased list of hosted zones returned by list_hosted_zones in boto3. \\ This list contains same elements/parameters as it\u2019s snake_cased version mentioned above. \\ This field is deprecated and will be removed in 6.0.0 version release.",
        "type": "list",
        "returned": "when query=hosted_zone",
        "elements": "elements=dictionary"
      },
      "resource_record_sets": {
        "description": "A list of resource record sets returned by list_resource_record_sets in boto3.",
        "type": "list",
        "returned": "when query=record_sets",
        "elements": "elements=dictionary",
        "suboptions": {
          "geo_location": {
            "description": "The specified geographic location for which the Route53 responds to based on location.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "continent_code": {
                "description": "The two-letter code for the continent.",
                "type": "string",
                "returned": "success",
                "sample": "\"NA\""
              },
              "country_code": {
                "description": "The two-letter code for a country.",
                "type": "string",
                "returned": "success",
                "sample": "\"US\""
              },
              "subdivision_code": {
                "description": "The two-letter code for a state of the United States",
                "type": "string",
                "returned": "success",
                "sample": "\"NY\""
              }
            }
          },
          "name": {
            "description": "The name of a record in the specified hosted zone.",
            "type": "string",
            "returned": "success",
            "sample": "\"www.example.com\""
          },
          "resource_records": {
            "description": "Information about the resource records.",
            "type": "list",
            "returned": "success",
            "elements": "elements=dictionary",
            "suboptions": {
              "value": {
                "description": "The current or new DNS record value.",
                "type": "string",
                "returned": "success",
                "sample": "\"ns-12.awsdns-34.com.\""
              }
            }
          },
          "set_identifier": {
            "description": "An identifier that differentiates among multiple resource record sets that have the same combination of name and type.",
            "type": "string",
            "returned": "success",
            "sample": "\"abcd\""
          },
          "ttl": {
            "description": "The resource record cache time to live (TTL), in seconds.",
            "type": "integer",
            "returned": "success",
            "sample": "60"
          },
          "type": {
            "description": "The DNS record type.",
            "type": "string",
            "returned": "success",
            "sample": "\"A\""
          }
        }
      },
      "ResourceRecordSets": {
        "description": "A deprecated CamelCased list of resource record sets returned by list_resource_record_sets in boto3. \\ This list contains same elements/parameters as it\u2019s snake_cased version mentioned above. \\ This field is deprecated and will be removed in 6.0.0 version release.",
        "type": "list",
        "returned": "when query=record_sets",
        "elements": "elements=dictionary"
      }
    }
  },
  "route53_key_signing_key": {
    "description": "Manages a key-signing key (KSK)",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/route53_key_signing_key_module.html#ansible-collections-amazon-aws-route53-key-signing-key-module",
    "return_values": {
      "change_info": {
        "description": "A dictionary that describes change information about changes made to the hosted zone.",
        "type": "dictionary",
        "returned": "when a Key Signing Key is created or it exists and is updated/deleted",
        "sample": "{\"id\": \"/change/C090307813XORZJ5J3U4\", \"status\": \"PENDING\", \"submitted_at\": \"2024-12-04T15:15:36.743000+00:00\"}",
        "suboptions": {
          "comment": {
            "description": "A comment you can provide.",
            "type": "string",
            "returned": "success"
          },
          "id": {
            "description": "Change ID.",
            "type": "string",
            "returned": "success"
          },
          "status": {
            "description": "The current state of the request.",
            "type": "string",
            "returned": "success"
          },
          "submitted_at": {
            "description": "The date and time that the change request was submitted in ISO 8601 format and Coordinated Universal Time (UTC).",
            "type": "string",
            "returned": "success"
          }
        }
      },
      "key_signing_key": {
        "description": "The key-signing key (KSK) that the request creates.",
        "type": "dictionary",
        "returned": "always",
        "sample": "{\"created_date\": \"2024-12-04T15:15:36.715000+00:00\", \"digest_algorithm_mnemonic\": \"SHA-256\", \"digest_algorithm_type\": 2, \"digest_value\": \"xxx\", \"dnskey_record\": \"xxx\", \"ds_record\": \"xxx\", \"flag\": 257, \"key_tag\": 18948, \"kms_arn\": \"arn:aws:kms:us-east-1:xxx:key/xxx\", \"last_modified_date\": \"2024-12-04T15:15:36.715000+00:00\", \"name\": \"ansible-test-44230979--ksk\", \"public_key\": \"xxxx\", \"signing_algorithm_mnemonic\": \"ECDSAP256SHA256\", \"signing_algorithm_type\": 13, \"status\": \"INACTIVE\"}",
        "suboptions": {
          "created_date": {
            "description": "The date when the key-signing key (KSK) was created.",
            "type": "string",
            "returned": "success"
          },
          "digest_algorithm_mnemonic": {
            "description": "A string used to represent the delegation signer digest algorithm.",
            "type": "string",
            "returned": "success"
          },
          "digest_algorithm_type": {
            "description": "An integer used to represent the delegation signer digest algorithm.",
            "type": "integer",
            "returned": "success"
          },
          "digest_value": {
            "description": "A cryptographic digest of a DNSKEY resource record (RR).",
            "type": "string",
            "returned": "success"
          },
          "dnskey_record": {
            "description": "A string that represents a DNSKEY record.",
            "type": "string",
            "returned": "success"
          },
          "ds_record": {
            "description": "A string that represents a delegation signer (DS) record.",
            "type": "string",
            "returned": "success"
          },
          "flag": {
            "description": "An integer that specifies how the key is used.",
            "type": "integer",
            "returned": "success"
          },
          "key_tag": {
            "description": "An integer used to identify the DNSSEC record for the domain name.",
            "type": "integer",
            "returned": "success"
          },
          "kms_arn": {
            "description": "The Amazon resource name (ARN) used to identify the customer managed key in Key Management Service (KMS).",
            "type": "string",
            "returned": "success"
          },
          "last_modified_date": {
            "description": "The last time that the key-signing key (KSK) was changed.",
            "type": "string",
            "returned": "success"
          },
          "name": {
            "description": "A string used to identify a key-signing key (KSK).",
            "type": "string",
            "returned": "success"
          },
          "public_key": {
            "description": "The public key, represented as a Base64 encoding.",
            "type": "string",
            "returned": "success"
          },
          "signing_algorithm_mnemonic": {
            "description": "A string used to represent the signing algorithm.",
            "type": "string",
            "returned": "success"
          },
          "signing_algorithm_type": {
            "description": "An integer used to represent the signing algorithm.",
            "type": "integer",
            "returned": "success"
          },
          "status": {
            "description": "A string that represents the current key-signing key (KSK) status.",
            "type": "string",
            "returned": "success"
          },
          "status_message": {
            "description": "The status message provided for ACTION_NEEDED or INTERNAL_FAILURE statuses.",
            "type": "string",
            "returned": "success"
          }
        }
      },
      "location": {
        "description": "The unique URL representing the new key-signing key (KSK).",
        "type": "string",
        "returned": "when only a new Key Signing Key is created",
        "sample": "\"https://route53.amazonaws.com/2013-04-01/keysigningkey/xxx/ansible-test-ksk\""
      }
    }
  },
  "route53_zone": {
    "description": "add or delete Route 53 zones",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/route53_zone_module.html#ansible-collections-amazon-aws-route53-zone-module",
    "return_values": {
      "comment": {
        "description": "Optional hosted zone comment.",
        "type": "string",
        "returned": "when hosted zone exists",
        "sample": "\"Private zone\""
      },
      "delegation_set_id": {
        "description": "Id of the associated reusable delegation set.",
        "type": "string",
        "returned": "for public hosted zones, if they have been associated with a reusable delegation set",
        "sample": "\"A1BCDEF2GHIJKL\""
      },
      "dnssec": {
        "description": "Information about DNSSEC for a specific hosted zone.",
        "type": "dictionary",
        "returned": "when state=present and the hosted zone is public",
        "suboptions": {
          "key_signing_key": {
            "description": "The key-signing key (KSK) that the request creates.",
            "type": "list",
            "returned": "when state=present",
            "elements": "elements=dictionary",
            "sample": "[{\"created_date\": \"2024-12-04T15:15:36.715000+00:00\", \"digest_algorithm_mnemonic\": \"SHA-256\", \"digest_algorithm_type\": 2, \"digest_value\": \"xxx\", \"dnskey_record\": \"xxx\", \"ds_record\": \"xxx\", \"flag\": 257, \"key_tag\": 18948, \"kms_arn\": \"arn:aws:kms:us-east-1:xxx:key/xxx\", \"last_modified_date\": \"2024-12-04T15:15:36.715000+00:00\", \"name\": \"ansible-test-44230979--ksk\", \"public_key\": \"xxxx\", \"signing_algorithm_mnemonic\": \"ECDSAP256SHA256\", \"signing_algorithm_type\": 13, \"status\": \"INACTIVE\"}]",
            "suboptions": {
              "created_date": {
                "description": "The date when the key-signing key (KSK) was created.",
                "type": "string",
                "returned": "success"
              },
              "digest_algorithm_mnemonic": {
                "description": "A string used to represent the delegation signer digest algorithm.",
                "type": "string",
                "returned": "success"
              },
              "digest_algorithm_type": {
                "description": "An integer used to represent the delegation signer digest algorithm.",
                "type": "integer",
                "returned": "success"
              },
              "digest_value": {
                "description": "A cryptographic digest of a DNSKEY resource record (RR).",
                "type": "string",
                "returned": "success"
              },
              "dnskey_record": {
                "description": "A string that represents a DNSKEY record.",
                "type": "string",
                "returned": "success"
              },
              "ds_record": {
                "description": "A string that represents a delegation signer (DS) record.",
                "type": "string",
                "returned": "success"
              },
              "flag": {
                "description": "An integer that specifies how the key is used.",
                "type": "integer",
                "returned": "success"
              },
              "key_tag": {
                "description": "An integer used to identify the DNSSEC record for the domain name.",
                "type": "integer",
                "returned": "success"
              },
              "kms_arn": {
                "description": "The Amazon resource name (ARN) used to identify the customer managed key in Key Management Service (KMS).",
                "type": "string",
                "returned": "success"
              },
              "last_modified_date": {
                "description": "The last time that the key-signing key (KSK) was changed.",
                "type": "string",
                "returned": "success"
              },
              "name": {
                "description": "A string used to identify a key-signing key (KSK).",
                "type": "string",
                "returned": "success"
              },
              "public_key": {
                "description": "The public key, represented as a Base64 encoding.",
                "type": "string",
                "returned": "success"
              },
              "signing_algorithm_mnemonic": {
                "description": "A string used to represent the signing algorithm.",
                "type": "string",
                "returned": "success"
              },
              "signing_algorithm_type": {
                "description": "An integer used to represent the signing algorithm.",
                "type": "integer",
                "returned": "success"
              },
              "status": {
                "description": "A string that represents the current key-signing key (KSK) status.",
                "type": "string",
                "returned": "success"
              },
              "status_message": {
                "description": "The status message provided for ACTION_NEEDED or INTERNAL_FAILURE statuses.",
                "type": "string",
                "returned": "success"
              }
            }
          },
          "status": {
            "description": "A dictionary representing the status of DNSSEC.",
            "type": "dictionary",
            "returned": "success",
            "sample": "{\"serve_signature\": \"SIGNING\"}",
            "suboptions": {
              "serve_signature": {
                "description": "A string that represents the current hosted zone signing status.",
                "type": "string",
                "returned": "success"
              }
            }
          }
        }
      },
      "name": {
        "description": "Hosted zone name.",
        "type": "string",
        "returned": "when hosted zone exists",
        "sample": "\"private.local.\""
      },
      "private_zone": {
        "description": "Whether hosted zone is private or public.",
        "type": "boolean",
        "returned": "when hosted zone exists",
        "sample": "true"
      },
      "tags": {
        "description": "Tags associated with the zone.",
        "type": "dictionary",
        "returned": "when tags are defined"
      },
      "vpc_id": {
        "description": "Id of the first vpc attached to private hosted zone (use vpcs for associating multiple).",
        "type": "string",
        "returned": "for private hosted zone",
        "sample": "\"vpc-1d36c84f\""
      },
      "vpc_region": {
        "description": "Region of the first vpc attached to private hosted zone (use vpcs for assocaiting multiple).",
        "type": "string",
        "returned": "for private hosted zone",
        "sample": "\"eu-west-1\""
      },
      "vpcs": {
        "description": "The list of VPCs attached to the private hosted zone.",
        "type": "list",
        "returned": "for private hosted zone",
        "elements": "elements=dictionary",
        "sample": "\"[{'id': 'vpc-123456', 'region': 'us-west-2'}]\"",
        "suboptions": {
          "id": {
            "description": "ID of the VPC.",
            "type": "string",
            "returned": "for private hosted zone",
            "sample": "\"vpc-123456\""
          },
          "region": {
            "description": "Region of the VPC.",
            "type": "string",
            "returned": "for private hosted zone",
            "sample": "\"eu-west-2\""
          }
        }
      },
      "zone_id": {
        "description": "Hosted zone id.",
        "type": "string",
        "returned": "when hosted zone exists",
        "sample": "\"Z6JQG9820BEFMW\""
      }
    }
  },
  "s3_bucket": {
    "description": "Manage S3 buckets in AWS, DigitalOcean, Ceph, Walrus, FakeS3 and StorageGRID",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/s3_bucket_module.html#ansible-collections-amazon-aws-s3-bucket-module",
    "return_values": {
      "accelerate_enabled": {
        "description": "S3 bucket acceleration status.",
        "type": "boolean",
        "returned": "state=present",
        "sample": "true"
      },
      "acl": {
        "description": "S3 bucket\u2019s canned ACL.",
        "type": "dictionary",
        "returned": "when state=present.",
        "sample": "\"public-read\""
      },
      "bucket_inventory": {
        "description": "S3 bucket inventory configuration.",
        "type": "list",
        "returned": "when state=present",
        "elements": "elements=string",
        "sample": "[{\"Destination\": {\"S3BucketDestination\": {\"Bucket\": \"arn:aws:s3:::9c2a337ba5fd64de777f499441f83093-inventory-target\", \"Format\": \"CSV\"}}, \"Id\": \"9c2a337ba5fd64de777f499441f83093-inventory-target\", \"IncludedObjectVersions\": \"All\", \"IsEnabled\": true, \"OptionalFields\": [], \"Schedule\": {\"Frequency\": \"Daily\"}}]"
      },
      "encryption": {
        "description": "Server-side encryption of the objects in the S3 bucket.",
        "type": "dictionary",
        "returned": "when state=present",
        "sample": "{\"SSEAlgorithm\": \"AES256\"}"
      },
      "name": {
        "description": "Bucket name.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"a-testing-bucket-name\""
      },
      "object_lock_default_retention": {
        "description": "S3 bucket\u2019s object lock retention policy.",
        "type": "dictionary",
        "returned": "when state=present",
        "sample": "{\"Days\": 1, \"Mode\": \"GOVERNANCE\", \"Years\": 0}"
      },
      "object_lock_enabled": {
        "description": "Whether S3 Object Lock is enabled.",
        "type": "boolean",
        "returned": "when state=present",
        "sample": "false"
      },
      "object_ownership": {
        "description": "S3 bucket\u2019s ownership controls.",
        "type": "string",
        "returned": "when state=present",
        "sample": "\"BucketOwnerPreferred\""
      },
      "policy": {
        "description": "S3 bucket\u2019s policy.",
        "type": "dictionary",
        "returned": "when state=present",
        "sample": "{\"Statement\": [{\"Action\": \"s3:GetObject\", \"Effect\": \"Allow\", \"Principal\": \"*\", \"Resource\": \"arn:aws:s3:::2d3ce10a8210d36d6b4d23b822892074complex/*\", \"Sid\": \"AddPerm\"}], \"Version\": \"2012-10-17\"}"
      },
      "public_access_block": {
        "description": "Bucket public access block configuration.",
        "type": "dictionary",
        "returned": "when state=present",
        "sample": "{\"PublicAccessBlockConfiguration\": {\"BlockPublicAcls\": true, \"BlockPublicPolicy\": true, \"IgnorePublicAcls\": true, \"RestrictPublicBuckets\": true}}",
        "suboptions": {
          "PublicAccessBlockConfiguration": {
            "description": "The PublicAccessBlock configuration currently in effect for this Amazon S3 bucket.",
            "type": "dictionary",
            "returned": "success",
            "suboptions": {
              "BlockPublicAcls": {
                "description": "Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket.",
                "type": "boolean",
                "returned": "success"
              },
              "BlockPublicPolicy": {
                "description": "Specifies whether Amazon S3 should block public bucket policies for this bucket.",
                "type": "boolean",
                "returned": "success"
              },
              "IgnorePublicAcls": {
                "description": "Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket.",
                "type": "boolean",
                "returned": "success"
              },
              "RestrictPublicBuckets": {
                "description": "Specifies whether Amazon S3 should restrict public bucket policies for this bucket.",
                "type": "boolean",
                "returned": "success"
              }
            }
          }
        }
      },
      "requester_pays": {
        "description": "Indicates that the requester was successfully charged for the request.",
        "type": "boolean",
        "returned": "when state=present",
        "sample": "true"
      },
      "tags": {
        "description": "S3 bucket\u2019s tags.",
        "type": "dictionary",
        "returned": "when state=present",
        "sample": "{\"Tag1\": \"tag1\", \"Tag2\": \"tag2\"}"
      },
      "versioning": {
        "description": "S3 bucket\u2019s versioning configuration.",
        "type": "dictionary",
        "returned": "when state=present",
        "sample": "{\"MfaDelete\": \"Disabled\", \"Versioning\": \"Enabled\"}",
        "suboptions": {
          "MfaDelete": {
            "description": "Specifies whether MFA delete is enabled in the bucket versioning configuration.",
            "type": "string",
            "returned": "when state=presnet and MfaDelete configured on bucket."
          },
          "Versioning": {
            "description": "The versioning state of the bucket.",
            "type": "string",
            "returned": "always"
          }
        }
      }
    }
  },
  "s3_bucket_info": {
    "description": "Lists S3 buckets in AWS",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/s3_bucket_info_module.html#ansible-collections-amazon-aws-s3-bucket-info-module",
    "return_values": {
      "buckets": {
        "description": "A list of S3 buckets.",
        "type": "complex",
        "returned": "always",
        "suboptions": {
          "bucket_accelerate_configuration": {
            "description": "The accelerate configuration of the bucket.",
            "type": "dictionary",
            "returned": "when bucket_facts=true and buckets.bucket_accelerate_configuration=true.",
            "sample": "{\"RequestCharged\": \"requester\", \"Status\": \"Enabled\"}"
          },
          "bucket_acl": {
            "description": "Bucket ACL configuration.",
            "type": "complex",
            "returned": "when bucket_facts=true and buckets.bucket_acl=true.",
            "suboptions": {
              "Grants": {
                "description": "List of ACL grants.",
                "type": "list",
                "returned": "success",
                "elements": "elements=dictionary",
                "sample": "[{\"Grantee\": {\"DisplayName\": \"abc-aws-root+721234567890\", \"ID\": \"1234567890cbc0f1234567890f1234567890c123456789012123456789091234\", \"Type\": \"CanonicalUser\"}, \"Permission\": \"FULL_CONTROL\"}]",
                "suboptions": {
                  "Grantee": {
                    "description": "The person being granted permissions.",
                    "type": "dictionary",
                    "returned": "success",
                    "suboptions": {
                      "DisplayName": {
                        "description": "Screen name of the grantee.",
                        "type": "string",
                        "returned": "success"
                      },
                      "ID": {
                        "description": "The canonical user ID of the grantee.",
                        "type": "string",
                        "returned": "success"
                      },
                      "Type": {
                        "description": "Type of grantee.",
                        "type": "string",
                        "returned": "success"
                      }
                    }
                  },
                  "Permission": {
                    "description": "Specifies the permission given to the grantee.",
                    "type": "string",
                    "returned": "success"
                  }
                }
              },
              "Owner": {
                "description": "Bucket owner information.",
                "type": "dictionary",
                "returned": "success",
                "sample": "{\"DisplayName\": \"abc-aws-root+721234567890\", \"ID\": \"1234567890cbc0f1234567890f1234567890c123456789012123456789091234\"}",
                "suboptions": {
                  "DisplayName": {
                    "description": "Bucket owner user display name.",
                    "type": "string",
                    "returned": "success"
                  },
                  "ID": {
                    "description": "Bucket owner user ID.",
                    "type": "string",
                    "returned": "success"
                  }
                }
              }
            }
          },
          "bucket_cors": {
            "description": "Bucket CORS configuration.",
            "type": "complex",
            "returned": "when bucket_facts=true and buckets.bucket_cors=true",
            "suboptions": {
              "CORSRules": {
                "description": "Bucket CORS configuration.",
                "type": "list",
                "returned": "When CORS rules are defined for the bucket",
                "elements": "elements=string",
                "sample": "[]"
              }
            }
          },
          "bucket_encryption": {
            "description": "Bucket encryption configuration.",
            "type": "complex",
            "returned": "when bucket_facts=true and buckets.bucket_encryption=true.",
            "sample": "{\"ServerSideEncryptionConfiguration\": {\"Rules\": [{\"ApplyServerSideEncryptionByDefault\": {\"SSEAlgorithm\": \"AES256\"}, \"BucketKeyEnabled\": true}]}}",
            "suboptions": {
              "ServerSideEncryptionConfiguration": {
                "description": "ServerSideEncryptionConfiguration configuration.",
                "type": "complex",
                "returned": "when encryption is enabled on the bucket.",
                "suboptions": {
                  "Rules": {
                    "description": "List of applied encryptio rules.",
                    "type": "list",
                    "returned": "when encryption is enabled on the bucket.",
                    "elements": "elements=dictionary",
                    "suboptions": {
                      "ApplyServerSideEncryptionByDefault": {
                        "description": "Specifies the default server-side encryption to apply to new objects in the bucket.",
                        "type": "dictionary",
                        "returned": "success",
                        "suboptions": {
                          "KMSMasterKeyID": {
                            "description": "Amazon Web Services Key Management Service (KMS) customer Amazon Web Services KMS key ID to use for the default encryption.",
                            "type": "string",
                            "returned": "success"
                          },
                          "SSEAlgorithm": {
                            "description": "Server-side encryption algorithm to use for the default encryption.",
                            "type": "string",
                            "returned": "success"
                          }
                        }
                      },
                      "BucketKeyEnabled": {
                        "description": "Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket.",
                        "type": "boolean",
                        "returned": "success"
                      }
                    }
                  }
                }
              }
            }
          },
          "bucket_lifecycle_configuration": {
            "description": "Bucket lifecycle configuration settings.",
            "type": "list",
            "returned": "when bucket_facts=true and buckets.bucket_lifecycle_configuration=true.",
            "elements": "elements=dictionary",
            "suboptions": {
              "Rules": {
                "description": "List of lifecycle management rules.",
                "type": "list",
                "returned": "when lifecycle configuration is present.",
                "elements": "elements=string",
                "sample": "[{\"ID\": \"example-rule\", \"Status\": \"Enabled\"}]"
              }
            }
          },
          "bucket_location": {
            "description": "Bucket location.",
            "type": "dictionary",
            "returned": "when bucket_facts=true and buckets.bucket_location=true.",
            "sample": "{\"LocationConstraint\": \"us-east-1\"}",
            "suboptions": {
              "LocationConstraint": {
                "description": "AWS region.",
                "type": "string",
                "returned": "always"
              }
            }
          },
          "bucket_logging": {
            "description": "Server access logging configuration.",
            "type": "complex",
            "returned": "when bucket_facts=true and buckets.bucket_logging=true.",
            "suboptions": {
              "LoggingEnabled": {
                "description": "Server access logging configuration.",
                "type": "complex",
                "returned": "when server access logging is defined for the bucket.",
                "suboptions": {
                  "TargetBucket": {
                    "description": "Target bucket name.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"logging-bucket-name\""
                  },
                  "TargetPrefix": {
                    "description": "Prefix in target bucket.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"\""
                  }
                }
              }
            }
          },
          "bucket_name_filter": {
            "description": "String used to limit buckets. See name_filter.",
            "type": "string",
            "returned": "when name_filter is defined",
            "sample": "\"filter-by-this-string\""
          },
          "bucket_notification_configuration": {
            "description": "Bucket notification settings.",
            "type": "complex",
            "returned": "when bucket_facts=true and buckets.bucket_notification_configuration=true.",
            "suboptions": {
              "TopicConfigurations": {
                "description": "List of notification events configurations.",
                "type": "list",
                "returned": "when at least one notification is configured.",
                "elements": "elements=string",
                "sample": "[{\"Events\": [\"s3:ObjectCreated:Copy\"], \"Filter\": {\"Key\": {\"FilterRules\": [{\"Name\": \"Prefix\", \"Value\": \"test/\"}]}}, \"Id\": \"topic-config-dev001\", \"TopicArn\": \"arn:aws:sns:us-west-1:721234567890:sns-dev001-topic\"}]"
              }
            }
          },
          "bucket_ownership_controls": {
            "description": "Preffered object ownership settings.",
            "type": "complex",
            "returned": "when bucket_facts=true and buckets.bucket_ownership_controls=true",
            "sample": "{\"OwnershipControls\": {\"Rules\": [{\"ObjectOwnership\": \"BucketOwnerEnforced\"}]}}",
            "suboptions": {
              "OwnershipControls": {
                "description": "Object ownership settings.",
                "type": "complex",
                "returned": "when ownership controls are defined for the bucket.",
                "suboptions": {
                  "Rules": {
                    "description": "List of ownership rules.",
                    "type": "list",
                    "returned": "when ownership rule is defined.",
                    "elements": "elements=string"
                  }
                }
              }
            }
          },
          "bucket_policy": {
            "description": "Bucket policy contents.",
            "type": "string",
            "returned": "when bucket_facts=true and buckets.bucket_policy=true.",
            "sample": "\"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"AddCannedAcl\\\",\\\"Effect\\\":\\\"Allow\\\",..}}]}\""
          },
          "bucket_policy_status": {
            "description": "Status of bucket policy.",
            "type": "dictionary",
            "returned": "when bucket_facts=true and buckets.bucket_policy_status=true.",
            "suboptions": {
              "PolicyStatus": {
                "description": "Status of bucket policy.",
                "type": "dictionary",
                "returned": "when bucket policy is present.",
                "suboptions": {
                  "IsPublic": {
                    "description": "Report bucket policy public status.",
                    "type": "boolean",
                    "returned": "when bucket policy is present.",
                    "sample": "true"
                  }
                }
              }
            }
          },
          "bucket_replication": {
            "description": "Replication configuration settings.",
            "type": "complex",
            "returned": "when bucket_facts=true and buckets.bucket_replication=true.",
            "suboptions": {
              "Role": {
                "description": "IAM role used for replication.",
                "type": "string",
                "returned": "when replication rule is defined.",
                "sample": "\"arn:aws:iam::123:role/example-role\""
              },
              "Rules": {
                "description": "List of replication rules.",
                "type": "list",
                "returned": "when replication rule is defined.",
                "elements": "elements=string",
                "sample": "[{\"Filter\": \"{}\", \"ID\": \"rule-1\"}]"
              }
            }
          },
          "bucket_request_payment": {
            "description": "Requester pays setting.",
            "type": "complex",
            "returned": "when bucket_facts=true and buckets.bucket_request_payment=true",
            "sample": "{\"Payer\": \"BucketOwner\"}",
            "suboptions": {
              "Payer": {
                "description": "Current payer.",
                "type": "string",
                "returned": "always"
              }
            }
          },
          "bucket_tagging": {
            "description": "Bucket tags.",
            "type": "dictionary",
            "returned": "when bucket_facts=true and buckets.bucket_tagging=true.",
            "sample": "{\"Tag1\": \"Value1\", \"Tag2\": \"Value2\"}"
          },
          "bucket_versioning": {
            "description": "The versioning state of the bucket. This will also specify whether MFA delete is enabled in the bucket versioning configuration. if only the bucket has been configured with MFA delete.",
            "type": "dictionary",
            "returned": "when bucket_facts=true and buckets.bucket_versioning=true.",
            "sample": "{\"Status\": \"Enabled\"}"
          },
          "bucket_website": {
            "description": "Static website hosting.",
            "type": "complex",
            "returned": "when bucket_facts=true and buckets.bucket_website=true.",
            "suboptions": {
              "ErrorDocument": {
                "description": "Object serving as HTTP error page.",
                "type": "dictionary",
                "returned": "when static website hosting is enabled.",
                "sample": "{\"Key\": \"error.html\"}"
              },
              "IndexDocument": {
                "description": "Object serving as HTTP index page.",
                "type": "dictionary",
                "returned": "when static website hosting is enabled.",
                "sample": "{\"Suffix\": \"error.html\"}"
              },
              "RedirectAllRequestsTo": {
                "description": "Website redict settings.",
                "type": "complex",
                "returned": "when redirect requests is configured.",
                "suboptions": {
                  "HostName": {
                    "description": "Hostname to redirect.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"www.example.com\""
                  },
                  "Protocol": {
                    "description": "Protocol used for redirect.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"https\""
                  }
                }
              }
            }
          },
          "creation_date": {
            "description": "Bucket creation date timestamp.",
            "type": "string",
            "returned": "always",
            "sample": "\"2021-01-21T12:44:10+00:00\""
          },
          "name": {
            "description": "Bucket name.",
            "type": "string",
            "returned": "always",
            "sample": "\"a-testing-bucket-name\""
          },
          "public_access_block": {
            "description": "Bucket public access block configuration.",
            "type": "dictionary",
            "returned": "when bucket_facts=true and buckets.public_access_block=true.",
            "sample": "{\"PublicAccessBlockConfiguration\": {\"BlockPublicAcls\": true, \"BlockPublicPolicy\": true, \"IgnorePublicAcls\": true, \"RestrictPublicBuckets\": true}}",
            "suboptions": {
              "PublicAccessBlockConfiguration": {
                "description": "PublicAccessBlockConfiguration data.",
                "type": "complex",
                "returned": "when PublicAccessBlockConfiguration is defined for the bucket",
                "suboptions": {
                  "BlockPublicAcls": {
                    "description": "BlockPublicAcls setting value.",
                    "type": "boolean",
                    "returned": "success"
                  },
                  "BlockPublicPolicy": {
                    "description": "BlockPublicPolicy setting value.",
                    "type": "boolean",
                    "returned": "success"
                  },
                  "IgnorePublicAcls": {
                    "description": "IgnorePublicAcls setting value.",
                    "type": "boolean",
                    "returned": "success"
                  },
                  "RestrictPublicBuckets": {
                    "description": "RestrictPublicBuckets setting value.",
                    "type": "boolean",
                    "returned": "success"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "s3_object": {
    "description": "Manage objects in S3",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/s3_object_module.html#ansible-collections-amazon-aws-s3-object-module",
    "return_values": {
      "contents": {
        "description": "Contents of the object as string.",
        "type": "string",
        "returned": "(for getstr operation)",
        "sample": "\"Hello, world!\""
      },
      "expiry": {
        "description": "Number of seconds the presigned url is valid for.",
        "type": "integer",
        "returned": "(for geturl operation)",
        "sample": "600"
      },
      "msg": {
        "description": "Message indicating the status of the operation.",
        "type": "string",
        "returned": "always",
        "sample": "\"PUT operation complete\""
      },
      "s3_keys": {
        "description": "List of object keys.",
        "type": "list",
        "returned": "(for list operation)",
        "elements": "elements=string",
        "sample": "[\"prefix1/\", \"prefix1/key1\", \"prefix1/key2\"]"
      },
      "tags": {
        "description": "Tags of the s3 object.",
        "type": "dictionary",
        "returned": "always",
        "sample": "{\"Owner\": \"dev001\", \"env\": \"test\"}"
      },
      "url": {
        "description": "URL of the object.",
        "type": "string",
        "returned": "(for put and geturl operations)",
        "sample": "\"https://my-bucket.s3.amazonaws.com/my-key.txt?AWSAccessKeyId=<access-key>&Expires=1506888865&Signature=<signature>\""
      }
    }
  },
  "s3_object_info": {
    "description": "Gather information about objects in S3",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/s3_object_info_module.html#ansible-collections-amazon-aws-s3-object-info-module",
    "return_values": {
      "object_info": {
        "description": "S3 object details.",
        "type": "list",
        "returned": "when bucket_name and object_name are specified.",
        "elements": "elements=dictionary",
        "suboptions": {
          "object_acl": {
            "description": "Access control list (ACL) of an object.",
            "type": "complex",
            "returned": "when object_details.object_acl=true.",
            "suboptions": {
              "grants": {
                "description": "A list of grants.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "grantee": {
                    "description": "The entity being granted permissions.",
                    "type": "complex",
                    "returned": "always",
                    "suboptions": {
                      "id": {
                        "description": "The canonical user ID of the grantee.",
                        "type": "string",
                        "returned": "always",
                        "sample": "\"xxxxxxxxxxxxxxxxxxx\""
                      },
                      "type": {
                        "description": "type of grantee.",
                        "type": "string",
                        "returned": "always",
                        "sample": "\"CanonicalUser\""
                      }
                    }
                  },
                  "permission": {
                    "description": "Specifies the permission given to the grantee.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"FULL CONTROL\""
                  }
                }
              },
              "owner": {
                "description": "Bucket owner\u2019s display ID and name.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "display_name": {
                    "description": "Bucket owner\u2019s display name.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"abcd\""
                  },
                  "id": {
                    "description": "Bucket owner\u2019s ID.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"xxxxxxxxxxxxxxxxxxxxx\""
                  }
                }
              }
            }
          },
          "object_attributes": {
            "description": "Object attributes.",
            "type": "complex",
            "returned": "when object_details.object_attributes=true.",
            "suboptions": {
              "checksum": {
                "description": "The checksum or digest of the object.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "checksum_crc32": {
                    "description": "The base64-encoded, 32-bit CRC32 checksum of the object.",
                    "type": "string",
                    "returned": "if it was upload with the object.",
                    "sample": "\"xxxxxxxxxxxx\""
                  },
                  "checksum_crc32c": {
                    "description": "The base64-encoded, 32-bit CRC32C checksum of the object.",
                    "type": "string",
                    "returned": "if it was upload with the object.",
                    "sample": "\"xxxxxxxxxxxx\""
                  },
                  "checksum_sha1": {
                    "description": "The base64-encoded, 160-bit SHA-1 digest of the object.",
                    "type": "string",
                    "returned": "if it was upload with the object.",
                    "sample": "\"xxxxxxxxxxxx\""
                  },
                  "checksum_sha256": {
                    "description": "The base64-encoded, 256-bit SHA-256 digest of the object.",
                    "type": "string",
                    "returned": "if it was upload with the object.",
                    "sample": "\"xxxxxxxxxxxx\""
                  }
                }
              },
              "etag": {
                "description": "An ETag is an opaque identifier assigned by a web server to a specific version of a resource found at a URL.",
                "type": "string",
                "returned": "always",
                "sample": "\"8fa34xxxxxxxxxxxxxxxxxxxxx35c6f3b\""
              },
              "last_modified": {
                "description": "The creation date of the object.",
                "type": "string",
                "returned": "always",
                "sample": "\"2022-08-10T01:11:03+00:00\""
              },
              "object_parts": {
                "description": "A collection of parts associated with a multipart upload.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "is_truncated": {
                    "description": "Indicates whether the returned list of parts is truncated.",
                    "type": "boolean",
                    "returned": "always"
                  },
                  "max_parts": {
                    "description": "The maximum number of parts allowed in the response.",
                    "type": "integer",
                    "returned": "always"
                  },
                  "next_part_number_marker": {
                    "description": "When a list is truncated, this element specifies the last part in the list As well as the value to use for the PartNumberMarker request parameter in a subsequent request.",
                    "type": "integer",
                    "returned": "always"
                  },
                  "part_number_marker": {
                    "description": "The marker for the current part.",
                    "type": "integer",
                    "returned": "always"
                  },
                  "total_parts_count": {
                    "description": "The total number of parts.",
                    "type": "integer",
                    "returned": "always"
                  }
                }
              },
              "object_size": {
                "description": "The size of the object in bytes.",
                "type": "integer",
                "returned": "alwayS",
                "sample": "819"
              },
              "parts": {
                "description": "A container for elements related to an individual part.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "checksum_crc32": {
                    "description": "The base64-encoded, 32-bit CRC32 checksum of the object.",
                    "type": "string",
                    "returned": "if it was upload with the object.",
                    "sample": "\"xxxxxxxxxxxx\""
                  },
                  "checksum_crc32c": {
                    "description": "The base64-encoded, 32-bit CRC32C checksum of the object.",
                    "type": "string",
                    "returned": "if it was upload with the object.",
                    "sample": "\"xxxxxxxxxxxx\""
                  },
                  "checksum_sha1": {
                    "description": "The base64-encoded, 160-bit SHA-1 digest of the object.",
                    "type": "string",
                    "returned": "if it was upload with the object.",
                    "sample": "\"xxxxxxxxxxxx\""
                  },
                  "checksum_sha256": {
                    "description": "The base64-encoded, 256-bit SHA-256 digest of the object.",
                    "type": "string",
                    "returned": "if it was upload with the object.",
                    "sample": "\"xxxxxxxxxxxx\""
                  },
                  "part_number": {
                    "description": "The part number identifying the part. This value is a positive integer between 1 and 10,000.",
                    "type": "integer",
                    "returned": "always"
                  },
                  "size": {
                    "description": "The size of the uploaded part in bytes.",
                    "type": "integer",
                    "returned": "always"
                  }
                }
              },
              "storage_class": {
                "description": "The storage class information of the object.",
                "type": "string",
                "returned": "always",
                "sample": "\"STANDARD\""
              }
            }
          },
          "object_data": {
            "description": "A dict containing the metadata of S3 object.",
            "type": "dictionary",
            "returned": "when bucket_name and object_name are specified but object_details is not specified.",
            "suboptions": {
              "accept_ranges": {
                "description": "Indicates that a range of bytes was specified.",
                "type": "string",
                "returned": "always"
              },
              "content_length": {
                "description": "Size of the body (object data) in bytes.",
                "type": "integer",
                "returned": "always"
              },
              "content_type": {
                "description": "A standard MIME type describing the format of the object data.",
                "type": "string",
                "returned": "always"
              },
              "e_tag": {
                "description": "A opaque identifier assigned by a web server to a specific version of a resource found at a URL.",
                "type": "string",
                "returned": "always"
              },
              "last_modified": {
                "description": "Creation date of the object.",
                "type": "string",
                "returned": "always"
              },
              "metadata": {
                "description": "A map of metadata to store with the object in S3.",
                "type": "dictionary",
                "returned": "always"
              },
              "server_side_encryption": {
                "description": "The server-side encryption algorithm used when storing this object in Amazon S3.",
                "type": "string",
                "returned": "always"
              },
              "tag_count": {
                "description": "The number of tags, if any, on the object.",
                "type": "integer",
                "returned": "always"
              }
            }
          },
          "object_legal_hold": {
            "description": "Object\u2019s current legal hold status",
            "type": "complex",
            "returned": "when object_details.object_legal_hold=true and object legal hold is set on the bucket.",
            "suboptions": {
              "legal_hold": {
                "description": "The current legal hold status for the specified object.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "status": {
                    "description": "Indicates whether the specified object has a legal hold in place.",
                    "type": "string",
                    "returned": "always",
                    "sample": "\"ON\""
                  }
                }
              }
            }
          },
          "object_lock_configuration": {
            "description": "Object Lock configuration for a bucket.",
            "type": "complex",
            "returned": "when object_details.object_lock_configuration=true and object lock configuration is set on the bucket.",
            "suboptions": {
              "object_lock_enabled": {
                "description": "Indicates whether this bucket has an Object Lock configuration enabled.",
                "type": "string",
                "returned": "always"
              },
              "rule": {
                "description": "Specifies the Object Lock rule for the specified object.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "default_retention": {
                    "description": "The default Object Lock retention mode and period that you want to apply to new objects placed in the specified bucket.",
                    "type": "complex",
                    "returned": "always",
                    "suboptions": {
                      "days": {
                        "description": "The number of days that you want to specify for the default retention period.",
                        "type": "integer",
                        "returned": "always"
                      },
                      "mode": {
                        "description": "The default Object Lock retention mode you want to apply to new objects placed in the specified bucket. Must be used with either Days or Years.",
                        "type": "string",
                        "returned": "always"
                      },
                      "years": {
                        "description": "The number of years that you want to specify for the default retention period.",
                        "type": "integer",
                        "returned": "always"
                      }
                    }
                  }
                }
              }
            }
          },
          "object_retention": {
            "description": "Object\u2019s retention settings.",
            "type": "complex",
            "returned": "when object_details.object_retention=true and object retention is set on the bucket.",
            "suboptions": {
              "retention": {
                "description": "The container element for an object\u2019s retention settings.",
                "type": "complex",
                "returned": "always",
                "suboptions": {
                  "mode": {
                    "description": "Indicates the Retention mode for the specified object.",
                    "type": "string",
                    "returned": "always"
                  },
                  "retain_until_date": {
                    "description": "The date on which this Object Lock Retention will expire.",
                    "type": "string",
                    "returned": "always"
                  }
                }
              }
            }
          },
          "object_tagging": {
            "description": "The tag-set of an object",
            "type": "dictionary",
            "returned": "when object_details.object_tagging=true."
          }
        }
      },
      "s3_keys": {
        "description": "List of object keys.",
        "type": "list",
        "returned": "when only bucket_name is specified and object_name, object_details are not specified.",
        "elements": "elements=string",
        "sample": "[\"prefix1/\", \"prefix1/key1\", \"prefix1/key2\"]"
      }
    }
  },
  "sts_assume_role": {
    "description": "Assume a role using AWS Security Token Service and obtain temporary credentials",
    "url": "https://docs.ansible.com/ansible/latest/collections/amazon/aws/sts_assume_role_module.html#ansible-collections-amazon-aws-sts-assume-role-module",
    "return_values": {
      "changed": {
        "description": "True if obtaining the credentials succeeds.",
        "type": "boolean",
        "returned": "always"
      },
      "sts_creds": {
        "description": "The temporary security credentials, which include an access key ID, a secret access key, and a security (or session) token.",
        "type": "dictionary",
        "returned": "always",
        "sample": "{\"access_key\": \"XXXXXXXXXXXXXXXXXXXX\", \"expiration\": \"2017-11-11T11:11:11+00:00\", \"secret_key\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \"session_token\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"}"
      },
      "sts_user": {
        "description": "The Amazon Resource Name (ARN) and the assumed role ID.",
        "type": "dictionary",
        "returned": "always",
        "sample": "{\"arn\": \"ARO123EXAMPLE123:Bob\", \"assumed_role_id\": \"arn:aws:sts::123456789012:assumed-role/demo/Bob\"}"
      }
    }
  }
}